// Code generated by skv2. DO NOT EDIT.

package v2

import (
	internal_gloo_solo_io_v2 "github.com/solo-io/solo-apis/client-go/internal.gloo.solo.io/v2"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for IssuedCertificateClient from Clientset
func IssuedCertificateClientFromClientsetProvider(clients internal_gloo_solo_io_v2.Clientset) internal_gloo_solo_io_v2.IssuedCertificateClient {
	return clients.IssuedCertificates()
}

// Provider for IssuedCertificate Client from Client
func IssuedCertificateClientProvider(client client.Client) internal_gloo_solo_io_v2.IssuedCertificateClient {
	return internal_gloo_solo_io_v2.NewIssuedCertificateClient(client)
}

type IssuedCertificateClientFactory func(client client.Client) internal_gloo_solo_io_v2.IssuedCertificateClient

func IssuedCertificateClientFactoryProvider() IssuedCertificateClientFactory {
	return IssuedCertificateClientProvider
}

type IssuedCertificateClientFromConfigFactory func(cfg *rest.Config) (internal_gloo_solo_io_v2.IssuedCertificateClient, error)

func IssuedCertificateClientFromConfigFactoryProvider() IssuedCertificateClientFromConfigFactory {
	return func(cfg *rest.Config) (internal_gloo_solo_io_v2.IssuedCertificateClient, error) {
		clients, err := internal_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.IssuedCertificates(), nil
	}
}

// Provider for CertificateRequestClient from Clientset
func CertificateRequestClientFromClientsetProvider(clients internal_gloo_solo_io_v2.Clientset) internal_gloo_solo_io_v2.CertificateRequestClient {
	return clients.CertificateRequests()
}

// Provider for CertificateRequest Client from Client
func CertificateRequestClientProvider(client client.Client) internal_gloo_solo_io_v2.CertificateRequestClient {
	return internal_gloo_solo_io_v2.NewCertificateRequestClient(client)
}

type CertificateRequestClientFactory func(client client.Client) internal_gloo_solo_io_v2.CertificateRequestClient

func CertificateRequestClientFactoryProvider() CertificateRequestClientFactory {
	return CertificateRequestClientProvider
}

type CertificateRequestClientFromConfigFactory func(cfg *rest.Config) (internal_gloo_solo_io_v2.CertificateRequestClient, error)

func CertificateRequestClientFromConfigFactoryProvider() CertificateRequestClientFromConfigFactory {
	return func(cfg *rest.Config) (internal_gloo_solo_io_v2.CertificateRequestClient, error) {
		clients, err := internal_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.CertificateRequests(), nil
	}
}

// Provider for PodBounceDirectiveClient from Clientset
func PodBounceDirectiveClientFromClientsetProvider(clients internal_gloo_solo_io_v2.Clientset) internal_gloo_solo_io_v2.PodBounceDirectiveClient {
	return clients.PodBounceDirectives()
}

// Provider for PodBounceDirective Client from Client
func PodBounceDirectiveClientProvider(client client.Client) internal_gloo_solo_io_v2.PodBounceDirectiveClient {
	return internal_gloo_solo_io_v2.NewPodBounceDirectiveClient(client)
}

type PodBounceDirectiveClientFactory func(client client.Client) internal_gloo_solo_io_v2.PodBounceDirectiveClient

func PodBounceDirectiveClientFactoryProvider() PodBounceDirectiveClientFactory {
	return PodBounceDirectiveClientProvider
}

type PodBounceDirectiveClientFromConfigFactory func(cfg *rest.Config) (internal_gloo_solo_io_v2.PodBounceDirectiveClient, error)

func PodBounceDirectiveClientFromConfigFactoryProvider() PodBounceDirectiveClientFromConfigFactory {
	return func(cfg *rest.Config) (internal_gloo_solo_io_v2.PodBounceDirectiveClient, error) {
		clients, err := internal_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.PodBounceDirectives(), nil
	}
}

// Provider for XdsConfigClient from Clientset
func XdsConfigClientFromClientsetProvider(clients internal_gloo_solo_io_v2.Clientset) internal_gloo_solo_io_v2.XdsConfigClient {
	return clients.XdsConfigs()
}

// Provider for XdsConfig Client from Client
func XdsConfigClientProvider(client client.Client) internal_gloo_solo_io_v2.XdsConfigClient {
	return internal_gloo_solo_io_v2.NewXdsConfigClient(client)
}

type XdsConfigClientFactory func(client client.Client) internal_gloo_solo_io_v2.XdsConfigClient

func XdsConfigClientFactoryProvider() XdsConfigClientFactory {
	return XdsConfigClientProvider
}

type XdsConfigClientFromConfigFactory func(cfg *rest.Config) (internal_gloo_solo_io_v2.XdsConfigClient, error)

func XdsConfigClientFromConfigFactoryProvider() XdsConfigClientFromConfigFactory {
	return func(cfg *rest.Config) (internal_gloo_solo_io_v2.XdsConfigClient, error) {
		clients, err := internal_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.XdsConfigs(), nil
	}
}

// Provider for DiscoveredGatewayClient from Clientset
func DiscoveredGatewayClientFromClientsetProvider(clients internal_gloo_solo_io_v2.Clientset) internal_gloo_solo_io_v2.DiscoveredGatewayClient {
	return clients.DiscoveredGateways()
}

// Provider for DiscoveredGateway Client from Client
func DiscoveredGatewayClientProvider(client client.Client) internal_gloo_solo_io_v2.DiscoveredGatewayClient {
	return internal_gloo_solo_io_v2.NewDiscoveredGatewayClient(client)
}

type DiscoveredGatewayClientFactory func(client client.Client) internal_gloo_solo_io_v2.DiscoveredGatewayClient

func DiscoveredGatewayClientFactoryProvider() DiscoveredGatewayClientFactory {
	return DiscoveredGatewayClientProvider
}

type DiscoveredGatewayClientFromConfigFactory func(cfg *rest.Config) (internal_gloo_solo_io_v2.DiscoveredGatewayClient, error)

func DiscoveredGatewayClientFromConfigFactoryProvider() DiscoveredGatewayClientFromConfigFactory {
	return func(cfg *rest.Config) (internal_gloo_solo_io_v2.DiscoveredGatewayClient, error) {
		clients, err := internal_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.DiscoveredGateways(), nil
	}
}

// Provider for MeshClient from Clientset
func MeshClientFromClientsetProvider(clients internal_gloo_solo_io_v2.Clientset) internal_gloo_solo_io_v2.MeshClient {
	return clients.Meshes()
}

// Provider for Mesh Client from Client
func MeshClientProvider(client client.Client) internal_gloo_solo_io_v2.MeshClient {
	return internal_gloo_solo_io_v2.NewMeshClient(client)
}

type MeshClientFactory func(client client.Client) internal_gloo_solo_io_v2.MeshClient

func MeshClientFactoryProvider() MeshClientFactory {
	return MeshClientProvider
}

type MeshClientFromConfigFactory func(cfg *rest.Config) (internal_gloo_solo_io_v2.MeshClient, error)

func MeshClientFromConfigFactoryProvider() MeshClientFromConfigFactory {
	return func(cfg *rest.Config) (internal_gloo_solo_io_v2.MeshClient, error) {
		clients, err := internal_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.Meshes(), nil
	}
}

// Provider for DiscoveredCNIClient from Clientset
func DiscoveredCNIClientFromClientsetProvider(clients internal_gloo_solo_io_v2.Clientset) internal_gloo_solo_io_v2.DiscoveredCNIClient {
	return clients.DiscoveredCNIS()
}

// Provider for DiscoveredCNI Client from Client
func DiscoveredCNIClientProvider(client client.Client) internal_gloo_solo_io_v2.DiscoveredCNIClient {
	return internal_gloo_solo_io_v2.NewDiscoveredCNIClient(client)
}

type DiscoveredCNIClientFactory func(client client.Client) internal_gloo_solo_io_v2.DiscoveredCNIClient

func DiscoveredCNIClientFactoryProvider() DiscoveredCNIClientFactory {
	return DiscoveredCNIClientProvider
}

type DiscoveredCNIClientFromConfigFactory func(cfg *rest.Config) (internal_gloo_solo_io_v2.DiscoveredCNIClient, error)

func DiscoveredCNIClientFromConfigFactoryProvider() DiscoveredCNIClientFromConfigFactory {
	return func(cfg *rest.Config) (internal_gloo_solo_io_v2.DiscoveredCNIClient, error) {
		clients, err := internal_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.DiscoveredCNIS(), nil
	}
}

// Provider for PortalConfigClient from Clientset
func PortalConfigClientFromClientsetProvider(clients internal_gloo_solo_io_v2.Clientset) internal_gloo_solo_io_v2.PortalConfigClient {
	return clients.PortalConfigs()
}

// Provider for PortalConfig Client from Client
func PortalConfigClientProvider(client client.Client) internal_gloo_solo_io_v2.PortalConfigClient {
	return internal_gloo_solo_io_v2.NewPortalConfigClient(client)
}

type PortalConfigClientFactory func(client client.Client) internal_gloo_solo_io_v2.PortalConfigClient

func PortalConfigClientFactoryProvider() PortalConfigClientFactory {
	return PortalConfigClientProvider
}

type PortalConfigClientFromConfigFactory func(cfg *rest.Config) (internal_gloo_solo_io_v2.PortalConfigClient, error)

func PortalConfigClientFromConfigFactoryProvider() PortalConfigClientFromConfigFactory {
	return func(cfg *rest.Config) (internal_gloo_solo_io_v2.PortalConfigClient, error) {
		clients, err := internal_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.PortalConfigs(), nil
	}
}

// Provider for ClusterIstioInstallationClient from Clientset
func ClusterIstioInstallationClientFromClientsetProvider(clients internal_gloo_solo_io_v2.Clientset) internal_gloo_solo_io_v2.ClusterIstioInstallationClient {
	return clients.ClusterIstioInstallations()
}

// Provider for ClusterIstioInstallation Client from Client
func ClusterIstioInstallationClientProvider(client client.Client) internal_gloo_solo_io_v2.ClusterIstioInstallationClient {
	return internal_gloo_solo_io_v2.NewClusterIstioInstallationClient(client)
}

type ClusterIstioInstallationClientFactory func(client client.Client) internal_gloo_solo_io_v2.ClusterIstioInstallationClient

func ClusterIstioInstallationClientFactoryProvider() ClusterIstioInstallationClientFactory {
	return ClusterIstioInstallationClientProvider
}

type ClusterIstioInstallationClientFromConfigFactory func(cfg *rest.Config) (internal_gloo_solo_io_v2.ClusterIstioInstallationClient, error)

func ClusterIstioInstallationClientFromConfigFactoryProvider() ClusterIstioInstallationClientFromConfigFactory {
	return func(cfg *rest.Config) (internal_gloo_solo_io_v2.ClusterIstioInstallationClient, error) {
		clients, err := internal_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.ClusterIstioInstallations(), nil
	}
}
