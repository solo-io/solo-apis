// Code generated by skv2. DO NOT EDIT.

//go:generate mockgen -source ./event_handlers.go -destination mocks/event_handlers.go

// Definitions for the Kubernetes Controllers
package controller

import (
	"context"

	admin_gloo_solo_io_v2alpha1 "github.com/solo-io/solo-apis/client-go/admin.gloo.solo.io/v2alpha1"

	"github.com/pkg/errors"
	"github.com/solo-io/skv2/pkg/events"
	"sigs.k8s.io/controller-runtime/pkg/client"
	"sigs.k8s.io/controller-runtime/pkg/manager"
	"sigs.k8s.io/controller-runtime/pkg/predicate"
)

// Handle events for the WaypointLifecycleManager Resource
// DEPRECATED: Prefer reconciler pattern.
type WaypointLifecycleManagerEventHandler interface {
	CreateWaypointLifecycleManager(obj *admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager) error
	UpdateWaypointLifecycleManager(old, new *admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager) error
	DeleteWaypointLifecycleManager(obj *admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager) error
	GenericWaypointLifecycleManager(obj *admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager) error
}

type WaypointLifecycleManagerEventHandlerFuncs struct {
	OnCreate  func(obj *admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager) error
	OnUpdate  func(old, new *admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager) error
	OnDelete  func(obj *admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager) error
	OnGeneric func(obj *admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager) error
}

func (f *WaypointLifecycleManagerEventHandlerFuncs) CreateWaypointLifecycleManager(obj *admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager) error {
	if f.OnCreate == nil {
		return nil
	}
	return f.OnCreate(obj)
}

func (f *WaypointLifecycleManagerEventHandlerFuncs) DeleteWaypointLifecycleManager(obj *admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager) error {
	if f.OnDelete == nil {
		return nil
	}
	return f.OnDelete(obj)
}

func (f *WaypointLifecycleManagerEventHandlerFuncs) UpdateWaypointLifecycleManager(objOld, objNew *admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager) error {
	if f.OnUpdate == nil {
		return nil
	}
	return f.OnUpdate(objOld, objNew)
}

func (f *WaypointLifecycleManagerEventHandlerFuncs) GenericWaypointLifecycleManager(obj *admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager) error {
	if f.OnGeneric == nil {
		return nil
	}
	return f.OnGeneric(obj)
}

type WaypointLifecycleManagerEventWatcher interface {
	AddEventHandler(ctx context.Context, h WaypointLifecycleManagerEventHandler, predicates ...predicate.Predicate) error
}

type waypointLifecycleManagerEventWatcher struct {
	watcher events.EventWatcher
}

func NewWaypointLifecycleManagerEventWatcher(name string, mgr manager.Manager) WaypointLifecycleManagerEventWatcher {
	return &waypointLifecycleManagerEventWatcher{
		watcher: events.NewWatcher(name, mgr, &admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager{}),
	}
}

func (c *waypointLifecycleManagerEventWatcher) AddEventHandler(ctx context.Context, h WaypointLifecycleManagerEventHandler, predicates ...predicate.Predicate) error {
	handler := genericWaypointLifecycleManagerHandler{handler: h}
	if err := c.watcher.Watch(ctx, handler, predicates...); err != nil {
		return err
	}
	return nil
}

// genericWaypointLifecycleManagerHandler implements a generic events.EventHandler
type genericWaypointLifecycleManagerHandler struct {
	handler WaypointLifecycleManagerEventHandler
}

func (h genericWaypointLifecycleManagerHandler) Create(object client.Object) error {
	obj, ok := object.(*admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager)
	if !ok {
		return errors.Errorf("internal error: WaypointLifecycleManager handler received event for %T", object)
	}
	return h.handler.CreateWaypointLifecycleManager(obj)
}

func (h genericWaypointLifecycleManagerHandler) Delete(object client.Object) error {
	obj, ok := object.(*admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager)
	if !ok {
		return errors.Errorf("internal error: WaypointLifecycleManager handler received event for %T", object)
	}
	return h.handler.DeleteWaypointLifecycleManager(obj)
}

func (h genericWaypointLifecycleManagerHandler) Update(old, new client.Object) error {
	objOld, ok := old.(*admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager)
	if !ok {
		return errors.Errorf("internal error: WaypointLifecycleManager handler received event for %T", old)
	}
	objNew, ok := new.(*admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager)
	if !ok {
		return errors.Errorf("internal error: WaypointLifecycleManager handler received event for %T", new)
	}
	return h.handler.UpdateWaypointLifecycleManager(objOld, objNew)
}

func (h genericWaypointLifecycleManagerHandler) Generic(object client.Object) error {
	obj, ok := object.(*admin_gloo_solo_io_v2alpha1.WaypointLifecycleManager)
	if !ok {
		return errors.Errorf("internal error: WaypointLifecycleManager handler received event for %T", object)
	}
	return h.handler.GenericWaypointLifecycleManager(obj)
}
