// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: github.com/solo-io/solo-apis/api/gloo.solo.io/admin/v2/workspace_settings.proto

package v2

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/solo-io/protoc-gen-ext/extproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"

	v2 "github.com/solo-io/solo-apis/client-go/common.gloo.solo.io/v2"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind int32

const (
	// Select objects of all types.
	WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ALL WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind = 0
	// Select RouteTable objects.
	WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ROUTE_TABLE WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind = 1
	// Select Service objects.
	WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_SERVICE WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind = 2
	// Select VirtualDestination objects.
	WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_VIRTUAL_DESTINATION WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind = 3
	// Select ExternalService objects.
	WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_EXTERNAL_SERVICE WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind = 4
	// Select ApiDoc objects. Please note that explicit import/export
	// is only necessary for GraphQL ApiDocs that are referenced in
	// graphql routes. ApiDocs that are used only in the context of the
	// portal features (currently only OpenAPI ones) are implicitly
	// imported/exported together with their corresponding destination,
	// i.e. if a destination (e.g. a service) is visible to a RouteTable,
	// the ApiDoc associated with it will be available when the RouteTable
	// is referenced in a Portal.
	WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_API_DOC WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind = 5
	// Select GraphQLResolverMap objects.
	WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_GRAPHQL_RESOLVER_MAP WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind = 6
	// Select GraphQLSchema objects.
	WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_GRAPHQL_SCHEMA WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind = 7
	// Select GraphQLStitchedSchema objects.
	WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_GRAPHQL_STITCHED_SCHEMA WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind = 8
	// Select ExternalWorkload objects.
	WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_EXTERNAL_WORKLOAD WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind = 9
)

// Enum value maps for WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind.
var (
	WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind_name = map[int32]string{
		0: "ALL",
		1: "ROUTE_TABLE",
		2: "SERVICE",
		3: "VIRTUAL_DESTINATION",
		4: "EXTERNAL_SERVICE",
		5: "API_DOC",
		6: "GRAPHQL_RESOLVER_MAP",
		7: "GRAPHQL_SCHEMA",
		8: "GRAPHQL_STITCHED_SCHEMA",
		9: "EXTERNAL_WORKLOAD",
	}
	WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind_value = map[string]int32{
		"ALL":                     0,
		"ROUTE_TABLE":             1,
		"SERVICE":                 2,
		"VIRTUAL_DESTINATION":     3,
		"EXTERNAL_SERVICE":        4,
		"API_DOC":                 5,
		"GRAPHQL_RESOLVER_MAP":    6,
		"GRAPHQL_SCHEMA":          7,
		"GRAPHQL_STITCHED_SCHEMA": 8,
		"EXTERNAL_WORKLOAD":       9,
	}
)

func (x WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind) Enum() *WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind {
	p := new(WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind)
	*p = x
	return p
}

func (x WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_enumTypes[0].Descriptor()
}

func (WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_enumTypes[0]
}

func (x WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind.Descriptor instead.
func (WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

// `WorkspaceSettings` define a set of workspace-wide parameters such as `importFrom` and `exportTo` for the workspace.
// These settings are commonly defined by the workspace admin. There are 3 key configurations related to `WorkspaceSettings`:
//
// - importFrom: To import resources from another workspace to your workspace, configure the
// `importFrom` field in the `WorkspaceSettings` resource for your workspace.
//
// - exportTo: To export resources in your workspace to other workspaces, configure the `exportTo`
// field in the `WorkspaceSettings` resource for your workspace.
//
// - options: Configure service isolation, federation, proxy trimming and other options for the workspace.
//
// You can specify your workspace's `importFrom` or `exportTo` or other workspace configuration options in your
// `WorkspaceSettings` resource for your workspace. Only one `WorkspaceSettings` resource can be defined for
// each workspace. The resource can be deployed to any of your workspace's namespaces in your workload cluster(s).
//
// Export:
// Only the resources below can be exported to other workspaces:
// - Kubernetes Service
// - VirtualDestination
// - ExternalService
// - RouteTable
// - ApiDoc
// - GraphQLResolverMap
// - GraphQLSchema
// - GraphQLStitchedSchema
//
// You can use the `exportTo` field in the `WorkspaceSettings` resource for the workspace to configure what resources
// are exported to which other workspaces. For example, the `web` application developer can export the RouteTable resource
// from the `web` workspace to an admin-owned gateway workspace.
//
// The following workspace example defines the `backend` workspace. The workspace settings example
// exports the `backend` workspace to any workspaces that matches the label `team: web`.
// In addition, all exported resources from the `backend` workspace are made available
// for any workspace that has the label `team: web` to import.
//
// ```yaml
// apiVersion: admin.gloo.solo.io/v2
// kind: Workspace
// metadata:
//
//	name: backend
//	namespace: gloo-mesh
//	labels:
//	  team: backend
//
// spec:
//
//	workloadClusters:
//	  - namespaces:
//	    - name: backend*
//
// ---
// apiVersion: admin.gloo.solo.io/v2
// kind: WorkspaceSettings
// metadata:
//
//	name: default
//	namespace: backend-namespace
//
// spec:
//
//	exportTo:
//	  - workspaces:
//	    - selector:
//	        team: web
//
// ```
//
// Import:
// To import exported resources from other workspaces, configure the `importFrom` field in
// the `WorkspaceSettings` resource for your workspace.
//
// For example, by importing the `web` workspace, the admin-owned gateway workspace can delegate routing for a subset
// of the gateway traffic to a RouteTable resource in the `web` workspace.
//
// The following workspace defines the `web` workspace. The workspace settings example imports
// the exported resources from the `backend` workspace into the `web` workspace. The exported resources from the
// `backend` workspace is available to the `web` workspace for imports because the `web` workspace
// has the `team:web` label.
// ```yaml
// apiVersion: admin.gloo.solo.io/v2
// kind: Workspace
// metadata:
//
//	name: web
//	namespace: gloo-mesh
//	labels:
//	  team: web
//
// spec:
//
//	workloadClusters:
//	  - namespaces:
//	    - name: web*
//
// ---
// apiVersion: admin.gloo.solo.io/v2
// kind: WorkspaceSettings
// metadata:
//
//	name: default
//	namespace: web-namespace
//
// spec:
//
//	importFrom:
//	  - workspaces:
//	    - name: backend
//
// ```
//
// The following example imports any workspaces that are available for the `web` workspace to import and
// has the `team: backend` label into the `web` workspace. After this is deployed
// in the `web-namepsace` namespace of a given workload cluster that are part of the workspace,
// all exported resources from the `backend` workspaces which has the label `team: backend`
// are imported into the `web` workspace and available for use by anything in the `web` workspace.
// ```yaml
// apiVersion: admin.gloo.solo.io/v2
// kind: WorkspaceSettings
// metadata:
//
//	name: default
//	namespace: web-namepsace
//
// spec:
//
//	importFrom:
//	  - workspaces:
//	    - selector:
//	        team: backend
//
// ```
//
// To create global workspace settings that apply to all namespaces in all clusters, you can create a
// WorkspaceSettings resource named `global` in the admin namespace, which is typically `gloo-mesh`.
// If you have multiple workspaces, you must still create one WorkspaceSettings resource per workspaces.
// However, global workspace settings override settings defined in individual workspaces.
type WorkspaceSettingsSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Select the workspaces whose objects will be imported into this workspace.
	// Objects must both be exported by the workspace that is being imported and imported into this workspace in order to be shared across workspaces.
	// Imported objects allow the creation of routes and outbound-communication from one workspace to another.
	// Currently the following types of objects can be imported across workspaces: Kubernetes services, virtual destinations, external destinations, route tables,
	// API schemas, and GraphQL resolver maps.
	// You can select workspace using labels, such as setting `importFrom.workspaces.selector` to `team: backend`.
	// Or select workspace name using exact name match, such as setting `importFrom.workspaces.name` to `backend`.
	// Or select workspace using labels and name using simple regex, such as setting `importFrom.workspaces.selector` to `team: backend` and `importFrom.workspaces.name` to `backend*`.
	ImportFrom []*WorkspaceSettingsSpec_WorkspaceObjectSelector `protobuf:"bytes,1,rep,name=importFrom,proto3" json:"importFrom,omitempty"`
	// A workspace can specify resources to export for use by other workspaces.
	// Currently the following types of objects can be exported across workspaces: Kubernetes services, virtual destinations, external destinations, route tables,
	// API schemas, and GraphQL resolver maps.
	// You can select workspace using labels, such as setting `exportTo.workspaces.selector` to `team: backend`.
	// Or select workspace name using exact name match, such as setting `exportTo.workspaces.name` to `backend`.
	// Or exportTo all other workspaces, such as setting `exportTo.workspaces.name` to `*`.
	// Or select workspace using labels and name using simple regex, such as setting `exportTo.workspaces.selector` to `team: backend` and `team: backend*`.
	// Or select workspace name using labels or select name using simple regex, such as setting `exportTo.workspaces.selector` to `team: backend` and `exportTo.workspaces.name` to `backend`.
	ExportTo []*WorkspaceSettingsSpec_WorkspaceObjectSelector `protobuf:"bytes,2,rep,name=exportTo,proto3" json:"exportTo,omitempty"`
	// Options for configuring the workspace as a whole.
	Options *WorkspaceSettingsSpec_Options `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *WorkspaceSettingsSpec) Reset() {
	*x = WorkspaceSettingsSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceSettingsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceSettingsSpec) ProtoMessage() {}

func (x *WorkspaceSettingsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceSettingsSpec.ProtoReflect.Descriptor instead.
func (*WorkspaceSettingsSpec) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescGZIP(), []int{0}
}

func (x *WorkspaceSettingsSpec) GetImportFrom() []*WorkspaceSettingsSpec_WorkspaceObjectSelector {
	if x != nil {
		return x.ImportFrom
	}
	return nil
}

func (x *WorkspaceSettingsSpec) GetExportTo() []*WorkspaceSettingsSpec_WorkspaceObjectSelector {
	if x != nil {
		return x.ExportTo
	}
	return nil
}

func (x *WorkspaceSettingsSpec) GetOptions() *WorkspaceSettingsSpec_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type WorkspaceSettingsStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The state and workspace conditions of the applied resource.
	Common *v2.Status `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	// The workspace that this workspacesettings object configures.
	Workspace *v2.ObjectReference `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// The number of selected east-west gateways determined by the EastWestGatewaySelector.
	NumSelectedEastWestGateways uint32 `protobuf:"varint,3,opt,name=num_selected_east_west_gateways,json=numSelectedEastWestGateways,proto3" json:"num_selected_east_west_gateways,omitempty"`
	// The number of services federated to this workspace, determined by the workspace settings configuration.
	NumFederatedServices uint32 `protobuf:"varint,4,opt,name=num_federated_services,json=numFederatedServices,proto3" json:"num_federated_services,omitempty"`
}

func (x *WorkspaceSettingsStatus) Reset() {
	*x = WorkspaceSettingsStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceSettingsStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceSettingsStatus) ProtoMessage() {}

func (x *WorkspaceSettingsStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceSettingsStatus.ProtoReflect.Descriptor instead.
func (*WorkspaceSettingsStatus) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescGZIP(), []int{1}
}

func (x *WorkspaceSettingsStatus) GetCommon() *v2.Status {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *WorkspaceSettingsStatus) GetWorkspace() *v2.ObjectReference {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *WorkspaceSettingsStatus) GetNumSelectedEastWestGateways() uint32 {
	if x != nil {
		return x.NumSelectedEastWestGateways
	}
	return 0
}

func (x *WorkspaceSettingsStatus) GetNumFederatedServices() uint32 {
	if x != nil {
		return x.NumFederatedServices
	}
	return 0
}

type WorkspaceSettingsReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspaces map[string]*v2.Report `protobuf:"bytes,1,rep,name=workspaces,proto3" json:"workspaces,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The workspace that this workspacesettings object configures.
	Workspace *v2.ObjectReference `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// A list of selected east-west gateways determined by the EastWestGatewaySelector.
	// The GVK of selected_east_west_gateways is DiscoveredGateway.
	SelectedEastWestGateways []*v2.ObjectReference `protobuf:"bytes,3,rep,name=selected_east_west_gateways,json=selectedEastWestGateways,proto3" json:"selected_east_west_gateways,omitempty"`
	// A list of services federated to this workspace, determined by the workspace settings configuration.
	// The GVK of federated_services is core/v1/Service.
	FederatedServices []*v2.ObjectReference `protobuf:"bytes,4,rep,name=federated_services,json=federatedServices,proto3" json:"federated_services,omitempty"`
}

func (x *WorkspaceSettingsReport) Reset() {
	*x = WorkspaceSettingsReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceSettingsReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceSettingsReport) ProtoMessage() {}

func (x *WorkspaceSettingsReport) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceSettingsReport.ProtoReflect.Descriptor instead.
func (*WorkspaceSettingsReport) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescGZIP(), []int{2}
}

func (x *WorkspaceSettingsReport) GetWorkspaces() map[string]*v2.Report {
	if x != nil {
		return x.Workspaces
	}
	return nil
}

func (x *WorkspaceSettingsReport) GetWorkspace() *v2.ObjectReference {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *WorkspaceSettingsReport) GetSelectedEastWestGateways() []*v2.ObjectReference {
	if x != nil {
		return x.SelectedEastWestGateways
	}
	return nil
}

func (x *WorkspaceSettingsReport) GetFederatedServices() []*v2.ObjectReference {
	if x != nil {
		return x.FederatedServices
	}
	return nil
}

// Select a set of resources from a set of workspaces for import or export.
type WorkspaceSettingsSpec_WorkspaceObjectSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the workspaces with the resources to export to or import.
	Workspaces []*v2.WorkspaceSelector `protobuf:"bytes,1,rep,name=workspaces,proto3" json:"workspaces,omitempty"`
	// the resources (and types of those resources) which will be imported from or exported to the selected workspaces.
	Resources []*WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector) Reset() {
	*x = WorkspaceSettingsSpec_WorkspaceObjectSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceSettingsSpec_WorkspaceObjectSelector) ProtoMessage() {}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceSettingsSpec_WorkspaceObjectSelector.ProtoReflect.Descriptor instead.
func (*WorkspaceSettingsSpec_WorkspaceObjectSelector) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescGZIP(), []int{0, 0}
}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector) GetWorkspaces() []*v2.WorkspaceSelector {
	if x != nil {
		return x.Workspaces
	}
	return nil
}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector) GetResources() []*WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector {
	if x != nil {
		return x.Resources
	}
	return nil
}

type WorkspaceSettingsSpec_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If Enabled, serviceIsolation will automatically block communication from non-importing workspaces into this one, enforced using mTLS.
	// Applying AccessPolicies to destinations in this workspace will override the default service isolation behavior.
	ServiceIsolation *WorkspaceSettingsSpec_Options_ServiceIsolation `protobuf:"bytes,1,opt,name=service_isolation,json=serviceIsolation,proto3" json:"service_isolation,omitempty"`
	// Federation is a feature which allows Kubernetes Services to directly communicate with each other across clusters
	// using generated hostnames. When enabled, federation will generate a hostname for each Service selected, which is
	// reachable by all network clients in the workspace.
	// Federation allows routes to be created in RouteTables which forward traffic across clusters. These routes will otherwise
	// be treated by Gloo Mesh as errors.
	Federation *WorkspaceSettingsSpec_Options_Federation `protobuf:"bytes,2,opt,name=federation,proto3" json:"federation,omitempty"`
	// Selects the eastwest gateways in a workspace. These options are used to select which gateways
	// should be used to route East-West traffic. This traffic can be either passthrough TLS or terminated at the
	// EastWest Gateway. A different port is expected in each case. The `virtual_dest_client_mode` field provides additional
	// information related to this traffic.
	// If no gateways are selected, an attempt will be made to match any service with the label `"istio": "eastwestgateway"`
	// with ports named either "tls" or "https". The selection will fail with an error if the label exists but neither of the
	// ports are defined.
	EastWestGateways []*WorkspaceSettingsSpec_Options_EastWestGatewaySelector `protobuf:"bytes,3,rep,name=east_west_gateways,json=eastWestGateways,proto3" json:"east_west_gateways,omitempty"`
	// Optional: Virtual destination client mode determines how VirtualDestinations will be translated.
	// If nil, the default value of auto mode will be used. Any configuration here can be overriden
	// on any individual virtual destination. The settings defined here apply to both user-provided
	// VirtualDestinations and those generated internally when federation is enabled.
	VirtualDestClientMode *v2.ClientMode `protobuf:"bytes,4,opt,name=virtual_dest_client_mode,json=virtualDestClientMode,proto3" json:"virtual_dest_client_mode,omitempty"`
	// When enabled, trim the outbound config from the Istio sidecar proxies
	// of all destinations in the workspace (including imported destinations).
	// Without the outbound destination config, the Istio sidecar proxies cannot talk to other destinations in the workspace by default.
	// This way, you reduce the size of the proxy config to improve performance.
	// You can add destinations back into the sidecar proxy config
	// by enabling the `serviceIsolation.trimProxyConfig` field in the workspace settings or by using a `TrimProxyConfigPolicy`.
	// The preferred way is the `TrimProxyConfigPolicy`, which gives you more fine-grained control over the allowed destinations than the workspace-wide `serviceIsolation.trimProxyConfig` setting.
	// For more information, see the [Trim proxy config guide](https://docs.solo.io/gloo-mesh-enterprise/2.4.x/resiliency/trim-proxy-config/workspace-service-isolation/).
	TrimAllProxyConfig bool `protobuf:"varint,5,opt,name=trim_all_proxy_config,json=trimAllProxyConfig,proto3" json:"trim_all_proxy_config,omitempty"`
}

func (x *WorkspaceSettingsSpec_Options) Reset() {
	*x = WorkspaceSettingsSpec_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceSettingsSpec_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceSettingsSpec_Options) ProtoMessage() {}

func (x *WorkspaceSettingsSpec_Options) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceSettingsSpec_Options.ProtoReflect.Descriptor instead.
func (*WorkspaceSettingsSpec_Options) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescGZIP(), []int{0, 1}
}

func (x *WorkspaceSettingsSpec_Options) GetServiceIsolation() *WorkspaceSettingsSpec_Options_ServiceIsolation {
	if x != nil {
		return x.ServiceIsolation
	}
	return nil
}

func (x *WorkspaceSettingsSpec_Options) GetFederation() *WorkspaceSettingsSpec_Options_Federation {
	if x != nil {
		return x.Federation
	}
	return nil
}

func (x *WorkspaceSettingsSpec_Options) GetEastWestGateways() []*WorkspaceSettingsSpec_Options_EastWestGatewaySelector {
	if x != nil {
		return x.EastWestGateways
	}
	return nil
}

func (x *WorkspaceSettingsSpec_Options) GetVirtualDestClientMode() *v2.ClientMode {
	if x != nil {
		return x.VirtualDestClientMode
	}
	return nil
}

func (x *WorkspaceSettingsSpec_Options) GetTrimAllProxyConfig() bool {
	if x != nil {
		return x.TrimAllProxyConfig
	}
	return false
}

// selects objects of various types
type WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the resource to import or export.
	// The type must be a valid importable/exportable Kubernetes or Gloo Mesh resource type.
	// Supported types: `ROUTE_TABLE`, `SERVICE`, `VIRTUAL_DESTINATION`, `EXTERNAL_SERVICE`, `API_DOC`, `GRAPHQL_RESOLVER_MAP`, `GRAPHQL_SCHEMA`, `GRAPHQL_STITCHED_SCHEMA`, `EXTERNAL_WORKLOAD`, `ALL` (all types).
	Kind WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind `protobuf:"varint,1,opt,name=kind,proto3,enum=admin.gloo.solo.io.WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind" json:"kind,omitempty"`
	// labels matching those of the object
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Only select objects exactly matching the name. If omitted, Gloo selects
	// matching objects with any name available in the workspace.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Only select objects exactly matching the namespace. If omitted, Gloo selects
	// matching objects across all namespaces available in the workspace.
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Only select objects in the exactly matching cluster. If omitted, Gloo selects
	// matching objects across all clusters available in the workspace.
	Cluster string `protobuf:"bytes,5,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector) Reset() {
	*x = WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector) ProtoMessage() {}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector.ProtoReflect.Descriptor instead.
func (*WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector) GetKind() WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind {
	if x != nil {
		return x.Kind
	}
	return WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ALL
}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

type WorkspaceSettingsSpec_Options_ServiceIsolation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Automatically enables strict mTLS and blocks any access from non-importing workspaces into any destination in the current workspaces.
	// Default value is disabled.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// When enabled, trim the outbound config from the Istio sidecar proxies for any destination outside the workspace.
	// The sidecar proxies keep the configuration for all destinations in the workspace (including imported destinations).
	// To trim proxies for specific destinations with the workspace, you can use the `TrimProxyConfigPolicy` instead.
	TrimProxyConfig *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=trim_proxy_config,json=trimProxyConfig,proto3" json:"trim_proxy_config,omitempty"`
	// Optional: When NetworkPolicy translation is enabled, by default, all available layers will be used to enforce Service Isolation.
	// You can optionally explicitly define which available layers will enforce Service Isolation. Only the layers set here will be used.
	EnforcementLayers *v2.EnforcementLayers `protobuf:"bytes,3,opt,name=enforcement_layers,json=enforcementLayers,proto3" json:"enforcement_layers,omitempty"`
}

func (x *WorkspaceSettingsSpec_Options_ServiceIsolation) Reset() {
	*x = WorkspaceSettingsSpec_Options_ServiceIsolation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceSettingsSpec_Options_ServiceIsolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceSettingsSpec_Options_ServiceIsolation) ProtoMessage() {}

func (x *WorkspaceSettingsSpec_Options_ServiceIsolation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceSettingsSpec_Options_ServiceIsolation.ProtoReflect.Descriptor instead.
func (*WorkspaceSettingsSpec_Options_ServiceIsolation) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *WorkspaceSettingsSpec_Options_ServiceIsolation) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *WorkspaceSettingsSpec_Options_ServiceIsolation) GetTrimProxyConfig() *wrapperspb.BoolValue {
	if x != nil {
		return x.TrimProxyConfig
	}
	return nil
}

func (x *WorkspaceSettingsSpec_Options_ServiceIsolation) GetEnforcementLayers() *v2.EnforcementLayers {
	if x != nil {
		return x.EnforcementLayers
	}
	return nil
}

type WorkspaceSettingsSpec_Options_Federation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Enables the federation feature for selected Kubernetes services in the workspace.
	// Default value is disabled.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Optional: The suffix used for generated hostnames. Hostnames will be generated for each selected service in the format `{{ service name }}.{{ service namespace }}.{{ service cluster }}.{{ host suffix }}`.
	HostSuffix string `protobuf:"bytes,2,opt,name=host_suffix,json=hostSuffix,proto3" json:"host_suffix,omitempty"`
	// Selector for the K8s services that will be exposed to cross-cluster traffic within the Workspace.
	// Federated hostnames will be generated for selected imported services.
	ServiceSelector []*v2.ObjectSelector `protobuf:"bytes,3,rep,name=service_selector,json=serviceSelector,proto3" json:"service_selector,omitempty"`
	// if provided, expose only selected ports to cross-cluster traffic.
	Ports []*v2.PortSelector `protobuf:"bytes,4,rep,name=ports,proto3" json:"ports,omitempty"`
}

func (x *WorkspaceSettingsSpec_Options_Federation) Reset() {
	*x = WorkspaceSettingsSpec_Options_Federation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceSettingsSpec_Options_Federation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceSettingsSpec_Options_Federation) ProtoMessage() {}

func (x *WorkspaceSettingsSpec_Options_Federation) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceSettingsSpec_Options_Federation.ProtoReflect.Descriptor instead.
func (*WorkspaceSettingsSpec_Options_Federation) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *WorkspaceSettingsSpec_Options_Federation) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *WorkspaceSettingsSpec_Options_Federation) GetHostSuffix() string {
	if x != nil {
		return x.HostSuffix
	}
	return ""
}

func (x *WorkspaceSettingsSpec_Options_Federation) GetServiceSelector() []*v2.ObjectSelector {
	if x != nil {
		return x.ServiceSelector
	}
	return nil
}

func (x *WorkspaceSettingsSpec_Options_Federation) GetPorts() []*v2.PortSelector {
	if x != nil {
		return x.Ports
	}
	return nil
}

type WorkspaceSettingsSpec_Options_EastWestGatewaySelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Evaluated against the discovered Istio gateway services.
	// When this field is blank, gateway services will be matched using the default labels described
	// on the `east_west_gateways` field.
	Selector *v2.ObjectSelector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	// Used to match tls port on gateway service.
	// Traffic on this port will be used for passthrough TLS, as described on the `virtual_dest_client_mode` field.
	// Default matches ports named "tls".
	// Matching is done by both the port name as well as the port number.
	// A match is required for either `port` or `tls_termination_port`, otherwise an error will be reported.
	Port *v2.PortSelector `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	// Used to match tls termination port on gateway service.
	// Traffic on this port will be used for TLS-terminated traffic, as described on the `virtual_dest_client_mode` field.
	// Default matches ports named "https".
	// Matching is done by both the port name as well as the port number.
	// A match is required for either `port` or `tls_termination_port`, otherwise an error will be reported.
	TlsTerminationPort *v2.PortSelector `protobuf:"bytes,4,opt,name=tls_termination_port,json=tlsTerminationPort,proto3" json:"tls_termination_port,omitempty"`
	// Host information for an east-west gateway. Can be used to specify a set of routable
	// destinations that proxy traffic back to the east-west gateway selected
	// by the selector. Useful when a load balancer external to the mesh is being
	// used. When using this feature, be careful to ensure that the selectors are
	// granular enough to ensure that the correct HostInfo is mapped to the proper gateway.
	HostInfoOverrides []*WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo `protobuf:"bytes,3,rep,name=host_info_overrides,json=hostInfoOverrides,proto3" json:"host_info_overrides,omitempty"`
}

func (x *WorkspaceSettingsSpec_Options_EastWestGatewaySelector) Reset() {
	*x = WorkspaceSettingsSpec_Options_EastWestGatewaySelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceSettingsSpec_Options_EastWestGatewaySelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceSettingsSpec_Options_EastWestGatewaySelector) ProtoMessage() {}

func (x *WorkspaceSettingsSpec_Options_EastWestGatewaySelector) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceSettingsSpec_Options_EastWestGatewaySelector.ProtoReflect.Descriptor instead.
func (*WorkspaceSettingsSpec_Options_EastWestGatewaySelector) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescGZIP(), []int{0, 1, 2}
}

func (x *WorkspaceSettingsSpec_Options_EastWestGatewaySelector) GetSelector() *v2.ObjectSelector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *WorkspaceSettingsSpec_Options_EastWestGatewaySelector) GetPort() *v2.PortSelector {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *WorkspaceSettingsSpec_Options_EastWestGatewaySelector) GetTlsTerminationPort() *v2.PortSelector {
	if x != nil {
		return x.TlsTerminationPort
	}
	return nil
}

func (x *WorkspaceSettingsSpec_Options_EastWestGatewaySelector) GetHostInfoOverrides() []*WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo {
	if x != nil {
		return x.HostInfoOverrides
	}
	return nil
}

// Specify Host Info to override discovered routing information for an east-west gateway.
type WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to be used to direct traffic to instead of the default gateway discovered address.
	// Can be an IP address or hostname.
	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	// Port to be used to direct traffic to instead of the default gateway discovered port.
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo) Reset() {
	*x = WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo) ProtoMessage() {}

func (x *WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo.ProtoReflect.Descriptor instead.
func (*WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescGZIP(), []int{0, 1, 2, 0}
}

func (x *WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

var File_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto protoreflect.FileDescriptor

var file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDesc = []byte{
	0x0a, 0x5a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x1a, 0x12, 0x65, 0x78, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65,
	0x73, 0x68, 0x2d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x6d,
	0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x5b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c,
	0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x6e,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d,
	0x6d, 0x65, 0x73, 0x68, 0x2d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d,
	0x65, 0x73, 0x68, 0x2d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x52, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67,
	0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d,
	0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2d, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x76, 0x32, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x87, 0x13, 0x0a, 0x15, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x61, 0x0a, 0x0a, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x5d, 0x0a, 0x08,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x12, 0x4b, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xba, 0x06, 0x0a, 0x17, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x73, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x55, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x1a, 0xe1, 0x04, 0x0a, 0x13, 0x54, 0x79, 0x70, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x74, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x60, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x70,
	0x65, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x79, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x61, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xd1, 0x01, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x4f, 0x55,
	0x54, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x49, 0x52, 0x54, 0x55,
	0x41, 0x4c, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x43, 0x45, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x5f, 0x44, 0x4f,
	0x43, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x52, 0x41, 0x50, 0x48, 0x51, 0x4c, 0x5f, 0x52,
	0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x50, 0x10, 0x06, 0x12, 0x12, 0x0a,
	0x0e, 0x47, 0x52, 0x41, 0x50, 0x48, 0x51, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x10,
	0x07, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x52, 0x41, 0x50, 0x48, 0x51, 0x4c, 0x5f, 0x53, 0x54, 0x49,
	0x54, 0x43, 0x48, 0x45, 0x44, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x10, 0x08, 0x12, 0x15,
	0x0a, 0x11, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x4c,
	0x4f, 0x41, 0x44, 0x10, 0x09, 0x1a, 0xa1, 0x0a, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x6f, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x73, 0x6f,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x0a, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x77, 0x0a, 0x12, 0x65, 0x61, 0x73, 0x74, 0x5f, 0x77, 0x65, 0x73, 0x74, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x45, 0x61, 0x73, 0x74, 0x57, 0x65, 0x73, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x65, 0x61, 0x73, 0x74, 0x57, 0x65, 0x73,
	0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x12, 0x58, 0x0a, 0x18, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x15, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x74, 0x72, 0x69, 0x6d, 0x5f, 0x61, 0x6c, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x74, 0x72, 0x69, 0x6d, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0xcb, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x11, 0x74, 0x72, 0x69, 0x6d, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x74, 0x72,
	0x69, 0x6d, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x55, 0x0a,
	0x12, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x52, 0x11, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x1a, 0xd0, 0x01, 0x0a, 0x0a, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x4e,
	0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x37,
	0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0x9f, 0x03, 0x0a, 0x17, 0x45, 0x61, 0x73, 0x74,
	0x57, 0x65, 0x73, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x53, 0x0a, 0x14, 0x74,
	0x6c, 0x73, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x12, 0x74, 0x6c,
	0x73, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x82, 0x01, 0x0a, 0x13, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x45, 0x61, 0x73, 0x74, 0x57, 0x65, 0x73, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x11, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x73, 0x1a, 0x32, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x8e, 0x02, 0x0a, 0x17, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x44,
	0x0a, 0x1f, 0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x65,
	0x61, 0x73, 0x74, 0x5f, 0x77, 0x65, 0x73, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1b, 0x6e, 0x75, 0x6d, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x45, 0x61, 0x73, 0x74, 0x57, 0x65, 0x73, 0x74, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x75, 0x6d, 0x5f, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xd0, 0x03, 0x0a, 0x17, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x5b, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x1b, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x65, 0x61, 0x73, 0x74, 0x5f, 0x77, 0x65, 0x73, 0x74, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x18, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x61, 0x73, 0x74,
	0x57, 0x65, 0x73, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x12, 0x53, 0x0a, 0x12,
	0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x11,
	0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x5a, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x53, 0x5a,
	0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f,
	0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x32, 0xc0, 0xf5, 0x04, 0x01, 0xb8, 0xf5, 0x04, 0x01, 0xd0, 0xf5,
	0x04, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescData = file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDesc
)

func file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescData)
	})
	return file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDescData
}

var file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_goTypes = []interface{}{
	(WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector_ObjectKind)(0), // 0: admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector.TypedObjectSelector.ObjectKind
	(*WorkspaceSettingsSpec)(nil),                                             // 1: admin.gloo.solo.io.WorkspaceSettingsSpec
	(*WorkspaceSettingsStatus)(nil),                                           // 2: admin.gloo.solo.io.WorkspaceSettingsStatus
	(*WorkspaceSettingsReport)(nil),                                           // 3: admin.gloo.solo.io.WorkspaceSettingsReport
	(*WorkspaceSettingsSpec_WorkspaceObjectSelector)(nil),                     // 4: admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector
	(*WorkspaceSettingsSpec_Options)(nil),                                     // 5: admin.gloo.solo.io.WorkspaceSettingsSpec.Options
	(*WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector)(nil), // 6: admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector.TypedObjectSelector
	nil, // 7: admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector.TypedObjectSelector.LabelsEntry
	(*WorkspaceSettingsSpec_Options_ServiceIsolation)(nil),                 // 8: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.ServiceIsolation
	(*WorkspaceSettingsSpec_Options_Federation)(nil),                       // 9: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.Federation
	(*WorkspaceSettingsSpec_Options_EastWestGatewaySelector)(nil),          // 10: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.EastWestGatewaySelector
	(*WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo)(nil), // 11: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.EastWestGatewaySelector.HostInfo
	nil,                          // 12: admin.gloo.solo.io.WorkspaceSettingsReport.WorkspacesEntry
	(*v2.Status)(nil),            // 13: common.gloo.solo.io.Status
	(*v2.ObjectReference)(nil),   // 14: common.gloo.solo.io.ObjectReference
	(*v2.WorkspaceSelector)(nil), // 15: common.gloo.solo.io.WorkspaceSelector
	(*v2.ClientMode)(nil),        // 16: common.gloo.solo.io.ClientMode
	(*wrapperspb.BoolValue)(nil), // 17: google.protobuf.BoolValue
	(*v2.EnforcementLayers)(nil), // 18: common.gloo.solo.io.EnforcementLayers
	(*v2.ObjectSelector)(nil),    // 19: common.gloo.solo.io.ObjectSelector
	(*v2.PortSelector)(nil),      // 20: common.gloo.solo.io.PortSelector
	(*v2.Report)(nil),            // 21: common.gloo.solo.io.Report
}
var file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_depIdxs = []int32{
	4,  // 0: admin.gloo.solo.io.WorkspaceSettingsSpec.importFrom:type_name -> admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector
	4,  // 1: admin.gloo.solo.io.WorkspaceSettingsSpec.exportTo:type_name -> admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector
	5,  // 2: admin.gloo.solo.io.WorkspaceSettingsSpec.options:type_name -> admin.gloo.solo.io.WorkspaceSettingsSpec.Options
	13, // 3: admin.gloo.solo.io.WorkspaceSettingsStatus.common:type_name -> common.gloo.solo.io.Status
	14, // 4: admin.gloo.solo.io.WorkspaceSettingsStatus.workspace:type_name -> common.gloo.solo.io.ObjectReference
	12, // 5: admin.gloo.solo.io.WorkspaceSettingsReport.workspaces:type_name -> admin.gloo.solo.io.WorkspaceSettingsReport.WorkspacesEntry
	14, // 6: admin.gloo.solo.io.WorkspaceSettingsReport.workspace:type_name -> common.gloo.solo.io.ObjectReference
	14, // 7: admin.gloo.solo.io.WorkspaceSettingsReport.selected_east_west_gateways:type_name -> common.gloo.solo.io.ObjectReference
	14, // 8: admin.gloo.solo.io.WorkspaceSettingsReport.federated_services:type_name -> common.gloo.solo.io.ObjectReference
	15, // 9: admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector.workspaces:type_name -> common.gloo.solo.io.WorkspaceSelector
	6,  // 10: admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector.resources:type_name -> admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector.TypedObjectSelector
	8,  // 11: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.service_isolation:type_name -> admin.gloo.solo.io.WorkspaceSettingsSpec.Options.ServiceIsolation
	9,  // 12: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.federation:type_name -> admin.gloo.solo.io.WorkspaceSettingsSpec.Options.Federation
	10, // 13: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.east_west_gateways:type_name -> admin.gloo.solo.io.WorkspaceSettingsSpec.Options.EastWestGatewaySelector
	16, // 14: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.virtual_dest_client_mode:type_name -> common.gloo.solo.io.ClientMode
	0,  // 15: admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector.TypedObjectSelector.kind:type_name -> admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector.TypedObjectSelector.ObjectKind
	7,  // 16: admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector.TypedObjectSelector.labels:type_name -> admin.gloo.solo.io.WorkspaceSettingsSpec.WorkspaceObjectSelector.TypedObjectSelector.LabelsEntry
	17, // 17: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.ServiceIsolation.trim_proxy_config:type_name -> google.protobuf.BoolValue
	18, // 18: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.ServiceIsolation.enforcement_layers:type_name -> common.gloo.solo.io.EnforcementLayers
	19, // 19: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.Federation.service_selector:type_name -> common.gloo.solo.io.ObjectSelector
	20, // 20: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.Federation.ports:type_name -> common.gloo.solo.io.PortSelector
	19, // 21: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.EastWestGatewaySelector.selector:type_name -> common.gloo.solo.io.ObjectSelector
	20, // 22: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.EastWestGatewaySelector.port:type_name -> common.gloo.solo.io.PortSelector
	20, // 23: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.EastWestGatewaySelector.tls_termination_port:type_name -> common.gloo.solo.io.PortSelector
	11, // 24: admin.gloo.solo.io.WorkspaceSettingsSpec.Options.EastWestGatewaySelector.host_info_overrides:type_name -> admin.gloo.solo.io.WorkspaceSettingsSpec.Options.EastWestGatewaySelector.HostInfo
	21, // 25: admin.gloo.solo.io.WorkspaceSettingsReport.WorkspacesEntry.value:type_name -> common.gloo.solo.io.Report
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_init()
}
func file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_init() {
	if File_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceSettingsSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceSettingsStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceSettingsReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceSettingsSpec_WorkspaceObjectSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceSettingsSpec_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceSettingsSpec_WorkspaceObjectSelector_TypedObjectSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceSettingsSpec_Options_ServiceIsolation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceSettingsSpec_Options_Federation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceSettingsSpec_Options_EastWestGatewaySelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceSettingsSpec_Options_EastWestGatewaySelector_HostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto = out.File
	file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_rawDesc = nil
	file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_goTypes = nil
	file_github_com_solo_io_gloo_mesh_solo_apis_api_gloo_solo_io_admin_v2_workspace_settings_proto_depIdxs = nil
}
