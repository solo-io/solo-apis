// Code generated by skv2. DO NOT EDIT.

// This file contains generated Deepcopy methods for proto-based Spec and Status fields

package v2

import (
	proto "github.com/golang/protobuf/proto"
	"github.com/solo-io/protoc-gen-ext/pkg/clone"
)

// DeepCopyInto for the GraphQLStitchedSchema.Spec
func (in *GraphQLStitchedSchemaSpec) DeepCopyInto(out *GraphQLStitchedSchemaSpec) {
	var p *GraphQLStitchedSchemaSpec
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*GraphQLStitchedSchemaSpec)
	} else {
		p = proto.Clone(in).(*GraphQLStitchedSchemaSpec)
	}
	*out = *p
}

// DeepCopyInto for the GraphQLStitchedSchema.Status
func (in *GraphQLStitchedSchemaStatus) DeepCopyInto(out *GraphQLStitchedSchemaStatus) {
	var p *GraphQLStitchedSchemaStatus
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*GraphQLStitchedSchemaStatus)
	} else {
		p = proto.Clone(in).(*GraphQLStitchedSchemaStatus)
	}
	*out = *p
}

// DeepCopyInto for the GraphQLResolverMap.Spec
func (in *GraphQLResolverMapSpec) DeepCopyInto(out *GraphQLResolverMapSpec) {
	var p *GraphQLResolverMapSpec
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*GraphQLResolverMapSpec)
	} else {
		p = proto.Clone(in).(*GraphQLResolverMapSpec)
	}
	*out = *p
}

// DeepCopyInto for the GraphQLResolverMap.Status
func (in *GraphQLResolverMapStatus) DeepCopyInto(out *GraphQLResolverMapStatus) {
	var p *GraphQLResolverMapStatus
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*GraphQLResolverMapStatus)
	} else {
		p = proto.Clone(in).(*GraphQLResolverMapStatus)
	}
	*out = *p
}

// DeepCopyInto for the GraphQLSchema.Spec
func (in *GraphQLSchemaSpec) DeepCopyInto(out *GraphQLSchemaSpec) {
	var p *GraphQLSchemaSpec
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*GraphQLSchemaSpec)
	} else {
		p = proto.Clone(in).(*GraphQLSchemaSpec)
	}
	*out = *p
}

// DeepCopyInto for the GraphQLSchema.Status
func (in *GraphQLSchemaStatus) DeepCopyInto(out *GraphQLSchemaStatus) {
	var p *GraphQLSchemaStatus
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*GraphQLSchemaStatus)
	} else {
		p = proto.Clone(in).(*GraphQLSchemaStatus)
	}
	*out = *p
}

// DeepCopyInto for the ApiDoc.Spec
func (in *ApiDocSpec) DeepCopyInto(out *ApiDocSpec) {
	var p *ApiDocSpec
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*ApiDocSpec)
	} else {
		p = proto.Clone(in).(*ApiDocSpec)
	}
	*out = *p
}

// DeepCopyInto for the ApiDoc.Status
func (in *ApiDocStatus) DeepCopyInto(out *ApiDocStatus) {
	var p *ApiDocStatus
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*ApiDocStatus)
	} else {
		p = proto.Clone(in).(*ApiDocStatus)
	}
	*out = *p
}

// DeepCopyInto for the Portal.Spec
func (in *PortalSpec) DeepCopyInto(out *PortalSpec) {
	var p *PortalSpec
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*PortalSpec)
	} else {
		p = proto.Clone(in).(*PortalSpec)
	}
	*out = *p
}

// DeepCopyInto for the Portal.Status
func (in *PortalStatus) DeepCopyInto(out *PortalStatus) {
	var p *PortalStatus
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*PortalStatus)
	} else {
		p = proto.Clone(in).(*PortalStatus)
	}
	*out = *p
}

// DeepCopyInto for the PortalGroup.Spec
func (in *PortalGroupSpec) DeepCopyInto(out *PortalGroupSpec) {
	var p *PortalGroupSpec
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*PortalGroupSpec)
	} else {
		p = proto.Clone(in).(*PortalGroupSpec)
	}
	*out = *p
}

// DeepCopyInto for the PortalGroup.Status
func (in *PortalGroupStatus) DeepCopyInto(out *PortalGroupStatus) {
	var p *PortalGroupStatus
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*PortalGroupStatus)
	} else {
		p = proto.Clone(in).(*PortalGroupStatus)
	}
	*out = *p
}

// DeepCopyInto for the ApiProduct.Spec
func (in *ApiProductSpec) DeepCopyInto(out *ApiProductSpec) {
	var p *ApiProductSpec
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*ApiProductSpec)
	} else {
		p = proto.Clone(in).(*ApiProductSpec)
	}
	*out = *p
}

// DeepCopyInto for the ApiProduct.Status
func (in *ApiProductStatus) DeepCopyInto(out *ApiProductStatus) {
	var p *ApiProductStatus
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*ApiProductStatus)
	} else {
		p = proto.Clone(in).(*ApiProductStatus)
	}
	*out = *p
}

// DeepCopyInto for the ApiSchemaDiscovery.Spec
func (in *ApiSchemaDiscoverySpec) DeepCopyInto(out *ApiSchemaDiscoverySpec) {
	var p *ApiSchemaDiscoverySpec
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*ApiSchemaDiscoverySpec)
	} else {
		p = proto.Clone(in).(*ApiSchemaDiscoverySpec)
	}
	*out = *p
}

// DeepCopyInto for the ApiSchemaDiscovery.Status
func (in *ApiSchemaDiscoveryStatus) DeepCopyInto(out *ApiSchemaDiscoveryStatus) {
	var p *ApiSchemaDiscoveryStatus
	if h, ok := interface{}(in).(clone.Cloner); ok {
		p = h.Clone().(*ApiSchemaDiscoveryStatus)
	} else {
		p = proto.Clone(in).(*ApiSchemaDiscoveryStatus)
	}
	*out = *p
}
