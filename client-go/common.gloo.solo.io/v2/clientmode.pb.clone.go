// Code generated by protoc-gen-ext. DO NOT EDIT.
// source: github.com/solo-io/solo-apis/api/gloo.solo.io/common/v2/clientmode.proto

package v2

import (
	"bytes"
	"encoding/binary"
	"errors"
	"fmt"
	"strings"

	"github.com/solo-io/protoc-gen-ext/pkg/clone"
	"google.golang.org/protobuf/proto"

	google_golang_org_protobuf_types_known_emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// ensure the imports are used
var (
	_ = errors.New("")
	_ = fmt.Print
	_ = binary.LittleEndian
	_ = bytes.Compare
	_ = strings.Compare
	_ = clone.Cloner(nil)
	_ = proto.Message(nil)
)

// Clone function
func (m *ClientMode) Clone() proto.Message {
	var target *ClientMode
	if m == nil {
		return target
	}
	target = &ClientMode{}

	switch m.ClientMode.(type) {

	case *ClientMode_Auto:

		if h, ok := interface{}(m.GetAuto()).(clone.Cloner); ok {
			target.ClientMode = &ClientMode_Auto{
				Auto: h.Clone().(*google_golang_org_protobuf_types_known_emptypb.Empty),
			}
		} else {
			target.ClientMode = &ClientMode_Auto{
				Auto: proto.Clone(m.GetAuto()).(*google_golang_org_protobuf_types_known_emptypb.Empty),
			}
		}

	case *ClientMode_SniRouting:

		if h, ok := interface{}(m.GetSniRouting()).(clone.Cloner); ok {
			target.ClientMode = &ClientMode_SniRouting{
				SniRouting: h.Clone().(*google_golang_org_protobuf_types_known_emptypb.Empty),
			}
		} else {
			target.ClientMode = &ClientMode_SniRouting{
				SniRouting: proto.Clone(m.GetSniRouting()).(*google_golang_org_protobuf_types_known_emptypb.Empty),
			}
		}

	case *ClientMode_TlsTermination:

		if h, ok := interface{}(m.GetTlsTermination()).(clone.Cloner); ok {
			target.ClientMode = &ClientMode_TlsTermination{
				TlsTermination: h.Clone().(*google_golang_org_protobuf_types_known_emptypb.Empty),
			}
		} else {
			target.ClientMode = &ClientMode_TlsTermination{
				TlsTermination: proto.Clone(m.GetTlsTermination()).(*google_golang_org_protobuf_types_known_emptypb.Empty),
			}
		}

	}

	return target
}
