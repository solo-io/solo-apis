// Code generated by skv2. DO NOT EDIT.

package v2

import (
	trafficcontrol_policy_gloo_solo_io_v2 "github.com/solo-io/solo-apis/client-go/trafficcontrol.policy.gloo.solo.io/v2"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for MirrorPolicyClient from Clientset
func MirrorPolicyClientFromClientsetProvider(clients trafficcontrol_policy_gloo_solo_io_v2.Clientset) trafficcontrol_policy_gloo_solo_io_v2.MirrorPolicyClient {
	return clients.MirrorPolicies()
}

// Provider for MirrorPolicy Client from Client
func MirrorPolicyClientProvider(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.MirrorPolicyClient {
	return trafficcontrol_policy_gloo_solo_io_v2.NewMirrorPolicyClient(client)
}

type MirrorPolicyClientFactory func(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.MirrorPolicyClient

func MirrorPolicyClientFactoryProvider() MirrorPolicyClientFactory {
	return MirrorPolicyClientProvider
}

type MirrorPolicyClientFromConfigFactory func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.MirrorPolicyClient, error)

func MirrorPolicyClientFromConfigFactoryProvider() MirrorPolicyClientFromConfigFactory {
	return func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.MirrorPolicyClient, error) {
		clients, err := trafficcontrol_policy_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.MirrorPolicies(), nil
	}
}

// Provider for RateLimitPolicyClient from Clientset
func RateLimitPolicyClientFromClientsetProvider(clients trafficcontrol_policy_gloo_solo_io_v2.Clientset) trafficcontrol_policy_gloo_solo_io_v2.RateLimitPolicyClient {
	return clients.RateLimitPolicies()
}

// Provider for RateLimitPolicy Client from Client
func RateLimitPolicyClientProvider(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.RateLimitPolicyClient {
	return trafficcontrol_policy_gloo_solo_io_v2.NewRateLimitPolicyClient(client)
}

type RateLimitPolicyClientFactory func(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.RateLimitPolicyClient

func RateLimitPolicyClientFactoryProvider() RateLimitPolicyClientFactory {
	return RateLimitPolicyClientProvider
}

type RateLimitPolicyClientFromConfigFactory func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.RateLimitPolicyClient, error)

func RateLimitPolicyClientFromConfigFactoryProvider() RateLimitPolicyClientFromConfigFactory {
	return func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.RateLimitPolicyClient, error) {
		clients, err := trafficcontrol_policy_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.RateLimitPolicies(), nil
	}
}

// Provider for RateLimitClientConfigClient from Clientset
func RateLimitClientConfigClientFromClientsetProvider(clients trafficcontrol_policy_gloo_solo_io_v2.Clientset) trafficcontrol_policy_gloo_solo_io_v2.RateLimitClientConfigClient {
	return clients.RateLimitClientConfigs()
}

// Provider for RateLimitClientConfig Client from Client
func RateLimitClientConfigClientProvider(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.RateLimitClientConfigClient {
	return trafficcontrol_policy_gloo_solo_io_v2.NewRateLimitClientConfigClient(client)
}

type RateLimitClientConfigClientFactory func(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.RateLimitClientConfigClient

func RateLimitClientConfigClientFactoryProvider() RateLimitClientConfigClientFactory {
	return RateLimitClientConfigClientProvider
}

type RateLimitClientConfigClientFromConfigFactory func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.RateLimitClientConfigClient, error)

func RateLimitClientConfigClientFromConfigFactoryProvider() RateLimitClientConfigClientFromConfigFactory {
	return func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.RateLimitClientConfigClient, error) {
		clients, err := trafficcontrol_policy_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.RateLimitClientConfigs(), nil
	}
}

// Provider for HeaderManipulationPolicyClient from Clientset
func HeaderManipulationPolicyClientFromClientsetProvider(clients trafficcontrol_policy_gloo_solo_io_v2.Clientset) trafficcontrol_policy_gloo_solo_io_v2.HeaderManipulationPolicyClient {
	return clients.HeaderManipulationPolicies()
}

// Provider for HeaderManipulationPolicy Client from Client
func HeaderManipulationPolicyClientProvider(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.HeaderManipulationPolicyClient {
	return trafficcontrol_policy_gloo_solo_io_v2.NewHeaderManipulationPolicyClient(client)
}

type HeaderManipulationPolicyClientFactory func(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.HeaderManipulationPolicyClient

func HeaderManipulationPolicyClientFactoryProvider() HeaderManipulationPolicyClientFactory {
	return HeaderManipulationPolicyClientProvider
}

type HeaderManipulationPolicyClientFromConfigFactory func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.HeaderManipulationPolicyClient, error)

func HeaderManipulationPolicyClientFromConfigFactoryProvider() HeaderManipulationPolicyClientFromConfigFactory {
	return func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.HeaderManipulationPolicyClient, error) {
		clients, err := trafficcontrol_policy_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.HeaderManipulationPolicies(), nil
	}
}

// Provider for TransformationPolicyClient from Clientset
func TransformationPolicyClientFromClientsetProvider(clients trafficcontrol_policy_gloo_solo_io_v2.Clientset) trafficcontrol_policy_gloo_solo_io_v2.TransformationPolicyClient {
	return clients.TransformationPolicies()
}

// Provider for TransformationPolicy Client from Client
func TransformationPolicyClientProvider(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.TransformationPolicyClient {
	return trafficcontrol_policy_gloo_solo_io_v2.NewTransformationPolicyClient(client)
}

type TransformationPolicyClientFactory func(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.TransformationPolicyClient

func TransformationPolicyClientFactoryProvider() TransformationPolicyClientFactory {
	return TransformationPolicyClientProvider
}

type TransformationPolicyClientFromConfigFactory func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.TransformationPolicyClient, error)

func TransformationPolicyClientFromConfigFactoryProvider() TransformationPolicyClientFromConfigFactory {
	return func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.TransformationPolicyClient, error) {
		clients, err := trafficcontrol_policy_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.TransformationPolicies(), nil
	}
}

// Provider for ProxyProtocolPolicyClient from Clientset
func ProxyProtocolPolicyClientFromClientsetProvider(clients trafficcontrol_policy_gloo_solo_io_v2.Clientset) trafficcontrol_policy_gloo_solo_io_v2.ProxyProtocolPolicyClient {
	return clients.ProxyProtocolPolicies()
}

// Provider for ProxyProtocolPolicy Client from Client
func ProxyProtocolPolicyClientProvider(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.ProxyProtocolPolicyClient {
	return trafficcontrol_policy_gloo_solo_io_v2.NewProxyProtocolPolicyClient(client)
}

type ProxyProtocolPolicyClientFactory func(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.ProxyProtocolPolicyClient

func ProxyProtocolPolicyClientFactoryProvider() ProxyProtocolPolicyClientFactory {
	return ProxyProtocolPolicyClientProvider
}

type ProxyProtocolPolicyClientFromConfigFactory func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.ProxyProtocolPolicyClient, error)

func ProxyProtocolPolicyClientFromConfigFactoryProvider() ProxyProtocolPolicyClientFromConfigFactory {
	return func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.ProxyProtocolPolicyClient, error) {
		clients, err := trafficcontrol_policy_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.ProxyProtocolPolicies(), nil
	}
}

// Provider for HTTPBufferPolicyClient from Clientset
func HTTPBufferPolicyClientFromClientsetProvider(clients trafficcontrol_policy_gloo_solo_io_v2.Clientset) trafficcontrol_policy_gloo_solo_io_v2.HTTPBufferPolicyClient {
	return clients.HTTPBufferPolicies()
}

// Provider for HTTPBufferPolicy Client from Client
func HTTPBufferPolicyClientProvider(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.HTTPBufferPolicyClient {
	return trafficcontrol_policy_gloo_solo_io_v2.NewHTTPBufferPolicyClient(client)
}

type HTTPBufferPolicyClientFactory func(client client.Client) trafficcontrol_policy_gloo_solo_io_v2.HTTPBufferPolicyClient

func HTTPBufferPolicyClientFactoryProvider() HTTPBufferPolicyClientFactory {
	return HTTPBufferPolicyClientProvider
}

type HTTPBufferPolicyClientFromConfigFactory func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.HTTPBufferPolicyClient, error)

func HTTPBufferPolicyClientFromConfigFactoryProvider() HTTPBufferPolicyClientFromConfigFactory {
	return func(cfg *rest.Config) (trafficcontrol_policy_gloo_solo_io_v2.HTTPBufferPolicyClient, error) {
		clients, err := trafficcontrol_policy_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.HTTPBufferPolicies(), nil
	}
}
