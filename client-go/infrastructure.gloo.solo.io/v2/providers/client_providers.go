// Code generated by skv2. DO NOT EDIT.

package v2

import (
	infrastructure_gloo_solo_io_v2 "github.com/solo-io/solo-apis/client-go/infrastructure.gloo.solo.io/v2"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for CloudProviderClient from Clientset
func CloudProviderClientFromClientsetProvider(clients infrastructure_gloo_solo_io_v2.Clientset) infrastructure_gloo_solo_io_v2.CloudProviderClient {
	return clients.CloudProviders()
}

// Provider for CloudProvider Client from Client
func CloudProviderClientProvider(client client.Client) infrastructure_gloo_solo_io_v2.CloudProviderClient {
	return infrastructure_gloo_solo_io_v2.NewCloudProviderClient(client)
}

type CloudProviderClientFactory func(client client.Client) infrastructure_gloo_solo_io_v2.CloudProviderClient

func CloudProviderClientFactoryProvider() CloudProviderClientFactory {
	return CloudProviderClientProvider
}

type CloudProviderClientFromConfigFactory func(cfg *rest.Config) (infrastructure_gloo_solo_io_v2.CloudProviderClient, error)

func CloudProviderClientFromConfigFactoryProvider() CloudProviderClientFromConfigFactory {
	return func(cfg *rest.Config) (infrastructure_gloo_solo_io_v2.CloudProviderClient, error) {
		clients, err := infrastructure_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.CloudProviders(), nil
	}
}

// Provider for CloudResourcesClient from Clientset
func CloudResourcesClientFromClientsetProvider(clients infrastructure_gloo_solo_io_v2.Clientset) infrastructure_gloo_solo_io_v2.CloudResourcesClient {
	return clients.CloudResources()
}

// Provider for CloudResources Client from Client
func CloudResourcesClientProvider(client client.Client) infrastructure_gloo_solo_io_v2.CloudResourcesClient {
	return infrastructure_gloo_solo_io_v2.NewCloudResourcesClient(client)
}

type CloudResourcesClientFactory func(client client.Client) infrastructure_gloo_solo_io_v2.CloudResourcesClient

func CloudResourcesClientFactoryProvider() CloudResourcesClientFactory {
	return CloudResourcesClientProvider
}

type CloudResourcesClientFromConfigFactory func(cfg *rest.Config) (infrastructure_gloo_solo_io_v2.CloudResourcesClient, error)

func CloudResourcesClientFromConfigFactoryProvider() CloudResourcesClientFromConfigFactory {
	return func(cfg *rest.Config) (infrastructure_gloo_solo_io_v2.CloudResourcesClient, error) {
		clients, err := infrastructure_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.CloudResources(), nil
	}
}
