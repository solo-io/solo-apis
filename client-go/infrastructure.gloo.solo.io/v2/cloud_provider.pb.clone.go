// Code generated by protoc-gen-ext. DO NOT EDIT.
// source: github.com/solo-io/solo-apis/api/gloo.solo.io/infrastructure/v2/cloud_provider.proto

package v2

import (
	"bytes"
	"encoding/binary"
	"errors"
	"fmt"
	"strings"

	"github.com/solo-io/protoc-gen-ext/pkg/clone"
	"google.golang.org/protobuf/proto"

	github_com_solo_io_gloo_mesh_solo_apis_client_go_common_gloo_solo_io_v2 "github.com/solo-io/solo-apis/client-go/common.gloo.solo.io/v2"
)

// ensure the imports are used
var (
	_ = errors.New("")
	_ = fmt.Print
	_ = binary.LittleEndian
	_ = bytes.Compare
	_ = strings.Compare
	_ = clone.Cloner(nil)
	_ = proto.Message(nil)
)

// Clone function
func (m *CloudProviderSpec) Clone() proto.Message {
	var target *CloudProviderSpec
	if m == nil {
		return target
	}
	target = &CloudProviderSpec{}

	switch m.Provider.(type) {

	case *CloudProviderSpec_Aws:

		if h, ok := interface{}(m.GetAws()).(clone.Cloner); ok {
			target.Provider = &CloudProviderSpec_Aws{
				Aws: h.Clone().(*AWSProvider),
			}
		} else {
			target.Provider = &CloudProviderSpec_Aws{
				Aws: proto.Clone(m.GetAws()).(*AWSProvider),
			}
		}

	}

	return target
}

// Clone function
func (m *AWSProvider) Clone() proto.Message {
	var target *AWSProvider
	if m == nil {
		return target
	}
	target = &AWSProvider{}

	target.AccountId = m.GetAccountId()

	target.Region = m.GetRegion()

	target.StsEndpoint = m.GetStsEndpoint()

	if h, ok := interface{}(m.GetLambda()).(clone.Cloner); ok {
		target.Lambda = h.Clone().(*AWSProvider_LambdaOptions)
	} else {
		target.Lambda = proto.Clone(m.GetLambda()).(*AWSProvider_LambdaOptions)
	}

	return target
}

// Clone function
func (m *CloudProviderStatus) Clone() proto.Message {
	var target *CloudProviderStatus
	if m == nil {
		return target
	}
	target = &CloudProviderStatus{}

	if h, ok := interface{}(m.GetCommon()).(clone.Cloner); ok {
		target.Common = h.Clone().(*github_com_solo_io_gloo_mesh_solo_apis_client_go_common_gloo_solo_io_v2.Status)
	} else {
		target.Common = proto.Clone(m.GetCommon()).(*github_com_solo_io_gloo_mesh_solo_apis_client_go_common_gloo_solo_io_v2.Status)
	}

	if m.GetNumAppliedRoutableFunctions() != nil {
		target.NumAppliedRoutableFunctions = make(map[string]uint32, len(m.GetNumAppliedRoutableFunctions()))
		for k, v := range m.GetNumAppliedRoutableFunctions() {

			target.NumAppliedRoutableFunctions[k] = v

		}
	}

	target.NumChildCloudResources = m.GetNumChildCloudResources()

	return target
}

// Clone function
func (m *CloudProviderReport) Clone() proto.Message {
	var target *CloudProviderReport
	if m == nil {
		return target
	}
	target = &CloudProviderReport{}

	if h, ok := interface{}(m.GetReport()).(clone.Cloner); ok {
		target.Report = h.Clone().(*github_com_solo_io_gloo_mesh_solo_apis_client_go_common_gloo_solo_io_v2.Report)
	} else {
		target.Report = proto.Clone(m.GetReport()).(*github_com_solo_io_gloo_mesh_solo_apis_client_go_common_gloo_solo_io_v2.Report)
	}

	if m.GetAppliedRoutableFunctions() != nil {
		target.AppliedRoutableFunctions = make(map[string]*CloudProviderReport_LambdaFunctions, len(m.GetAppliedRoutableFunctions()))
		for k, v := range m.GetAppliedRoutableFunctions() {

			if h, ok := interface{}(v).(clone.Cloner); ok {
				target.AppliedRoutableFunctions[k] = h.Clone().(*CloudProviderReport_LambdaFunctions)
			} else {
				target.AppliedRoutableFunctions[k] = proto.Clone(v).(*CloudProviderReport_LambdaFunctions)
			}

		}
	}

	if m.GetChildCloudResources() != nil {
		target.ChildCloudResources = make([]*github_com_solo_io_gloo_mesh_solo_apis_client_go_common_gloo_solo_io_v2.ObjectReference, len(m.GetChildCloudResources()))
		for idx, v := range m.GetChildCloudResources() {

			if h, ok := interface{}(v).(clone.Cloner); ok {
				target.ChildCloudResources[idx] = h.Clone().(*github_com_solo_io_gloo_mesh_solo_apis_client_go_common_gloo_solo_io_v2.ObjectReference)
			} else {
				target.ChildCloudResources[idx] = proto.Clone(v).(*github_com_solo_io_gloo_mesh_solo_apis_client_go_common_gloo_solo_io_v2.ObjectReference)
			}

		}
	}

	return target
}

// Clone function
func (m *AWSProvider_LambdaOptions) Clone() proto.Message {
	var target *AWSProvider_LambdaOptions
	if m == nil {
		return target
	}
	target = &AWSProvider_LambdaOptions{}

	target.InvokeRoleName = m.GetInvokeRoleName()

	if h, ok := interface{}(m.GetDiscovery()).(clone.Cloner); ok {
		target.Discovery = h.Clone().(*AWSProvider_LambdaOptions_LambdaDiscovery)
	} else {
		target.Discovery = proto.Clone(m.GetDiscovery()).(*AWSProvider_LambdaOptions_LambdaDiscovery)
	}

	return target
}

// Clone function
func (m *AWSProvider_LambdaOptions_LambdaDiscovery) Clone() proto.Message {
	var target *AWSProvider_LambdaOptions_LambdaDiscovery
	if m == nil {
		return target
	}
	target = &AWSProvider_LambdaOptions_LambdaDiscovery{}

	target.Enabled = m.GetEnabled()

	target.RoleName = m.GetRoleName()

	if h, ok := interface{}(m.GetFilter()).(clone.Cloner); ok {
		target.Filter = h.Clone().(*AWSProvider_LambdaOptions_LambdaDiscovery_LambdaFilter)
	} else {
		target.Filter = proto.Clone(m.GetFilter()).(*AWSProvider_LambdaOptions_LambdaDiscovery_LambdaFilter)
	}

	return target
}

// Clone function
func (m *AWSProvider_LambdaOptions_LambdaDiscovery_LambdaFilter) Clone() proto.Message {
	var target *AWSProvider_LambdaOptions_LambdaDiscovery_LambdaFilter
	if m == nil {
		return target
	}
	target = &AWSProvider_LambdaOptions_LambdaDiscovery_LambdaFilter{}

	if m.GetNames() != nil {
		target.Names = make([]string, len(m.GetNames()))
		for idx, v := range m.GetNames() {

			target.Names[idx] = v

		}
	}

	target.LatestOnly = m.GetLatestOnly()

	return target
}

// Clone function
func (m *CloudProviderReport_LambdaFunctions) Clone() proto.Message {
	var target *CloudProviderReport_LambdaFunctions
	if m == nil {
		return target
	}
	target = &CloudProviderReport_LambdaFunctions{}

	if m.GetFunctions() != nil {
		target.Functions = make([]string, len(m.GetFunctions()))
		for idx, v := range m.GetFunctions() {

			target.Functions[idx] = v

		}
	}

	return target
}
