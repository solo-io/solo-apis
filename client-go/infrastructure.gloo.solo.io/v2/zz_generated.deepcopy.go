// Code generated by skv2. DO NOT EDIT.

// This file contains generated Deepcopy methods for infrastructure.gloo.solo.io/v2 resources

package v2

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// Generated Deepcopy methods for CloudProvider

func (in *CloudProvider) DeepCopyInto(out *CloudProvider) {
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	// deepcopy spec
	in.Spec.DeepCopyInto(&out.Spec)
	// deepcopy status
	in.Status.DeepCopyInto(&out.Status)

	return
}

func (in *CloudProvider) DeepCopy() *CloudProvider {
	if in == nil {
		return nil
	}
	out := new(CloudProvider)
	in.DeepCopyInto(out)
	return out
}

func (in *CloudProvider) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *CloudProviderList) DeepCopyInto(out *CloudProviderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CloudProvider, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

func (in *CloudProviderList) DeepCopy() *CloudProviderList {
	if in == nil {
		return nil
	}
	out := new(CloudProviderList)
	in.DeepCopyInto(out)
	return out
}

func (in *CloudProviderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// Generated Deepcopy methods for CloudResources

func (in *CloudResources) DeepCopyInto(out *CloudResources) {
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	// deepcopy spec
	in.Spec.DeepCopyInto(&out.Spec)

	return
}

func (in *CloudResources) DeepCopy() *CloudResources {
	if in == nil {
		return nil
	}
	out := new(CloudResources)
	in.DeepCopyInto(out)
	return out
}

func (in *CloudResources) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *CloudResourcesList) DeepCopyInto(out *CloudResourcesList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CloudResources, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

func (in *CloudResourcesList) DeepCopy() *CloudResourcesList {
	if in == nil {
		return nil
	}
	out := new(CloudResourcesList)
	in.DeepCopyInto(out)
	return out
}

func (in *CloudResourcesList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}
