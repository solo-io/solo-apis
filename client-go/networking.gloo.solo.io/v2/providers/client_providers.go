// Code generated by skv2. DO NOT EDIT.

package v2

import (
	networking_gloo_solo_io_v2 "github.com/solo-io/solo-apis/client-go/networking.gloo.solo.io/v2"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for CloudProviderClient from Clientset
func CloudProviderClientFromClientsetProvider(clients networking_gloo_solo_io_v2.Clientset) networking_gloo_solo_io_v2.CloudProviderClient {
	return clients.CloudProviders()
}

// Provider for CloudProvider Client from Client
func CloudProviderClientProvider(client client.Client) networking_gloo_solo_io_v2.CloudProviderClient {
	return networking_gloo_solo_io_v2.NewCloudProviderClient(client)
}

type CloudProviderClientFactory func(client client.Client) networking_gloo_solo_io_v2.CloudProviderClient

func CloudProviderClientFactoryProvider() CloudProviderClientFactory {
	return CloudProviderClientProvider
}

type CloudProviderClientFromConfigFactory func(cfg *rest.Config) (networking_gloo_solo_io_v2.CloudProviderClient, error)

func CloudProviderClientFromConfigFactoryProvider() CloudProviderClientFromConfigFactory {
	return func(cfg *rest.Config) (networking_gloo_solo_io_v2.CloudProviderClient, error) {
		clients, err := networking_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.CloudProviders(), nil
	}
}

// Provider for CloudResourcesClient from Clientset
func CloudResourcesClientFromClientsetProvider(clients networking_gloo_solo_io_v2.Clientset) networking_gloo_solo_io_v2.CloudResourcesClient {
	return clients.CloudResources()
}

// Provider for CloudResources Client from Client
func CloudResourcesClientProvider(client client.Client) networking_gloo_solo_io_v2.CloudResourcesClient {
	return networking_gloo_solo_io_v2.NewCloudResourcesClient(client)
}

type CloudResourcesClientFactory func(client client.Client) networking_gloo_solo_io_v2.CloudResourcesClient

func CloudResourcesClientFactoryProvider() CloudResourcesClientFactory {
	return CloudResourcesClientProvider
}

type CloudResourcesClientFromConfigFactory func(cfg *rest.Config) (networking_gloo_solo_io_v2.CloudResourcesClient, error)

func CloudResourcesClientFromConfigFactoryProvider() CloudResourcesClientFromConfigFactory {
	return func(cfg *rest.Config) (networking_gloo_solo_io_v2.CloudResourcesClient, error) {
		clients, err := networking_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.CloudResources(), nil
	}
}

// Provider for ExternalServiceClient from Clientset
func ExternalServiceClientFromClientsetProvider(clients networking_gloo_solo_io_v2.Clientset) networking_gloo_solo_io_v2.ExternalServiceClient {
	return clients.ExternalServices()
}

// Provider for ExternalService Client from Client
func ExternalServiceClientProvider(client client.Client) networking_gloo_solo_io_v2.ExternalServiceClient {
	return networking_gloo_solo_io_v2.NewExternalServiceClient(client)
}

type ExternalServiceClientFactory func(client client.Client) networking_gloo_solo_io_v2.ExternalServiceClient

func ExternalServiceClientFactoryProvider() ExternalServiceClientFactory {
	return ExternalServiceClientProvider
}

type ExternalServiceClientFromConfigFactory func(cfg *rest.Config) (networking_gloo_solo_io_v2.ExternalServiceClient, error)

func ExternalServiceClientFromConfigFactoryProvider() ExternalServiceClientFromConfigFactory {
	return func(cfg *rest.Config) (networking_gloo_solo_io_v2.ExternalServiceClient, error) {
		clients, err := networking_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.ExternalServices(), nil
	}
}

// Provider for ExternalEndpointClient from Clientset
func ExternalEndpointClientFromClientsetProvider(clients networking_gloo_solo_io_v2.Clientset) networking_gloo_solo_io_v2.ExternalEndpointClient {
	return clients.ExternalEndpoints()
}

// Provider for ExternalEndpoint Client from Client
func ExternalEndpointClientProvider(client client.Client) networking_gloo_solo_io_v2.ExternalEndpointClient {
	return networking_gloo_solo_io_v2.NewExternalEndpointClient(client)
}

type ExternalEndpointClientFactory func(client client.Client) networking_gloo_solo_io_v2.ExternalEndpointClient

func ExternalEndpointClientFactoryProvider() ExternalEndpointClientFactory {
	return ExternalEndpointClientProvider
}

type ExternalEndpointClientFromConfigFactory func(cfg *rest.Config) (networking_gloo_solo_io_v2.ExternalEndpointClient, error)

func ExternalEndpointClientFromConfigFactoryProvider() ExternalEndpointClientFromConfigFactory {
	return func(cfg *rest.Config) (networking_gloo_solo_io_v2.ExternalEndpointClient, error) {
		clients, err := networking_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.ExternalEndpoints(), nil
	}
}

// Provider for RouteTableClient from Clientset
func RouteTableClientFromClientsetProvider(clients networking_gloo_solo_io_v2.Clientset) networking_gloo_solo_io_v2.RouteTableClient {
	return clients.RouteTables()
}

// Provider for RouteTable Client from Client
func RouteTableClientProvider(client client.Client) networking_gloo_solo_io_v2.RouteTableClient {
	return networking_gloo_solo_io_v2.NewRouteTableClient(client)
}

type RouteTableClientFactory func(client client.Client) networking_gloo_solo_io_v2.RouteTableClient

func RouteTableClientFactoryProvider() RouteTableClientFactory {
	return RouteTableClientProvider
}

type RouteTableClientFromConfigFactory func(cfg *rest.Config) (networking_gloo_solo_io_v2.RouteTableClient, error)

func RouteTableClientFromConfigFactoryProvider() RouteTableClientFromConfigFactory {
	return func(cfg *rest.Config) (networking_gloo_solo_io_v2.RouteTableClient, error) {
		clients, err := networking_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.RouteTables(), nil
	}
}

// Provider for VirtualDestinationClient from Clientset
func VirtualDestinationClientFromClientsetProvider(clients networking_gloo_solo_io_v2.Clientset) networking_gloo_solo_io_v2.VirtualDestinationClient {
	return clients.VirtualDestinations()
}

// Provider for VirtualDestination Client from Client
func VirtualDestinationClientProvider(client client.Client) networking_gloo_solo_io_v2.VirtualDestinationClient {
	return networking_gloo_solo_io_v2.NewVirtualDestinationClient(client)
}

type VirtualDestinationClientFactory func(client client.Client) networking_gloo_solo_io_v2.VirtualDestinationClient

func VirtualDestinationClientFactoryProvider() VirtualDestinationClientFactory {
	return VirtualDestinationClientProvider
}

type VirtualDestinationClientFromConfigFactory func(cfg *rest.Config) (networking_gloo_solo_io_v2.VirtualDestinationClient, error)

func VirtualDestinationClientFromConfigFactoryProvider() VirtualDestinationClientFromConfigFactory {
	return func(cfg *rest.Config) (networking_gloo_solo_io_v2.VirtualDestinationClient, error) {
		clients, err := networking_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.VirtualDestinations(), nil
	}
}

// Provider for VirtualGatewayClient from Clientset
func VirtualGatewayClientFromClientsetProvider(clients networking_gloo_solo_io_v2.Clientset) networking_gloo_solo_io_v2.VirtualGatewayClient {
	return clients.VirtualGateways()
}

// Provider for VirtualGateway Client from Client
func VirtualGatewayClientProvider(client client.Client) networking_gloo_solo_io_v2.VirtualGatewayClient {
	return networking_gloo_solo_io_v2.NewVirtualGatewayClient(client)
}

type VirtualGatewayClientFactory func(client client.Client) networking_gloo_solo_io_v2.VirtualGatewayClient

func VirtualGatewayClientFactoryProvider() VirtualGatewayClientFactory {
	return VirtualGatewayClientProvider
}

type VirtualGatewayClientFromConfigFactory func(cfg *rest.Config) (networking_gloo_solo_io_v2.VirtualGatewayClient, error)

func VirtualGatewayClientFromConfigFactoryProvider() VirtualGatewayClientFromConfigFactory {
	return func(cfg *rest.Config) (networking_gloo_solo_io_v2.VirtualGatewayClient, error) {
		clients, err := networking_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.VirtualGateways(), nil
	}
}
