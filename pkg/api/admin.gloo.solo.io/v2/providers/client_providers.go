// Code generated by skv2. DO NOT EDIT.

package v2

import (
	admin_gloo_solo_io_v2 "github.com/solo-io/solo-apis/pkg/api/admin.gloo.solo.io/v2"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for WorkspaceClient from Clientset
func WorkspaceClientFromClientsetProvider(clients admin_gloo_solo_io_v2.Clientset) admin_gloo_solo_io_v2.WorkspaceClient {
	return clients.Workspaces()
}

// Provider for Workspace Client from Client
func WorkspaceClientProvider(client client.Client) admin_gloo_solo_io_v2.WorkspaceClient {
	return admin_gloo_solo_io_v2.NewWorkspaceClient(client)
}

type WorkspaceClientFactory func(client client.Client) admin_gloo_solo_io_v2.WorkspaceClient

func WorkspaceClientFactoryProvider() WorkspaceClientFactory {
	return WorkspaceClientProvider
}

type WorkspaceClientFromConfigFactory func(cfg *rest.Config) (admin_gloo_solo_io_v2.WorkspaceClient, error)

func WorkspaceClientFromConfigFactoryProvider() WorkspaceClientFromConfigFactory {
	return func(cfg *rest.Config) (admin_gloo_solo_io_v2.WorkspaceClient, error) {
		clients, err := admin_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.Workspaces(), nil
	}
}

// Provider for WorkspaceSettingsClient from Clientset
func WorkspaceSettingsClientFromClientsetProvider(clients admin_gloo_solo_io_v2.Clientset) admin_gloo_solo_io_v2.WorkspaceSettingsClient {
	return clients.WorkspaceSettings()
}

// Provider for WorkspaceSettings Client from Client
func WorkspaceSettingsClientProvider(client client.Client) admin_gloo_solo_io_v2.WorkspaceSettingsClient {
	return admin_gloo_solo_io_v2.NewWorkspaceSettingsClient(client)
}

type WorkspaceSettingsClientFactory func(client client.Client) admin_gloo_solo_io_v2.WorkspaceSettingsClient

func WorkspaceSettingsClientFactoryProvider() WorkspaceSettingsClientFactory {
	return WorkspaceSettingsClientProvider
}

type WorkspaceSettingsClientFromConfigFactory func(cfg *rest.Config) (admin_gloo_solo_io_v2.WorkspaceSettingsClient, error)

func WorkspaceSettingsClientFromConfigFactoryProvider() WorkspaceSettingsClientFromConfigFactory {
	return func(cfg *rest.Config) (admin_gloo_solo_io_v2.WorkspaceSettingsClient, error) {
		clients, err := admin_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.WorkspaceSettings(), nil
	}
}

// Provider for KubernetesClusterClient from Clientset
func KubernetesClusterClientFromClientsetProvider(clients admin_gloo_solo_io_v2.Clientset) admin_gloo_solo_io_v2.KubernetesClusterClient {
	return clients.KubernetesClusters()
}

// Provider for KubernetesCluster Client from Client
func KubernetesClusterClientProvider(client client.Client) admin_gloo_solo_io_v2.KubernetesClusterClient {
	return admin_gloo_solo_io_v2.NewKubernetesClusterClient(client)
}

type KubernetesClusterClientFactory func(client client.Client) admin_gloo_solo_io_v2.KubernetesClusterClient

func KubernetesClusterClientFactoryProvider() KubernetesClusterClientFactory {
	return KubernetesClusterClientProvider
}

type KubernetesClusterClientFromConfigFactory func(cfg *rest.Config) (admin_gloo_solo_io_v2.KubernetesClusterClient, error)

func KubernetesClusterClientFromConfigFactoryProvider() KubernetesClusterClientFromConfigFactory {
	return func(cfg *rest.Config) (admin_gloo_solo_io_v2.KubernetesClusterClient, error) {
		clients, err := admin_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.KubernetesClusters(), nil
	}
}

// Provider for RootTrustPolicyClient from Clientset
func RootTrustPolicyClientFromClientsetProvider(clients admin_gloo_solo_io_v2.Clientset) admin_gloo_solo_io_v2.RootTrustPolicyClient {
	return clients.RootTrustPolicies()
}

// Provider for RootTrustPolicy Client from Client
func RootTrustPolicyClientProvider(client client.Client) admin_gloo_solo_io_v2.RootTrustPolicyClient {
	return admin_gloo_solo_io_v2.NewRootTrustPolicyClient(client)
}

type RootTrustPolicyClientFactory func(client client.Client) admin_gloo_solo_io_v2.RootTrustPolicyClient

func RootTrustPolicyClientFactoryProvider() RootTrustPolicyClientFactory {
	return RootTrustPolicyClientProvider
}

type RootTrustPolicyClientFromConfigFactory func(cfg *rest.Config) (admin_gloo_solo_io_v2.RootTrustPolicyClient, error)

func RootTrustPolicyClientFromConfigFactoryProvider() RootTrustPolicyClientFromConfigFactory {
	return func(cfg *rest.Config) (admin_gloo_solo_io_v2.RootTrustPolicyClient, error) {
		clients, err := admin_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.RootTrustPolicies(), nil
	}
}

// Provider for ExtAuthServerClient from Clientset
func ExtAuthServerClientFromClientsetProvider(clients admin_gloo_solo_io_v2.Clientset) admin_gloo_solo_io_v2.ExtAuthServerClient {
	return clients.ExtAuthServers()
}

// Provider for ExtAuthServer Client from Client
func ExtAuthServerClientProvider(client client.Client) admin_gloo_solo_io_v2.ExtAuthServerClient {
	return admin_gloo_solo_io_v2.NewExtAuthServerClient(client)
}

type ExtAuthServerClientFactory func(client client.Client) admin_gloo_solo_io_v2.ExtAuthServerClient

func ExtAuthServerClientFactoryProvider() ExtAuthServerClientFactory {
	return ExtAuthServerClientProvider
}

type ExtAuthServerClientFromConfigFactory func(cfg *rest.Config) (admin_gloo_solo_io_v2.ExtAuthServerClient, error)

func ExtAuthServerClientFromConfigFactoryProvider() ExtAuthServerClientFromConfigFactory {
	return func(cfg *rest.Config) (admin_gloo_solo_io_v2.ExtAuthServerClient, error) {
		clients, err := admin_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.ExtAuthServers(), nil
	}
}

// Provider for RateLimitServerSettingsClient from Clientset
func RateLimitServerSettingsClientFromClientsetProvider(clients admin_gloo_solo_io_v2.Clientset) admin_gloo_solo_io_v2.RateLimitServerSettingsClient {
	return clients.RateLimitServerSettings()
}

// Provider for RateLimitServerSettings Client from Client
func RateLimitServerSettingsClientProvider(client client.Client) admin_gloo_solo_io_v2.RateLimitServerSettingsClient {
	return admin_gloo_solo_io_v2.NewRateLimitServerSettingsClient(client)
}

type RateLimitServerSettingsClientFactory func(client client.Client) admin_gloo_solo_io_v2.RateLimitServerSettingsClient

func RateLimitServerSettingsClientFactoryProvider() RateLimitServerSettingsClientFactory {
	return RateLimitServerSettingsClientProvider
}

type RateLimitServerSettingsClientFromConfigFactory func(cfg *rest.Config) (admin_gloo_solo_io_v2.RateLimitServerSettingsClient, error)

func RateLimitServerSettingsClientFromConfigFactoryProvider() RateLimitServerSettingsClientFromConfigFactory {
	return func(cfg *rest.Config) (admin_gloo_solo_io_v2.RateLimitServerSettingsClient, error) {
		clients, err := admin_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.RateLimitServerSettings(), nil
	}
}

// Provider for RateLimitServerConfigClient from Clientset
func RateLimitServerConfigClientFromClientsetProvider(clients admin_gloo_solo_io_v2.Clientset) admin_gloo_solo_io_v2.RateLimitServerConfigClient {
	return clients.RateLimitServerConfigs()
}

// Provider for RateLimitServerConfig Client from Client
func RateLimitServerConfigClientProvider(client client.Client) admin_gloo_solo_io_v2.RateLimitServerConfigClient {
	return admin_gloo_solo_io_v2.NewRateLimitServerConfigClient(client)
}

type RateLimitServerConfigClientFactory func(client client.Client) admin_gloo_solo_io_v2.RateLimitServerConfigClient

func RateLimitServerConfigClientFactoryProvider() RateLimitServerConfigClientFactory {
	return RateLimitServerConfigClientProvider
}

type RateLimitServerConfigClientFromConfigFactory func(cfg *rest.Config) (admin_gloo_solo_io_v2.RateLimitServerConfigClient, error)

func RateLimitServerConfigClientFromConfigFactoryProvider() RateLimitServerConfigClientFromConfigFactory {
	return func(cfg *rest.Config) (admin_gloo_solo_io_v2.RateLimitServerConfigClient, error) {
		clients, err := admin_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.RateLimitServerConfigs(), nil
	}
}

// Provider for DashboardClient from Clientset
func DashboardClientFromClientsetProvider(clients admin_gloo_solo_io_v2.Clientset) admin_gloo_solo_io_v2.DashboardClient {
	return clients.Dashboards()
}

// Provider for Dashboard Client from Client
func DashboardClientProvider(client client.Client) admin_gloo_solo_io_v2.DashboardClient {
	return admin_gloo_solo_io_v2.NewDashboardClient(client)
}

type DashboardClientFactory func(client client.Client) admin_gloo_solo_io_v2.DashboardClient

func DashboardClientFactoryProvider() DashboardClientFactory {
	return DashboardClientProvider
}

type DashboardClientFromConfigFactory func(cfg *rest.Config) (admin_gloo_solo_io_v2.DashboardClient, error)

func DashboardClientFromConfigFactoryProvider() DashboardClientFromConfigFactory {
	return func(cfg *rest.Config) (admin_gloo_solo_io_v2.DashboardClient, error) {
		clients, err := admin_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.Dashboards(), nil
	}
}
