// Code generated by protoc-gen-ext. DO NOT EDIT.
// source: github.com/solo-io/solo-apis/api/gloo-mesh/gloo.solo.io/common/v2/keepalive.proto

package v2

import (
	"bytes"
	"encoding/binary"
	"errors"
	"fmt"
	"strings"

	"github.com/golang/protobuf/proto"
	equality "github.com/solo-io/protoc-gen-ext/pkg/equality"
)

// ensure the imports are used
var (
	_ = errors.New("")
	_ = fmt.Print
	_ = binary.LittleEndian
	_ = bytes.Compare
	_ = strings.Compare
	_ = equality.Equalizer(nil)
	_ = proto.Message(nil)
)

// Equal function
func (m *TCPKeepalive) Equal(that interface{}) bool {
	if that == nil {
		return m == nil
	}

	target, ok := that.(*TCPKeepalive)
	if !ok {
		that2, ok := that.(TCPKeepalive)
		if ok {
			target = &that2
		} else {
			return false
		}
	}
	if target == nil {
		return m == nil
	} else if m == nil {
		return false
	}

	if m.GetProbes() != target.GetProbes() {
		return false
	}

	if h, ok := interface{}(m.GetTime()).(equality.Equalizer); ok {
		if !h.Equal(target.GetTime()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetTime(), target.GetTime()) {
			return false
		}
	}

	if h, ok := interface{}(m.GetInterval()).(equality.Equalizer); ok {
		if !h.Equal(target.GetInterval()) {
			return false
		}
	} else {
		if !proto.Equal(m.GetInterval(), target.GetInterval()) {
			return false
		}
	}

	return true
}
