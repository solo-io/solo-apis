// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.15.8
// source: github.com/solo-io/solo-apis/api/gloo-mesh/gloo.solo.io/internal/v2/portal_config.proto

package v2

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/solo-io/cue/encoding/protobuf/cue"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	v2 "github.com/solo-io/solo-apis/pkg/api/common.gloo.solo.io/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// AuthType is the type of authentication that is used to authorize clients.
type PortalConfigSpec_AuthType int32

const (
	PortalConfigSpec_API_KEY_AUTH PortalConfigSpec_AuthType = 0
	PortalConfigSpec_OIDC         PortalConfigSpec_AuthType = 1
)

// Enum value maps for PortalConfigSpec_AuthType.
var (
	PortalConfigSpec_AuthType_name = map[int32]string{
		0: "API_KEY_AUTH",
		1: "OIDC",
	}
	PortalConfigSpec_AuthType_value = map[string]int32{
		"API_KEY_AUTH": 0,
		"OIDC":         1,
	}
)

func (x PortalConfigSpec_AuthType) Enum() *PortalConfigSpec_AuthType {
	p := new(PortalConfigSpec_AuthType)
	*p = x
	return p
}

func (x PortalConfigSpec_AuthType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortalConfigSpec_AuthType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_enumTypes[0].Descriptor()
}

func (PortalConfigSpec_AuthType) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_enumTypes[0]
}

func (x PortalConfigSpec_AuthType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortalConfigSpec_AuthType.Descriptor instead.
func (PortalConfigSpec_AuthType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP(), []int{0, 0}
}

type PortalConfigSpec_Unit int32

const (
	PortalConfigSpec_UNKNOWN PortalConfigSpec_Unit = 0
	PortalConfigSpec_SECOND  PortalConfigSpec_Unit = 1
	PortalConfigSpec_MINUTE  PortalConfigSpec_Unit = 2
	PortalConfigSpec_HOUR    PortalConfigSpec_Unit = 3
	PortalConfigSpec_DAY     PortalConfigSpec_Unit = 4
)

// Enum value maps for PortalConfigSpec_Unit.
var (
	PortalConfigSpec_Unit_name = map[int32]string{
		0: "UNKNOWN",
		1: "SECOND",
		2: "MINUTE",
		3: "HOUR",
		4: "DAY",
	}
	PortalConfigSpec_Unit_value = map[string]int32{
		"UNKNOWN": 0,
		"SECOND":  1,
		"MINUTE":  2,
		"HOUR":    3,
		"DAY":     4,
	}
)

func (x PortalConfigSpec_Unit) Enum() *PortalConfigSpec_Unit {
	p := new(PortalConfigSpec_Unit)
	*p = x
	return p
}

func (x PortalConfigSpec_Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortalConfigSpec_Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_enumTypes[1].Descriptor()
}

func (PortalConfigSpec_Unit) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_enumTypes[1]
}

func (x PortalConfigSpec_Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortalConfigSpec_Unit.Descriptor instead.
func (PortalConfigSpec_Unit) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP(), []int{0, 1}
}

// PortalConfig is a internal representation of the user facing Portal resource.
// It is used to provide configuration information for a single Portal backend.
// The PortalConfig contains a list of all API resources that are exposed by the Portal,
// the associated usage plans for each API, and all usage plans available
// across the Portal.
type PortalConfigSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Portal level metadata configured by the user in the user facing Portal resource as a JSON value.
	// For information about the value format, see the [Google protocol buffer documentation](https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/value).
	PortalCustomMetadata *_struct.Value `protobuf:"bytes,1,opt,name=portal_custom_metadata,json=portalCustomMetadata,proto3" json:"portal_custom_metadata,omitempty"`
	// The list of API resources that are exposed by the Portal.
	Apis []*PortalConfigSpec_API `protobuf:"bytes,2,rep,name=apis,proto3" json:"apis,omitempty"`
	// The list of usage plans that are available across the Portal.
	UsagePlans []*PortalConfigSpec_UsagePlan `protobuf:"bytes,3,rep,name=usage_plans,json=usagePlans,proto3" json:"usage_plans,omitempty"`
	// Reference to the Portal resource that this PortalConfig resource is derived from.
	PortalRef *v2.ObjectReference `protobuf:"bytes,4,opt,name=portal_ref,json=portalRef,proto3" json:"portal_ref,omitempty"`
	// The domains on which this Portal will be served. The Host header received by the
	// Portal Web App will be matched to one of these domains in order to determine which Portal will be served.
	Domains []string `protobuf:"bytes,5,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *PortalConfigSpec) Reset() {
	*x = PortalConfigSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfigSpec) ProtoMessage() {}

func (x *PortalConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfigSpec.ProtoReflect.Descriptor instead.
func (*PortalConfigSpec) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP(), []int{0}
}

func (x *PortalConfigSpec) GetPortalCustomMetadata() *_struct.Value {
	if x != nil {
		return x.PortalCustomMetadata
	}
	return nil
}

func (x *PortalConfigSpec) GetApis() []*PortalConfigSpec_API {
	if x != nil {
		return x.Apis
	}
	return nil
}

func (x *PortalConfigSpec) GetUsagePlans() []*PortalConfigSpec_UsagePlan {
	if x != nil {
		return x.UsagePlans
	}
	return nil
}

func (x *PortalConfigSpec) GetPortalRef() *v2.ObjectReference {
	if x != nil {
		return x.PortalRef
	}
	return nil
}

func (x *PortalConfigSpec) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

// reflects the status of the PortalConfig resource
type PortalConfigStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObservedGeneration int64 `protobuf:"varint,1,opt,name=observed_generation,json=observedGeneration,proto3" json:"observed_generation,omitempty"`
	// Any error observed which prevented the XdsConfig from being processed.
	// If the error is empty, the request has been processed successfully.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PortalConfigStatus) Reset() {
	*x = PortalConfigStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfigStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfigStatus) ProtoMessage() {}

func (x *PortalConfigStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfigStatus.ProtoReflect.Descriptor instead.
func (*PortalConfigStatus) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP(), []int{1}
}

func (x *PortalConfigStatus) GetObservedGeneration() int64 {
	if x != nil {
		return x.ObservedGeneration
	}
	return 0
}

func (x *PortalConfigStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type PortalConfigNewStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *v2.Status `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *PortalConfigNewStatus) Reset() {
	*x = PortalConfigNewStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfigNewStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfigNewStatus) ProtoMessage() {}

func (x *PortalConfigNewStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfigNewStatus.ProtoReflect.Descriptor instead.
func (*PortalConfigNewStatus) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP(), []int{2}
}

func (x *PortalConfigNewStatus) GetCommon() *v2.Status {
	if x != nil {
		return x.Common
	}
	return nil
}

type PortalConfigReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspaces map[string]*v2.Report `protobuf:"bytes,1,rep,name=workspaces,proto3" json:"workspaces,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PortalConfigReport) Reset() {
	*x = PortalConfigReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfigReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfigReport) ProtoMessage() {}

func (x *PortalConfigReport) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfigReport.ProtoReflect.Descriptor instead.
func (*PortalConfigReport) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP(), []int{3}
}

func (x *PortalConfigReport) GetWorkspaces() map[string]*v2.Report {
	if x != nil {
		return x.Workspaces
	}
	return nil
}

// TODO(jmhbh): Update this doc when we decide to support operation level usage plans.
// An API that is exposed by the Portal. API metadata is sourced from the
// referenced RouteTable and api_schema is a reference to the stitched API schema for the RouteTable.
// Also references a list of usage plan names that are associated with the API.
type PortalConfigSpec_API struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string                           `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description    string                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	TermsOfService string                           `protobuf:"bytes,3,opt,name=terms_of_service,json=termsOfService,proto3" json:"terms_of_service,omitempty"`
	Contact        string                           `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
	License        string                           `protobuf:"bytes,5,opt,name=license,proto3" json:"license,omitempty"`
	ApiSchema      *v2.ObjectReference              `protobuf:"bytes,6,opt,name=api_schema,json=apiSchema,proto3" json:"api_schema,omitempty"`
	RouteTable     *v2.ObjectReference              `protobuf:"bytes,7,opt,name=route_table,json=routeTable,proto3" json:"route_table,omitempty"`
	UsagePlans     []*PortalConfigSpec_UsagePlanRef `protobuf:"bytes,8,rep,name=usage_plans,json=usagePlans,proto3" json:"usage_plans,omitempty"`
}

func (x *PortalConfigSpec_API) Reset() {
	*x = PortalConfigSpec_API{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfigSpec_API) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfigSpec_API) ProtoMessage() {}

func (x *PortalConfigSpec_API) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfigSpec_API.ProtoReflect.Descriptor instead.
func (*PortalConfigSpec_API) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PortalConfigSpec_API) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PortalConfigSpec_API) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PortalConfigSpec_API) GetTermsOfService() string {
	if x != nil {
		return x.TermsOfService
	}
	return ""
}

func (x *PortalConfigSpec_API) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *PortalConfigSpec_API) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *PortalConfigSpec_API) GetApiSchema() *v2.ObjectReference {
	if x != nil {
		return x.ApiSchema
	}
	return nil
}

func (x *PortalConfigSpec_API) GetRouteTable() *v2.ObjectReference {
	if x != nil {
		return x.RouteTable
	}
	return nil
}

func (x *PortalConfigSpec_API) GetUsagePlans() []*PortalConfigSpec_UsagePlanRef {
	if x != nil {
		return x.UsagePlans
	}
	return nil
}

// A usage plan contains a list of auth policies and one rate limit policy.
type PortalConfigSpec_UsagePlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName     string                            `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description     string                            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AuthPolicies    []*PortalConfigSpec_AuthPolicy    `protobuf:"bytes,4,rep,name=auth_policies,json=authPolicies,proto3" json:"auth_policies,omitempty"`
	RateLimitPolicy *PortalConfigSpec_RateLimitPolicy `protobuf:"bytes,5,opt,name=rate_limit_policy,json=rateLimitPolicy,proto3" json:"rate_limit_policy,omitempty"`
}

func (x *PortalConfigSpec_UsagePlan) Reset() {
	*x = PortalConfigSpec_UsagePlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfigSpec_UsagePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfigSpec_UsagePlan) ProtoMessage() {}

func (x *PortalConfigSpec_UsagePlan) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfigSpec_UsagePlan.ProtoReflect.Descriptor instead.
func (*PortalConfigSpec_UsagePlan) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP(), []int{0, 1}
}

func (x *PortalConfigSpec_UsagePlan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PortalConfigSpec_UsagePlan) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *PortalConfigSpec_UsagePlan) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PortalConfigSpec_UsagePlan) GetAuthPolicies() []*PortalConfigSpec_AuthPolicy {
	if x != nil {
		return x.AuthPolicies
	}
	return nil
}

func (x *PortalConfigSpec_UsagePlan) GetRateLimitPolicy() *PortalConfigSpec_RateLimitPolicy {
	if x != nil {
		return x.RateLimitPolicy
	}
	return nil
}

// Reference to a usage plan by name.
type PortalConfigSpec_UsagePlanRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PortalConfigSpec_UsagePlanRef) Reset() {
	*x = PortalConfigSpec_UsagePlanRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfigSpec_UsagePlanRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfigSpec_UsagePlanRef) ProtoMessage() {}

func (x *PortalConfigSpec_UsagePlanRef) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfigSpec_UsagePlanRef.ProtoReflect.Descriptor instead.
func (*PortalConfigSpec_UsagePlanRef) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP(), []int{0, 2}
}

func (x *PortalConfigSpec_UsagePlanRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// An auth policy identified by its authentication type and contains a list of
// unique label selectors that are used to identify the set of clients that
// are authorized to use the auth policy.
type PortalConfigSpec_AuthPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthType          PortalConfigSpec_AuthType             `protobuf:"varint,1,opt,name=auth_type,json=authType,proto3,enum=internal.gloo.solo.io.PortalConfigSpec_AuthType" json:"auth_type,omitempty"`
	AuthLabelSelector []*PortalConfigSpec_AuthLabelSelector `protobuf:"bytes,2,rep,name=auth_label_selector,json=authLabelSelector,proto3" json:"auth_label_selector,omitempty"`
}

func (x *PortalConfigSpec_AuthPolicy) Reset() {
	*x = PortalConfigSpec_AuthPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfigSpec_AuthPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfigSpec_AuthPolicy) ProtoMessage() {}

func (x *PortalConfigSpec_AuthPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfigSpec_AuthPolicy.ProtoReflect.Descriptor instead.
func (*PortalConfigSpec_AuthPolicy) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP(), []int{0, 3}
}

func (x *PortalConfigSpec_AuthPolicy) GetAuthType() PortalConfigSpec_AuthType {
	if x != nil {
		return x.AuthType
	}
	return PortalConfigSpec_API_KEY_AUTH
}

func (x *PortalConfigSpec_AuthPolicy) GetAuthLabelSelector() []*PortalConfigSpec_AuthLabelSelector {
	if x != nil {
		return x.AuthLabelSelector
	}
	return nil
}

type PortalConfigSpec_AuthLabelSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PortalConfigSpec_AuthLabelSelector) Reset() {
	*x = PortalConfigSpec_AuthLabelSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfigSpec_AuthLabelSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfigSpec_AuthLabelSelector) ProtoMessage() {}

func (x *PortalConfigSpec_AuthLabelSelector) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfigSpec_AuthLabelSelector.ProtoReflect.Descriptor instead.
func (*PortalConfigSpec_AuthLabelSelector) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP(), []int{0, 4}
}

func (x *PortalConfigSpec_AuthLabelSelector) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PortalConfigSpec_AuthLabelSelector) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PortalConfigSpec_RateLimitPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit            PortalConfigSpec_Unit `protobuf:"varint,1,opt,name=unit,proto3,enum=internal.gloo.solo.io.PortalConfigSpec_Unit" json:"unit,omitempty"`
	RequestsPerUnit uint32                `protobuf:"varint,2,opt,name=requests_per_unit,json=requestsPerUnit,proto3" json:"requests_per_unit,omitempty"`
}

func (x *PortalConfigSpec_RateLimitPolicy) Reset() {
	*x = PortalConfigSpec_RateLimitPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalConfigSpec_RateLimitPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalConfigSpec_RateLimitPolicy) ProtoMessage() {}

func (x *PortalConfigSpec_RateLimitPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalConfigSpec_RateLimitPolicy.ProtoReflect.Descriptor instead.
func (*PortalConfigSpec_RateLimitPolicy) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP(), []int{0, 5}
}

func (x *PortalConfigSpec_RateLimitPolicy) GetUnit() PortalConfigSpec_Unit {
	if x != nil {
		return x.Unit
	}
	return PortalConfigSpec_UNKNOWN
}

func (x *PortalConfigSpec_RateLimitPolicy) GetRequestsPerUnit() uint32 {
	if x != nil {
		return x.RequestsPerUnit
	}
	return 0
}

var File_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto protoreflect.FileDescriptor

var file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDesc = []byte{
	0x0a, 0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x1a, 0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x75, 0x65, 0x2f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x75, 0x65, 0x2f,
	0x63, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x65, 0x78, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x51, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69,
	0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32,
	0x2f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68,
	0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e,
	0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x0c, 0x0a, 0x10, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x12, 0x53, 0x0a, 0x16, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x05, 0xea, 0x42, 0x02, 0x20, 0x01, 0x52, 0x14, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x3f, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x04, 0x61, 0x70, 0x69,
	0x73, 0x12, 0x52, 0x0a, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x2e,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x09, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x1a, 0xfe, 0x02, 0x0a, 0x03, 0x41, 0x50, 0x49, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x6f, 0x66,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x61, 0x70,
	0x69, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x45, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x55,
	0x0a, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x73, 0x1a, 0xa2, 0x02, 0x0a, 0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x0d,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x63, 0x0a, 0x11, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0f, 0x72, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a, 0x22, 0x0a, 0x0c, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xc6,
	0x01, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x4d, 0x0a,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x30, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x69, 0x0a, 0x13,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70,
	0x65, 0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x7f, 0x0a, 0x0f, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x40, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x55,
	0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x50, 0x65,
	0x72, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x26, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x50, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x49, 0x44, 0x43, 0x10, 0x01, 0x22, 0x3e, 0x0a,
	0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f,
	0x55, 0x52, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x41, 0x59, 0x10, 0x04, 0x22, 0x5b, 0x0a,
	0x12, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4c, 0x0a, 0x15, 0x50, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xcb, 0x01, 0x0a, 0x12, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x59, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x1a, 0x5a, 0x0a, 0x0f, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x4b, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x32, 0xc0, 0xf5, 0x04, 0x01, 0xb8, 0xf5, 0x04, 0x01, 0xd0,
	0xf5, 0x04, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescOnce sync.Once
	file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescData = file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDesc
)

func file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescData)
	})
	return file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDescData
}

var file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_goTypes = []interface{}{
	(PortalConfigSpec_AuthType)(0),             // 0: internal.gloo.solo.io.PortalConfigSpec.AuthType
	(PortalConfigSpec_Unit)(0),                 // 1: internal.gloo.solo.io.PortalConfigSpec.Unit
	(*PortalConfigSpec)(nil),                   // 2: internal.gloo.solo.io.PortalConfigSpec
	(*PortalConfigStatus)(nil),                 // 3: internal.gloo.solo.io.PortalConfigStatus
	(*PortalConfigNewStatus)(nil),              // 4: internal.gloo.solo.io.PortalConfigNewStatus
	(*PortalConfigReport)(nil),                 // 5: internal.gloo.solo.io.PortalConfigReport
	(*PortalConfigSpec_API)(nil),               // 6: internal.gloo.solo.io.PortalConfigSpec.API
	(*PortalConfigSpec_UsagePlan)(nil),         // 7: internal.gloo.solo.io.PortalConfigSpec.UsagePlan
	(*PortalConfigSpec_UsagePlanRef)(nil),      // 8: internal.gloo.solo.io.PortalConfigSpec.UsagePlanRef
	(*PortalConfigSpec_AuthPolicy)(nil),        // 9: internal.gloo.solo.io.PortalConfigSpec.AuthPolicy
	(*PortalConfigSpec_AuthLabelSelector)(nil), // 10: internal.gloo.solo.io.PortalConfigSpec.AuthLabelSelector
	(*PortalConfigSpec_RateLimitPolicy)(nil),   // 11: internal.gloo.solo.io.PortalConfigSpec.RateLimitPolicy
	nil,                                        // 12: internal.gloo.solo.io.PortalConfigReport.WorkspacesEntry
	(*_struct.Value)(nil),                      // 13: google.protobuf.Value
	(*v2.ObjectReference)(nil),                 // 14: common.gloo.solo.io.ObjectReference
	(*v2.Status)(nil),                          // 15: common.gloo.solo.io.Status
	(*v2.Report)(nil),                          // 16: common.gloo.solo.io.Report
}
var file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_depIdxs = []int32{
	13, // 0: internal.gloo.solo.io.PortalConfigSpec.portal_custom_metadata:type_name -> google.protobuf.Value
	6,  // 1: internal.gloo.solo.io.PortalConfigSpec.apis:type_name -> internal.gloo.solo.io.PortalConfigSpec.API
	7,  // 2: internal.gloo.solo.io.PortalConfigSpec.usage_plans:type_name -> internal.gloo.solo.io.PortalConfigSpec.UsagePlan
	14, // 3: internal.gloo.solo.io.PortalConfigSpec.portal_ref:type_name -> common.gloo.solo.io.ObjectReference
	15, // 4: internal.gloo.solo.io.PortalConfigNewStatus.common:type_name -> common.gloo.solo.io.Status
	12, // 5: internal.gloo.solo.io.PortalConfigReport.workspaces:type_name -> internal.gloo.solo.io.PortalConfigReport.WorkspacesEntry
	14, // 6: internal.gloo.solo.io.PortalConfigSpec.API.api_schema:type_name -> common.gloo.solo.io.ObjectReference
	14, // 7: internal.gloo.solo.io.PortalConfigSpec.API.route_table:type_name -> common.gloo.solo.io.ObjectReference
	8,  // 8: internal.gloo.solo.io.PortalConfigSpec.API.usage_plans:type_name -> internal.gloo.solo.io.PortalConfigSpec.UsagePlanRef
	9,  // 9: internal.gloo.solo.io.PortalConfigSpec.UsagePlan.auth_policies:type_name -> internal.gloo.solo.io.PortalConfigSpec.AuthPolicy
	11, // 10: internal.gloo.solo.io.PortalConfigSpec.UsagePlan.rate_limit_policy:type_name -> internal.gloo.solo.io.PortalConfigSpec.RateLimitPolicy
	0,  // 11: internal.gloo.solo.io.PortalConfigSpec.AuthPolicy.auth_type:type_name -> internal.gloo.solo.io.PortalConfigSpec.AuthType
	10, // 12: internal.gloo.solo.io.PortalConfigSpec.AuthPolicy.auth_label_selector:type_name -> internal.gloo.solo.io.PortalConfigSpec.AuthLabelSelector
	1,  // 13: internal.gloo.solo.io.PortalConfigSpec.RateLimitPolicy.unit:type_name -> internal.gloo.solo.io.PortalConfigSpec.Unit
	16, // 14: internal.gloo.solo.io.PortalConfigReport.WorkspacesEntry.value:type_name -> common.gloo.solo.io.Report
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_init()
}
func file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_init() {
	if File_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfigSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfigStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfigNewStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfigReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfigSpec_API); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfigSpec_UsagePlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfigSpec_UsagePlanRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfigSpec_AuthPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfigSpec_AuthLabelSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalConfigSpec_RateLimitPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto = out.File
	file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_rawDesc = nil
	file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_goTypes = nil
	file_github_com_solo_io_solo_apis_api_gloo_mesh_gloo_solo_io_internal_v2_portal_config_proto_depIdxs = nil
}
