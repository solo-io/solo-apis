// Code generated by protoc-gen-ext. DO NOT EDIT.
// source: github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/config/core/v3/event_service_config.proto

package v3

import (
	"bytes"
	"encoding/binary"
	"errors"
	"fmt"
	"strings"

	"github.com/solo-io/protoc-gen-ext/pkg/clone"
	"google.golang.org/protobuf/proto"
)

// ensure the imports are used
var (
	_ = errors.New("")
	_ = fmt.Print
	_ = binary.LittleEndian
	_ = bytes.Compare
	_ = strings.Compare
	_ = clone.Cloner(nil)
	_ = proto.Message(nil)
)

// Clone function
func (m *EventServiceConfig) Clone() proto.Message {
	var target *EventServiceConfig
	if m == nil {
		return target
	}
	target = &EventServiceConfig{}

	switch m.ConfigSourceSpecifier.(type) {

	case *EventServiceConfig_GrpcService:

		if h, ok := interface{}(m.GetGrpcService()).(clone.Cloner); ok {
			target.ConfigSourceSpecifier = &EventServiceConfig_GrpcService{
				GrpcService: h.Clone().(*GrpcService),
			}
		} else {
			target.ConfigSourceSpecifier = &EventServiceConfig_GrpcService{
				GrpcService: proto.Clone(m.GetGrpcService()).(*GrpcService),
			}
		}

	}

	return target
}
