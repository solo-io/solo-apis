// Code generated by protoc-gen-ext. DO NOT EDIT.
// source: github.com/solo-io/solo-apis/api/gloo/gloo/external/envoy/type/matcher/v3/regex.proto

package v3

import (
	"bytes"
	"encoding/binary"
	"errors"
	"fmt"
	"strings"

	"github.com/solo-io/protoc-gen-ext/pkg/clone"
	"google.golang.org/protobuf/proto"

	google_golang_org_protobuf_types_known_wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

// ensure the imports are used
var (
	_ = errors.New("")
	_ = fmt.Print
	_ = binary.LittleEndian
	_ = bytes.Compare
	_ = strings.Compare
	_ = clone.Cloner(nil)
	_ = proto.Message(nil)
)

// Clone function
func (m *RegexMatcher) Clone() proto.Message {
	var target *RegexMatcher
	if m == nil {
		return target
	}
	target = &RegexMatcher{}

	target.Regex = m.GetRegex()

	switch m.EngineType.(type) {

	case *RegexMatcher_GoogleRe2:

		if h, ok := interface{}(m.GetGoogleRe2()).(clone.Cloner); ok {
			target.EngineType = &RegexMatcher_GoogleRe2{
				GoogleRe2: h.Clone().(*RegexMatcher_GoogleRE2),
			}
		} else {
			target.EngineType = &RegexMatcher_GoogleRe2{
				GoogleRe2: proto.Clone(m.GetGoogleRe2()).(*RegexMatcher_GoogleRE2),
			}
		}

	}

	return target
}

// Clone function
func (m *RegexMatchAndSubstitute) Clone() proto.Message {
	var target *RegexMatchAndSubstitute
	if m == nil {
		return target
	}
	target = &RegexMatchAndSubstitute{}

	if h, ok := interface{}(m.GetPattern()).(clone.Cloner); ok {
		target.Pattern = h.Clone().(*RegexMatcher)
	} else {
		target.Pattern = proto.Clone(m.GetPattern()).(*RegexMatcher)
	}

	target.Substitution = m.GetSubstitution()

	return target
}

// Clone function
func (m *RegexMatcher_GoogleRE2) Clone() proto.Message {
	var target *RegexMatcher_GoogleRE2
	if m == nil {
		return target
	}
	target = &RegexMatcher_GoogleRE2{}

	if h, ok := interface{}(m.GetMaxProgramSize()).(clone.Cloner); ok {
		target.MaxProgramSize = h.Clone().(*google_golang_org_protobuf_types_known_wrapperspb.UInt32Value)
	} else {
		target.MaxProgramSize = proto.Clone(m.GetMaxProgramSize()).(*google_golang_org_protobuf_types_known_wrapperspb.UInt32Value)
	}

	return target
}
