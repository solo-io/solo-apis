// Code generated by protoc-gen-ext. DO NOT EDIT.
// source: github.com/solo-io/solo-apis/api/gloo/gloo/v1/options/faultinjection/fault.proto

package faultinjection

import (
	"bytes"
	"encoding/binary"
	"errors"
	"fmt"
	"strings"

	"github.com/solo-io/protoc-gen-ext/pkg/clone"
	"google.golang.org/protobuf/proto"

	google_golang_org_protobuf_types_known_durationpb "google.golang.org/protobuf/types/known/durationpb"
)

// ensure the imports are used
var (
	_ = errors.New("")
	_ = fmt.Print
	_ = binary.LittleEndian
	_ = bytes.Compare
	_ = strings.Compare
	_ = clone.Cloner(nil)
	_ = proto.Message(nil)
)

// Clone function
func (m *RouteAbort) Clone() proto.Message {
	var target *RouteAbort
	if m == nil {
		return target
	}
	target = &RouteAbort{}

	target.Percentage = m.GetPercentage()

	target.HttpStatus = m.GetHttpStatus()

	return target
}

// Clone function
func (m *RouteDelay) Clone() proto.Message {
	var target *RouteDelay
	if m == nil {
		return target
	}
	target = &RouteDelay{}

	target.Percentage = m.GetPercentage()

	if h, ok := interface{}(m.GetFixedDelay()).(clone.Cloner); ok {
		target.FixedDelay = h.Clone().(*google_golang_org_protobuf_types_known_durationpb.Duration)
	} else {
		target.FixedDelay = proto.Clone(m.GetFixedDelay()).(*google_golang_org_protobuf_types_known_durationpb.Duration)
	}

	return target
}

// Clone function
func (m *RouteFaults) Clone() proto.Message {
	var target *RouteFaults
	if m == nil {
		return target
	}
	target = &RouteFaults{}

	if h, ok := interface{}(m.GetAbort()).(clone.Cloner); ok {
		target.Abort = h.Clone().(*RouteAbort)
	} else {
		target.Abort = proto.Clone(m.GetAbort()).(*RouteAbort)
	}

	if h, ok := interface{}(m.GetDelay()).(clone.Cloner); ok {
		target.Delay = h.Clone().(*RouteDelay)
	} else {
		target.Delay = proto.Clone(m.GetDelay()).(*RouteDelay)
	}

	return target
}
