// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: github.com/solo-io/solo-apis/api/gloo/gloo/v1/enterprise/options/graphql/v1alpha1/graphql.proto

package v1alpha1

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Type that the value will be coerced into.
// For example if the extracted value is "9", and type is INT,
// this value will be cast to an int type.
type ValueProvider_TypedValueProvider_Type int32

const (
	ValueProvider_TypedValueProvider_STRING  ValueProvider_TypedValueProvider_Type = 0
	ValueProvider_TypedValueProvider_INT     ValueProvider_TypedValueProvider_Type = 1
	ValueProvider_TypedValueProvider_FLOAT   ValueProvider_TypedValueProvider_Type = 2
	ValueProvider_TypedValueProvider_BOOLEAN ValueProvider_TypedValueProvider_Type = 3
)

// Enum value maps for ValueProvider_TypedValueProvider_Type.
var (
	ValueProvider_TypedValueProvider_Type_name = map[int32]string{
		0: "STRING",
		1: "INT",
		2: "FLOAT",
		3: "BOOLEAN",
	}
	ValueProvider_TypedValueProvider_Type_value = map[string]int32{
		"STRING":  0,
		"INT":     1,
		"FLOAT":   2,
		"BOOLEAN": 3,
	}
)

func (x ValueProvider_TypedValueProvider_Type) Enum() *ValueProvider_TypedValueProvider_Type {
	p := new(ValueProvider_TypedValueProvider_Type)
	*p = x
	return p
}

func (x ValueProvider_TypedValueProvider_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueProvider_TypedValueProvider_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_enumTypes[0].Descriptor()
}

func (ValueProvider_TypedValueProvider_Type) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_enumTypes[0]
}

func (x ValueProvider_TypedValueProvider_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValueProvider_TypedValueProvider_Type.Descriptor instead.
func (ValueProvider_TypedValueProvider_Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{1, 2, 0}
}

// used to reference into json structures by key(s)
type PathSegment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Segment:
	//	*PathSegment_Key
	//	*PathSegment_Index
	Segment isPathSegment_Segment `protobuf_oneof:"segment"`
}

func (x *PathSegment) Reset() {
	*x = PathSegment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathSegment) ProtoMessage() {}

func (x *PathSegment) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathSegment.ProtoReflect.Descriptor instead.
func (*PathSegment) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{0}
}

func (m *PathSegment) GetSegment() isPathSegment_Segment {
	if m != nil {
		return m.Segment
	}
	return nil
}

func (x *PathSegment) GetKey() string {
	if x, ok := x.GetSegment().(*PathSegment_Key); ok {
		return x.Key
	}
	return ""
}

func (x *PathSegment) GetIndex() uint32 {
	if x, ok := x.GetSegment().(*PathSegment_Index); ok {
		return x.Index
	}
	return 0
}

type isPathSegment_Segment interface {
	isPathSegment_Segment()
}

type PathSegment_Key struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

type PathSegment_Index struct {
	Index uint32 `protobuf:"varint,2,opt,name=index,proto3,oneof"`
}

func (*PathSegment_Key) isPathSegment_Segment() {}

func (*PathSegment_Index) isPathSegment_Segment() {}

// In the future we may add support for regex and subgroups
type ValueProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Provider:
	//	*ValueProvider_GraphqlArg
	//	*ValueProvider_TypedProvider
	//	*ValueProvider_GraphqlParent
	Provider isValueProvider_Provider `protobuf_oneof:"provider"`
}

func (x *ValueProvider) Reset() {
	*x = ValueProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueProvider) ProtoMessage() {}

func (x *ValueProvider) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueProvider.ProtoReflect.Descriptor instead.
func (*ValueProvider) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{1}
}

func (m *ValueProvider) GetProvider() isValueProvider_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *ValueProvider) GetGraphqlArg() *ValueProvider_GraphQLArgExtraction {
	if x, ok := x.GetProvider().(*ValueProvider_GraphqlArg); ok {
		return x.GraphqlArg
	}
	return nil
}

func (x *ValueProvider) GetTypedProvider() *ValueProvider_TypedValueProvider {
	if x, ok := x.GetProvider().(*ValueProvider_TypedProvider); ok {
		return x.TypedProvider
	}
	return nil
}

func (x *ValueProvider) GetGraphqlParent() *ValueProvider_GraphQLParentExtraction {
	if x, ok := x.GetProvider().(*ValueProvider_GraphqlParent); ok {
		return x.GraphqlParent
	}
	return nil
}

type isValueProvider_Provider interface {
	isValueProvider_Provider()
}

type ValueProvider_GraphqlArg struct {
	// type inferred from schema, no need to provide it.
	GraphqlArg *ValueProvider_GraphQLArgExtraction `protobuf:"bytes,1,opt,name=graphql_arg,json=graphqlArg,proto3,oneof"`
}

type ValueProvider_TypedProvider struct {
	TypedProvider *ValueProvider_TypedValueProvider `protobuf:"bytes,2,opt,name=typed_provider,json=typedProvider,proto3,oneof"`
}

type ValueProvider_GraphqlParent struct {
	// Fetch value from the graphql_parent of the current field.
	GraphqlParent *ValueProvider_GraphQLParentExtraction `protobuf:"bytes,3,opt,name=graphql_parent,json=graphqlParent,proto3,oneof"`
}

func (*ValueProvider_GraphqlArg) isValueProvider_Provider() {}

func (*ValueProvider_TypedProvider) isValueProvider_Provider() {}

func (*ValueProvider_GraphqlParent) isValueProvider_Provider() {}

type JsonKeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string                  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *JsonKeyValue_JsonValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *JsonKeyValue) Reset() {
	*x = JsonKeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonKeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonKeyValue) ProtoMessage() {}

func (x *JsonKeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonKeyValue.ProtoReflect.Descriptor instead.
func (*JsonKeyValue) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{2}
}

func (x *JsonKeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *JsonKeyValue) GetValue() *JsonKeyValue_JsonValue {
	if x != nil {
		return x.Value
	}
	return nil
}

// Represents a typed JSON structure
type JsonNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// if keys repeat, the latest one replaces any earlier values associated
	// with that key.
	//
	// repeated list, rather than a map, to have ordering to allow for merge
	// semantics within the data plane, for example:
	// - gRPC input uses special empty string for input key to set entire body
	// - gRPC wants to replace a certain field in parsed body from GraphQL arg
	KeyValues []*JsonKeyValue `protobuf:"bytes,1,rep,name=key_values,json=keyValues,proto3" json:"key_values,omitempty"`
}

func (x *JsonNode) Reset() {
	*x = JsonNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonNode) ProtoMessage() {}

func (x *JsonNode) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonNode.ProtoReflect.Descriptor instead.
func (*JsonNode) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{3}
}

func (x *JsonNode) GetKeyValues() []*JsonKeyValue {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

// Defines a configuration for generating outgoing requests for a resolver.
type RequestTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Use this attribute to set request headers to your REST service. It consists of a
	// map of strings to value providers. The string key determines the name of the
	// resulting header, the value provided will be the value.
	//
	// at least need ":method" and ":path"
	Headers map[string]*ValueProvider `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Use this attribute to set query parameters to your REST service. It consists of a
	// map of strings to value providers. The string key determines the name of the
	// query param, the provided value will be the value. This value is appended to any
	// value set to the :path header in `headers`.
	//
	// Interpolation is done in envoy rather than the control plane to prevent escaped
	// character issues. Additionally, we may be providing values not known until
	// the request is being executed (e.g., graphql parent info).
	QueryParams map[string]*ValueProvider `protobuf:"bytes,2,rep,name=query_params,json=queryParams,proto3" json:"query_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// implementation specific, gRPC will want gRPC message and struct to instantiate
	//
	// Types that are assignable to OutgoingBody:
	//	*RequestTemplate_Json
	OutgoingBody isRequestTemplate_OutgoingBody `protobuf_oneof:"outgoing_body"`
}

func (x *RequestTemplate) Reset() {
	*x = RequestTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTemplate) ProtoMessage() {}

func (x *RequestTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTemplate.ProtoReflect.Descriptor instead.
func (*RequestTemplate) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{4}
}

func (x *RequestTemplate) GetHeaders() map[string]*ValueProvider {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *RequestTemplate) GetQueryParams() map[string]*ValueProvider {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

func (m *RequestTemplate) GetOutgoingBody() isRequestTemplate_OutgoingBody {
	if m != nil {
		return m.OutgoingBody
	}
	return nil
}

func (x *RequestTemplate) GetJson() *JsonNode {
	if x, ok := x.GetOutgoingBody().(*RequestTemplate_Json); ok {
		return x.Json
	}
	return nil
}

type isRequestTemplate_OutgoingBody interface {
	isRequestTemplate_OutgoingBody()
}

type RequestTemplate_Json struct {
	// json representation of outgoing body.
	// empty string key can be used to signal parsing the value as json and using it
	// as the whole json body.
	Json *JsonNode `protobuf:"bytes,3,opt,name=json,proto3,oneof"`
}

func (*RequestTemplate_Json) isRequestTemplate_OutgoingBody() {}

// control-plane API
type RESTResolver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamRef *core.ResourceRef `protobuf:"bytes,1,opt,name=upstream_ref,json=upstreamRef,proto3" json:"upstream_ref,omitempty"`
	// configuration used to compose the outgoing request to a REST API
	RequestTransform *RequestTemplate `protobuf:"bytes,2,opt,name=request_transform,json=requestTransform,proto3" json:"request_transform,omitempty"`
	SpanName         string           `protobuf:"bytes,4,opt,name=span_name,json=spanName,proto3" json:"span_name,omitempty"`
}

func (x *RESTResolver) Reset() {
	*x = RESTResolver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RESTResolver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RESTResolver) ProtoMessage() {}

func (x *RESTResolver) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RESTResolver.ProtoReflect.Descriptor instead.
func (*RESTResolver) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{5}
}

func (x *RESTResolver) GetUpstreamRef() *core.ResourceRef {
	if x != nil {
		return x.UpstreamRef
	}
	return nil
}

func (x *RESTResolver) GetRequestTransform() *RequestTemplate {
	if x != nil {
		return x.RequestTransform
	}
	return nil
}

func (x *RESTResolver) GetSpanName() string {
	if x != nil {
		return x.SpanName
	}
	return ""
}

type QueryMatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Match:
	//	*QueryMatcher_FieldMatcher_
	Match isQueryMatcher_Match `protobuf_oneof:"match"`
}

func (x *QueryMatcher) Reset() {
	*x = QueryMatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMatcher) ProtoMessage() {}

func (x *QueryMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMatcher.ProtoReflect.Descriptor instead.
func (*QueryMatcher) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{6}
}

func (m *QueryMatcher) GetMatch() isQueryMatcher_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (x *QueryMatcher) GetFieldMatcher() *QueryMatcher_FieldMatcher {
	if x, ok := x.GetMatch().(*QueryMatcher_FieldMatcher_); ok {
		return x.FieldMatcher
	}
	return nil
}

type isQueryMatcher_Match interface {
	isQueryMatcher_Match()
}

type QueryMatcher_FieldMatcher_ struct {
	FieldMatcher *QueryMatcher_FieldMatcher `protobuf:"bytes,1,opt,name=field_matcher,json=fieldMatcher,proto3,oneof"`
}

func (*QueryMatcher_FieldMatcher_) isQueryMatcher_Match() {}

// This is the resolver map for the schema.
// For each Type.Field, we can define a resolver.
// if a field does not have resolver, the default resolver will be used.
// the default resolver takes the field with the same name from the parent, and uses that value
// to resolve the field.
// if a field with the same name does not exist in the parent, null will be used.
type Resolution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Match an object type and field
	Matcher *QueryMatcher `protobuf:"bytes,1,opt,name=matcher,proto3" json:"matcher,omitempty"`
	// The resolver to use.
	//
	// Types that are assignable to Resolver:
	//	*Resolution_RestResolver
	Resolver isResolution_Resolver `protobuf_oneof:"resolver"`
}

func (x *Resolution) Reset() {
	*x = Resolution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resolution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resolution) ProtoMessage() {}

func (x *Resolution) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resolution.ProtoReflect.Descriptor instead.
func (*Resolution) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{7}
}

func (x *Resolution) GetMatcher() *QueryMatcher {
	if x != nil {
		return x.Matcher
	}
	return nil
}

func (m *Resolution) GetResolver() isResolution_Resolver {
	if m != nil {
		return m.Resolver
	}
	return nil
}

func (x *Resolution) GetRestResolver() *RESTResolver {
	if x, ok := x.GetResolver().(*Resolution_RestResolver); ok {
		return x.RestResolver
	}
	return nil
}

type isResolution_Resolver interface {
	isResolution_Resolver()
}

type Resolution_RestResolver struct {
	RestResolver *RESTResolver `protobuf:"bytes,3,opt,name=rest_resolver,json=restResolver,proto3,oneof"`
}

func (*Resolution_RestResolver) isResolution_Resolver() {}

// Enterprise-Only: THIS FEATURE IS IN TECH PREVIEW. APIs are versioned as alpha and subject to change.
// User-facing CR config for resolving client requests to graphql schemas.
// Routes that have this config will execute graphql queries, and will not make it to the router filter. i.e. this
// filter will terminate the request for these routes.
// Note: while users can provide this configuration manually, the eventual UX will
// be to generate the Executable Schema CRs from other sources and just have users
// configure the routes to point to these schema CRs.
type GraphQLSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// NamespacedStatuses indicates the validation status of this resource.
	// NamespacedStatuses is read-only by clients, and set by gloo during validation
	NamespacedStatuses *core.NamespacedStatuses `protobuf:"bytes,1,opt,name=namespaced_statuses,json=namespacedStatuses,proto3" json:"namespaced_statuses,omitempty"`
	// Metadata contains the object metadata for this resource
	Metadata *core.Metadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Schema to use in string format.
	Schema string `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	// Do we enable introspection for the schema? general recommendation is to disable this for production
	// and hence it defaults to false.
	EnableIntrospection bool `protobuf:"varint,4,opt,name=enable_introspection,json=enableIntrospection,proto3" json:"enable_introspection,omitempty"`
	// The resolver map to use to resolve the schema.
	// Omitted fields will use the default resolver, which looks for a field with that name in the parent's object,
	// and errors if the field cannot be found.
	Resolutions []*Resolution `protobuf:"bytes,5,rep,name=resolutions,proto3" json:"resolutions,omitempty"`
}

func (x *GraphQLSchema) Reset() {
	*x = GraphQLSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphQLSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphQLSchema) ProtoMessage() {}

func (x *GraphQLSchema) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphQLSchema.ProtoReflect.Descriptor instead.
func (*GraphQLSchema) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{8}
}

func (x *GraphQLSchema) GetNamespacedStatuses() *core.NamespacedStatuses {
	if x != nil {
		return x.NamespacedStatuses
	}
	return nil
}

func (x *GraphQLSchema) GetMetadata() *core.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GraphQLSchema) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *GraphQLSchema) GetEnableIntrospection() bool {
	if x != nil {
		return x.EnableIntrospection
	}
	return false
}

func (x *GraphQLSchema) GetResolutions() []*Resolution {
	if x != nil {
		return x.Resolutions
	}
	return nil
}

type ValueProvider_GraphQLArgExtraction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The argument name to fetch. The argument value fetched
	// will have a type from the schema that we validate in envoy.
	// If the name is invalid, returns the zero-value primitive or null.
	ArgName string `protobuf:"bytes,1,opt,name=arg_name,json=argName,proto3" json:"arg_name,omitempty"`
	// Optional: fetches the value in the argument selected at this key.
	// If the key is invalid, returns the zero-value primitive or null.
	Path []*PathSegment `protobuf:"bytes,2,rep,name=path,proto3" json:"path,omitempty"`
}

func (x *ValueProvider_GraphQLArgExtraction) Reset() {
	*x = ValueProvider_GraphQLArgExtraction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueProvider_GraphQLArgExtraction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueProvider_GraphQLArgExtraction) ProtoMessage() {}

func (x *ValueProvider_GraphQLArgExtraction) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueProvider_GraphQLArgExtraction.ProtoReflect.Descriptor instead.
func (*ValueProvider_GraphQLArgExtraction) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ValueProvider_GraphQLArgExtraction) GetArgName() string {
	if x != nil {
		return x.ArgName
	}
	return ""
}

func (x *ValueProvider_GraphQLArgExtraction) GetPath() []*PathSegment {
	if x != nil {
		return x.Path
	}
	return nil
}

// Does not do type coercion, but instead if the type does not match the
// expected primitive type we throw an error.
// In the future we may add support for type coercion.
type ValueProvider_GraphQLParentExtraction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Fetches the value in the graphql parent at this key. The value will
	// always be accepted since the parent object is not strongly-typed.
	// If the key is invalid, returns null.
	Path []*PathSegment `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
}

func (x *ValueProvider_GraphQLParentExtraction) Reset() {
	*x = ValueProvider_GraphQLParentExtraction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueProvider_GraphQLParentExtraction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueProvider_GraphQLParentExtraction) ProtoMessage() {}

func (x *ValueProvider_GraphQLParentExtraction) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueProvider_GraphQLParentExtraction.ProtoReflect.Descriptor instead.
func (*ValueProvider_GraphQLParentExtraction) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ValueProvider_GraphQLParentExtraction) GetPath() []*PathSegment {
	if x != nil {
		return x.Path
	}
	return nil
}

type ValueProvider_TypedValueProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type that the value will be coerced into.
	// For example if the extracted value is "9", and type is INT,
	// this value will be cast to an int type.
	Type ValueProvider_TypedValueProvider_Type `protobuf:"varint,1,opt,name=type,proto3,enum=graphql.gloo.solo.io.ValueProvider_TypedValueProvider_Type" json:"type,omitempty"`
	// Types that are assignable to ValProvider:
	//	*ValueProvider_TypedValueProvider_Header
	//	*ValueProvider_TypedValueProvider_Value
	ValProvider isValueProvider_TypedValueProvider_ValProvider `protobuf_oneof:"val_provider"`
}

func (x *ValueProvider_TypedValueProvider) Reset() {
	*x = ValueProvider_TypedValueProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueProvider_TypedValueProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueProvider_TypedValueProvider) ProtoMessage() {}

func (x *ValueProvider_TypedValueProvider) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueProvider_TypedValueProvider.ProtoReflect.Descriptor instead.
func (*ValueProvider_TypedValueProvider) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ValueProvider_TypedValueProvider) GetType() ValueProvider_TypedValueProvider_Type {
	if x != nil {
		return x.Type
	}
	return ValueProvider_TypedValueProvider_STRING
}

func (m *ValueProvider_TypedValueProvider) GetValProvider() isValueProvider_TypedValueProvider_ValProvider {
	if m != nil {
		return m.ValProvider
	}
	return nil
}

func (x *ValueProvider_TypedValueProvider) GetHeader() string {
	if x, ok := x.GetValProvider().(*ValueProvider_TypedValueProvider_Header); ok {
		return x.Header
	}
	return ""
}

func (x *ValueProvider_TypedValueProvider) GetValue() string {
	if x, ok := x.GetValProvider().(*ValueProvider_TypedValueProvider_Value); ok {
		return x.Value
	}
	return ""
}

type isValueProvider_TypedValueProvider_ValProvider interface {
	isValueProvider_TypedValueProvider_ValProvider()
}

type ValueProvider_TypedValueProvider_Header struct {
	// Fetches the request/response header's value. If not found, uses empty string
	Header string `protobuf:"bytes,2,opt,name=header,proto3,oneof"`
}

type ValueProvider_TypedValueProvider_Value struct {
	// inline value, use as provided rather than extracting from another source
	Value string `protobuf:"bytes,3,opt,name=value,proto3,oneof"`
}

func (*ValueProvider_TypedValueProvider_Header) isValueProvider_TypedValueProvider_ValProvider() {}

func (*ValueProvider_TypedValueProvider_Value) isValueProvider_TypedValueProvider_ValProvider() {}

type JsonKeyValue_JsonValueList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*JsonKeyValue_JsonValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *JsonKeyValue_JsonValueList) Reset() {
	*x = JsonKeyValue_JsonValueList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonKeyValue_JsonValueList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonKeyValue_JsonValueList) ProtoMessage() {}

func (x *JsonKeyValue_JsonValueList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonKeyValue_JsonValueList.ProtoReflect.Descriptor instead.
func (*JsonKeyValue_JsonValueList) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{2, 0}
}

func (x *JsonKeyValue_JsonValueList) GetValues() []*JsonKeyValue_JsonValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type JsonKeyValue_JsonValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to JsonVal:
	//	*JsonKeyValue_JsonValue_Node
	//	*JsonKeyValue_JsonValue_ValueProvider
	//	*JsonKeyValue_JsonValue_List
	JsonVal isJsonKeyValue_JsonValue_JsonVal `protobuf_oneof:"json_val"`
}

func (x *JsonKeyValue_JsonValue) Reset() {
	*x = JsonKeyValue_JsonValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonKeyValue_JsonValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonKeyValue_JsonValue) ProtoMessage() {}

func (x *JsonKeyValue_JsonValue) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonKeyValue_JsonValue.ProtoReflect.Descriptor instead.
func (*JsonKeyValue_JsonValue) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{2, 1}
}

func (m *JsonKeyValue_JsonValue) GetJsonVal() isJsonKeyValue_JsonValue_JsonVal {
	if m != nil {
		return m.JsonVal
	}
	return nil
}

func (x *JsonKeyValue_JsonValue) GetNode() *JsonNode {
	if x, ok := x.GetJsonVal().(*JsonKeyValue_JsonValue_Node); ok {
		return x.Node
	}
	return nil
}

func (x *JsonKeyValue_JsonValue) GetValueProvider() *ValueProvider {
	if x, ok := x.GetJsonVal().(*JsonKeyValue_JsonValue_ValueProvider); ok {
		return x.ValueProvider
	}
	return nil
}

func (x *JsonKeyValue_JsonValue) GetList() *JsonKeyValue_JsonValueList {
	if x, ok := x.GetJsonVal().(*JsonKeyValue_JsonValue_List); ok {
		return x.List
	}
	return nil
}

type isJsonKeyValue_JsonValue_JsonVal interface {
	isJsonKeyValue_JsonValue_JsonVal()
}

type JsonKeyValue_JsonValue_Node struct {
	Node *JsonNode `protobuf:"bytes,1,opt,name=node,proto3,oneof"`
}

type JsonKeyValue_JsonValue_ValueProvider struct {
	ValueProvider *ValueProvider `protobuf:"bytes,2,opt,name=value_provider,json=valueProvider,proto3,oneof"`
}

type JsonKeyValue_JsonValue_List struct {
	List *JsonKeyValue_JsonValueList `protobuf:"bytes,3,opt,name=list,proto3,oneof"`
}

func (*JsonKeyValue_JsonValue_Node) isJsonKeyValue_JsonValue_JsonVal() {}

func (*JsonKeyValue_JsonValue_ValueProvider) isJsonKeyValue_JsonValue_JsonVal() {}

func (*JsonKeyValue_JsonValue_List) isJsonKeyValue_JsonValue_JsonVal() {}

type QueryMatcher_FieldMatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Object type. For example, Query.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Field with in the object.
	Field string `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
}

func (x *QueryMatcher_FieldMatcher) Reset() {
	*x = QueryMatcher_FieldMatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMatcher_FieldMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMatcher_FieldMatcher) ProtoMessage() {}

func (x *QueryMatcher_FieldMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMatcher_FieldMatcher.ProtoReflect.Descriptor instead.
func (*QueryMatcher_FieldMatcher) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP(), []int{6, 0}
}

func (x *QueryMatcher_FieldMatcher) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QueryMatcher_FieldMatcher) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

var File_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto protoreflect.FileDescriptor

var file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDesc = []byte{
	0x0a, 0x5f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x1a, 0x12, 0x65, 0x78, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f,
	0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x6b, 0x69, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d,
	0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x6b, 0x69, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f,
	0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x6b, 0x69, 0x74, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x6b, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x6b, 0x69, 0x74, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x0b, 0x50, 0x61, 0x74, 0x68, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x48, 0x00, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0e, 0x0a, 0x07, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xda, 0x05, 0x0a, 0x0d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x5b, 0x0a, 0x0b,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x41, 0x72,
	0x67, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x72, 0x67, 0x12, 0x5f, 0x0a, 0x0e, 0x74, 0x79, 0x70,
	0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x79, 0x70,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x64, 0x0a, 0x0e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x1a, 0x68, 0x0a, 0x14, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x41, 0x72, 0x67, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x72, 0x67, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x50, 0x0a, 0x17, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x51, 0x4c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0xdc, 0x01, 0x0a,
	0x12, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3b, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e,
	0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x03, 0x42, 0x0e, 0x0a, 0x0c, 0x76,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xa1, 0x03, 0x0a, 0x0c, 0x4a, 0x73, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4a, 0x73,
	0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x55,
	0x0a, 0x0d, 0x4a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x44, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0xe3, 0x01, 0x0a, 0x09, 0x4a, 0x73, 0x6f, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4a, 0x73, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x42,
	0x0a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x22, 0x4d, 0x0a, 0x08, 0x4a,
	0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xc7, 0x03, 0x0a, 0x0f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x4c,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x59, 0x0a, 0x0c,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4a, 0x73, 0x6f,
	0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x1a, 0x5f, 0x0a,
	0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x63,
	0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x5f,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0xbd, 0x01, 0x0a, 0x0c, 0x52, 0x45, 0x53, 0x54, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0c, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x0b, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x66, 0x12, 0x52, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x61, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x38, 0x0a,
	0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x22, 0xa1, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3c, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x49, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x45, 0x53, 0x54,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x72, 0x22, 0xcc, 0x02, 0x0a, 0x0d, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x57, 0x0a, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x42, 0x04, 0xb8, 0xf5, 0x04, 0x01, 0x52, 0x12, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12,
	0x32, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x31, 0x0a, 0x14, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x3a, 0x1f, 0x82, 0xf1, 0x04, 0x06, 0x0a, 0x04, 0x67, 0x71, 0x6c, 0x73, 0x82, 0xf1,
	0x04, 0x11, 0x12, 0x0f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x73, 0x42, 0xab, 0x01, 0x0a, 0x31, 0x69, 0x6f, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x76, 0x32, 0x42, 0x12, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x51, 0x4c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x58, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f,
	0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xc0, 0xf5, 0x04, 0x01, 0xb8, 0xf5, 0x04,
	0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescOnce sync.Once
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescData = file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDesc
)

func file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescData)
	})
	return file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDescData
}

var file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_goTypes = []interface{}{
	(ValueProvider_TypedValueProvider_Type)(0),    // 0: graphql.gloo.solo.io.ValueProvider.TypedValueProvider.Type
	(*PathSegment)(nil),                           // 1: graphql.gloo.solo.io.PathSegment
	(*ValueProvider)(nil),                         // 2: graphql.gloo.solo.io.ValueProvider
	(*JsonKeyValue)(nil),                          // 3: graphql.gloo.solo.io.JsonKeyValue
	(*JsonNode)(nil),                              // 4: graphql.gloo.solo.io.JsonNode
	(*RequestTemplate)(nil),                       // 5: graphql.gloo.solo.io.RequestTemplate
	(*RESTResolver)(nil),                          // 6: graphql.gloo.solo.io.RESTResolver
	(*QueryMatcher)(nil),                          // 7: graphql.gloo.solo.io.QueryMatcher
	(*Resolution)(nil),                            // 8: graphql.gloo.solo.io.Resolution
	(*GraphQLSchema)(nil),                         // 9: graphql.gloo.solo.io.GraphQLSchema
	(*ValueProvider_GraphQLArgExtraction)(nil),    // 10: graphql.gloo.solo.io.ValueProvider.GraphQLArgExtraction
	(*ValueProvider_GraphQLParentExtraction)(nil), // 11: graphql.gloo.solo.io.ValueProvider.GraphQLParentExtraction
	(*ValueProvider_TypedValueProvider)(nil),      // 12: graphql.gloo.solo.io.ValueProvider.TypedValueProvider
	(*JsonKeyValue_JsonValueList)(nil),            // 13: graphql.gloo.solo.io.JsonKeyValue.JsonValueList
	(*JsonKeyValue_JsonValue)(nil),                // 14: graphql.gloo.solo.io.JsonKeyValue.JsonValue
	nil,                                           // 15: graphql.gloo.solo.io.RequestTemplate.HeadersEntry
	nil,                                           // 16: graphql.gloo.solo.io.RequestTemplate.QueryParamsEntry
	(*QueryMatcher_FieldMatcher)(nil),             // 17: graphql.gloo.solo.io.QueryMatcher.FieldMatcher
	(*core.ResourceRef)(nil),                      // 18: core.solo.io.ResourceRef
	(*core.NamespacedStatuses)(nil),               // 19: core.solo.io.NamespacedStatuses
	(*core.Metadata)(nil),                         // 20: core.solo.io.Metadata
}
var file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_depIdxs = []int32{
	10, // 0: graphql.gloo.solo.io.ValueProvider.graphql_arg:type_name -> graphql.gloo.solo.io.ValueProvider.GraphQLArgExtraction
	12, // 1: graphql.gloo.solo.io.ValueProvider.typed_provider:type_name -> graphql.gloo.solo.io.ValueProvider.TypedValueProvider
	11, // 2: graphql.gloo.solo.io.ValueProvider.graphql_parent:type_name -> graphql.gloo.solo.io.ValueProvider.GraphQLParentExtraction
	14, // 3: graphql.gloo.solo.io.JsonKeyValue.value:type_name -> graphql.gloo.solo.io.JsonKeyValue.JsonValue
	3,  // 4: graphql.gloo.solo.io.JsonNode.key_values:type_name -> graphql.gloo.solo.io.JsonKeyValue
	15, // 5: graphql.gloo.solo.io.RequestTemplate.headers:type_name -> graphql.gloo.solo.io.RequestTemplate.HeadersEntry
	16, // 6: graphql.gloo.solo.io.RequestTemplate.query_params:type_name -> graphql.gloo.solo.io.RequestTemplate.QueryParamsEntry
	4,  // 7: graphql.gloo.solo.io.RequestTemplate.json:type_name -> graphql.gloo.solo.io.JsonNode
	18, // 8: graphql.gloo.solo.io.RESTResolver.upstream_ref:type_name -> core.solo.io.ResourceRef
	5,  // 9: graphql.gloo.solo.io.RESTResolver.request_transform:type_name -> graphql.gloo.solo.io.RequestTemplate
	17, // 10: graphql.gloo.solo.io.QueryMatcher.field_matcher:type_name -> graphql.gloo.solo.io.QueryMatcher.FieldMatcher
	7,  // 11: graphql.gloo.solo.io.Resolution.matcher:type_name -> graphql.gloo.solo.io.QueryMatcher
	6,  // 12: graphql.gloo.solo.io.Resolution.rest_resolver:type_name -> graphql.gloo.solo.io.RESTResolver
	19, // 13: graphql.gloo.solo.io.GraphQLSchema.namespaced_statuses:type_name -> core.solo.io.NamespacedStatuses
	20, // 14: graphql.gloo.solo.io.GraphQLSchema.metadata:type_name -> core.solo.io.Metadata
	8,  // 15: graphql.gloo.solo.io.GraphQLSchema.resolutions:type_name -> graphql.gloo.solo.io.Resolution
	1,  // 16: graphql.gloo.solo.io.ValueProvider.GraphQLArgExtraction.path:type_name -> graphql.gloo.solo.io.PathSegment
	1,  // 17: graphql.gloo.solo.io.ValueProvider.GraphQLParentExtraction.path:type_name -> graphql.gloo.solo.io.PathSegment
	0,  // 18: graphql.gloo.solo.io.ValueProvider.TypedValueProvider.type:type_name -> graphql.gloo.solo.io.ValueProvider.TypedValueProvider.Type
	14, // 19: graphql.gloo.solo.io.JsonKeyValue.JsonValueList.values:type_name -> graphql.gloo.solo.io.JsonKeyValue.JsonValue
	4,  // 20: graphql.gloo.solo.io.JsonKeyValue.JsonValue.node:type_name -> graphql.gloo.solo.io.JsonNode
	2,  // 21: graphql.gloo.solo.io.JsonKeyValue.JsonValue.value_provider:type_name -> graphql.gloo.solo.io.ValueProvider
	13, // 22: graphql.gloo.solo.io.JsonKeyValue.JsonValue.list:type_name -> graphql.gloo.solo.io.JsonKeyValue.JsonValueList
	2,  // 23: graphql.gloo.solo.io.RequestTemplate.HeadersEntry.value:type_name -> graphql.gloo.solo.io.ValueProvider
	2,  // 24: graphql.gloo.solo.io.RequestTemplate.QueryParamsEntry.value:type_name -> graphql.gloo.solo.io.ValueProvider
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_init()
}
func file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_init() {
	if File_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathSegment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonKeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RESTResolver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resolution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphQLSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueProvider_GraphQLArgExtraction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueProvider_GraphQLParentExtraction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueProvider_TypedValueProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonKeyValue_JsonValueList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonKeyValue_JsonValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMatcher_FieldMatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PathSegment_Key)(nil),
		(*PathSegment_Index)(nil),
	}
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ValueProvider_GraphqlArg)(nil),
		(*ValueProvider_TypedProvider)(nil),
		(*ValueProvider_GraphqlParent)(nil),
	}
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*RequestTemplate_Json)(nil),
	}
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*QueryMatcher_FieldMatcher_)(nil),
	}
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Resolution_RestResolver)(nil),
	}
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ValueProvider_TypedValueProvider_Header)(nil),
		(*ValueProvider_TypedValueProvider_Value)(nil),
	}
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*JsonKeyValue_JsonValue_Node)(nil),
		(*JsonKeyValue_JsonValue_ValueProvider)(nil),
		(*JsonKeyValue_JsonValue_List)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto = out.File
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_rawDesc = nil
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_goTypes = nil
	file_github_com_solo_io_solo_apis_api_gloo_gloo_v1_enterprise_options_graphql_v1alpha1_graphql_proto_depIdxs = nil
}
