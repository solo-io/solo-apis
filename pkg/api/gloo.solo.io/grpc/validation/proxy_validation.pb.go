// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/solo-apis/api/gloo/gloo/grpc/validation/proxy_validation.proto

package validation

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	v1 "github.com/solo-io/solo-apis/pkg/api/gloo.solo.io/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ListenerReport_Error_Type int32

const (
	ListenerReport_Error_NameNotUniqueError     ListenerReport_Error_Type = 0
	ListenerReport_Error_BindPortNotUniqueError ListenerReport_Error_Type = 1
	ListenerReport_Error_SSLConfigError         ListenerReport_Error_Type = 2
	ListenerReport_Error_ProcessingError        ListenerReport_Error_Type = 3
)

var ListenerReport_Error_Type_name = map[int32]string{
	0: "NameNotUniqueError",
	1: "BindPortNotUniqueError",
	2: "SSLConfigError",
	3: "ProcessingError",
}

var ListenerReport_Error_Type_value = map[string]int32{
	"NameNotUniqueError":     0,
	"BindPortNotUniqueError": 1,
	"SSLConfigError":         2,
	"ProcessingError":        3,
}

func (x ListenerReport_Error_Type) String() string {
	return proto.EnumName(ListenerReport_Error_Type_name, int32(x))
}

func (ListenerReport_Error_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{5, 0, 0}
}

type HttpListenerReport_Error_Type int32

const (
	HttpListenerReport_Error_ProcessingError HttpListenerReport_Error_Type = 0
)

var HttpListenerReport_Error_Type_name = map[int32]string{
	0: "ProcessingError",
}

var HttpListenerReport_Error_Type_value = map[string]int32{
	"ProcessingError": 0,
}

func (x HttpListenerReport_Error_Type) String() string {
	return proto.EnumName(HttpListenerReport_Error_Type_name, int32(x))
}

func (HttpListenerReport_Error_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{6, 0, 0}
}

type VirtualHostReport_Error_Type int32

const (
	VirtualHostReport_Error_NameNotUniqueError    VirtualHostReport_Error_Type = 0
	VirtualHostReport_Error_DomainsNotUniqueError VirtualHostReport_Error_Type = 1
	VirtualHostReport_Error_ProcessingError       VirtualHostReport_Error_Type = 2
	VirtualHostReport_Error_EmptyDomainError      VirtualHostReport_Error_Type = 3
)

var VirtualHostReport_Error_Type_name = map[int32]string{
	0: "NameNotUniqueError",
	1: "DomainsNotUniqueError",
	2: "ProcessingError",
	3: "EmptyDomainError",
}

var VirtualHostReport_Error_Type_value = map[string]int32{
	"NameNotUniqueError":    0,
	"DomainsNotUniqueError": 1,
	"ProcessingError":       2,
	"EmptyDomainError":      3,
}

func (x VirtualHostReport_Error_Type) String() string {
	return proto.EnumName(VirtualHostReport_Error_Type_name, int32(x))
}

func (VirtualHostReport_Error_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{7, 0, 0}
}

type RouteReport_Error_Type int32

const (
	RouteReport_Error_InvalidMatcherError RouteReport_Error_Type = 0
	RouteReport_Error_ProcessingError     RouteReport_Error_Type = 1
)

var RouteReport_Error_Type_name = map[int32]string{
	0: "InvalidMatcherError",
	1: "ProcessingError",
}

var RouteReport_Error_Type_value = map[string]int32{
	"InvalidMatcherError": 0,
	"ProcessingError":     1,
}

func (x RouteReport_Error_Type) String() string {
	return proto.EnumName(RouteReport_Error_Type_name, int32(x))
}

func (RouteReport_Error_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{8, 0, 0}
}

type RouteReport_Warning_Type int32

const (
	RouteReport_Warning_InvalidDestinationWarning RouteReport_Warning_Type = 0
)

var RouteReport_Warning_Type_name = map[int32]string{
	0: "InvalidDestinationWarning",
}

var RouteReport_Warning_Type_value = map[string]int32{
	"InvalidDestinationWarning": 0,
}

func (x RouteReport_Warning_Type) String() string {
	return proto.EnumName(RouteReport_Warning_Type_name, int32(x))
}

func (RouteReport_Warning_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{8, 1, 0}
}

type TcpListenerReport_Error_Type int32

const (
	TcpListenerReport_Error_NameNotUniqueError     TcpListenerReport_Error_Type = 0
	TcpListenerReport_Error_BindPortNotUniqueError TcpListenerReport_Error_Type = 1
	TcpListenerReport_Error_SSLConfigError         TcpListenerReport_Error_Type = 2
	TcpListenerReport_Error_ProcessingError        TcpListenerReport_Error_Type = 3
)

var TcpListenerReport_Error_Type_name = map[int32]string{
	0: "NameNotUniqueError",
	1: "BindPortNotUniqueError",
	2: "SSLConfigError",
	3: "ProcessingError",
}

var TcpListenerReport_Error_Type_value = map[string]int32{
	"NameNotUniqueError":     0,
	"BindPortNotUniqueError": 1,
	"SSLConfigError":         2,
	"ProcessingError":        3,
}

func (x TcpListenerReport_Error_Type) String() string {
	return proto.EnumName(TcpListenerReport_Error_Type_name, int32(x))
}

func (TcpListenerReport_Error_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{9, 0, 0}
}

type TcpHostReport_Error_Type int32

const (
	TcpHostReport_Error_NameNotUniqueError      TcpHostReport_Error_Type = 0
	TcpHostReport_Error_InvalidDestinationError TcpHostReport_Error_Type = 1
	TcpHostReport_Error_ProcessingError         TcpHostReport_Error_Type = 2
)

var TcpHostReport_Error_Type_name = map[int32]string{
	0: "NameNotUniqueError",
	1: "InvalidDestinationError",
	2: "ProcessingError",
}

var TcpHostReport_Error_Type_value = map[string]int32{
	"NameNotUniqueError":      0,
	"InvalidDestinationError": 1,
	"ProcessingError":         2,
}

func (x TcpHostReport_Error_Type) String() string {
	return proto.EnumName(TcpHostReport_Error_Type_name, int32(x))
}

func (TcpHostReport_Error_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{10, 0, 0}
}

type ProxyValidationServiceRequest struct {
	Proxy                *v1.Proxy `protobuf:"bytes,1,opt,name=proxy,proto3" json:"proxy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ProxyValidationServiceRequest) Reset()         { *m = ProxyValidationServiceRequest{} }
func (m *ProxyValidationServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ProxyValidationServiceRequest) ProtoMessage()    {}
func (*ProxyValidationServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{0}
}
func (m *ProxyValidationServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyValidationServiceRequest.Unmarshal(m, b)
}
func (m *ProxyValidationServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyValidationServiceRequest.Marshal(b, m, deterministic)
}
func (m *ProxyValidationServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyValidationServiceRequest.Merge(m, src)
}
func (m *ProxyValidationServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ProxyValidationServiceRequest.Size(m)
}
func (m *ProxyValidationServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyValidationServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyValidationServiceRequest proto.InternalMessageInfo

func (m *ProxyValidationServiceRequest) GetProxy() *v1.Proxy {
	if m != nil {
		return m.Proxy
	}
	return nil
}

type ProxyValidationServiceResponse struct {
	ProxyReport          *ProxyReport `protobuf:"bytes,1,opt,name=proxy_report,json=proxyReport,proto3" json:"proxy_report,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ProxyValidationServiceResponse) Reset()         { *m = ProxyValidationServiceResponse{} }
func (m *ProxyValidationServiceResponse) String() string { return proto.CompactTextString(m) }
func (*ProxyValidationServiceResponse) ProtoMessage()    {}
func (*ProxyValidationServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{1}
}
func (m *ProxyValidationServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyValidationServiceResponse.Unmarshal(m, b)
}
func (m *ProxyValidationServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyValidationServiceResponse.Marshal(b, m, deterministic)
}
func (m *ProxyValidationServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyValidationServiceResponse.Merge(m, src)
}
func (m *ProxyValidationServiceResponse) XXX_Size() int {
	return xxx_messageInfo_ProxyValidationServiceResponse.Size(m)
}
func (m *ProxyValidationServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyValidationServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyValidationServiceResponse proto.InternalMessageInfo

func (m *ProxyValidationServiceResponse) GetProxyReport() *ProxyReport {
	if m != nil {
		return m.ProxyReport
	}
	return nil
}

type NotifyOnResyncRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyOnResyncRequest) Reset()         { *m = NotifyOnResyncRequest{} }
func (m *NotifyOnResyncRequest) String() string { return proto.CompactTextString(m) }
func (*NotifyOnResyncRequest) ProtoMessage()    {}
func (*NotifyOnResyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{2}
}
func (m *NotifyOnResyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyOnResyncRequest.Unmarshal(m, b)
}
func (m *NotifyOnResyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyOnResyncRequest.Marshal(b, m, deterministic)
}
func (m *NotifyOnResyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyOnResyncRequest.Merge(m, src)
}
func (m *NotifyOnResyncRequest) XXX_Size() int {
	return xxx_messageInfo_NotifyOnResyncRequest.Size(m)
}
func (m *NotifyOnResyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyOnResyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyOnResyncRequest proto.InternalMessageInfo

type NotifyOnResyncResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyOnResyncResponse) Reset()         { *m = NotifyOnResyncResponse{} }
func (m *NotifyOnResyncResponse) String() string { return proto.CompactTextString(m) }
func (*NotifyOnResyncResponse) ProtoMessage()    {}
func (*NotifyOnResyncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{3}
}
func (m *NotifyOnResyncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyOnResyncResponse.Unmarshal(m, b)
}
func (m *NotifyOnResyncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyOnResyncResponse.Marshal(b, m, deterministic)
}
func (m *NotifyOnResyncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyOnResyncResponse.Merge(m, src)
}
func (m *NotifyOnResyncResponse) XXX_Size() int {
	return xxx_messageInfo_NotifyOnResyncResponse.Size(m)
}
func (m *NotifyOnResyncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyOnResyncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyOnResyncResponse proto.InternalMessageInfo

//
// The Proxy Report should contain one report for each sub-resource of the Proxy
// E.g., each listener will have a corresponding report. Within each listener report is
// a route report corresponding to each route on the listener.
//
// If the report contains no errors, the (sub-)resource is valid.
type ProxyReport struct {
	ListenerReports      []*ListenerReport `protobuf:"bytes,1,rep,name=listener_reports,json=listenerReports,proto3" json:"listener_reports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProxyReport) Reset()         { *m = ProxyReport{} }
func (m *ProxyReport) String() string { return proto.CompactTextString(m) }
func (*ProxyReport) ProtoMessage()    {}
func (*ProxyReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{4}
}
func (m *ProxyReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyReport.Unmarshal(m, b)
}
func (m *ProxyReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyReport.Marshal(b, m, deterministic)
}
func (m *ProxyReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyReport.Merge(m, src)
}
func (m *ProxyReport) XXX_Size() int {
	return xxx_messageInfo_ProxyReport.Size(m)
}
func (m *ProxyReport) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyReport.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyReport proto.InternalMessageInfo

func (m *ProxyReport) GetListenerReports() []*ListenerReport {
	if m != nil {
		return m.ListenerReports
	}
	return nil
}

type ListenerReport struct {
	// errors on top-level config of the listener
	Errors []*ListenerReport_Error `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	// Types that are valid to be assigned to ListenerTypeReport:
	//	*ListenerReport_HttpListenerReport
	//	*ListenerReport_TcpListenerReport
	ListenerTypeReport   isListenerReport_ListenerTypeReport `protobuf_oneof:"listener_type_report"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ListenerReport) Reset()         { *m = ListenerReport{} }
func (m *ListenerReport) String() string { return proto.CompactTextString(m) }
func (*ListenerReport) ProtoMessage()    {}
func (*ListenerReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{5}
}
func (m *ListenerReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenerReport.Unmarshal(m, b)
}
func (m *ListenerReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenerReport.Marshal(b, m, deterministic)
}
func (m *ListenerReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenerReport.Merge(m, src)
}
func (m *ListenerReport) XXX_Size() int {
	return xxx_messageInfo_ListenerReport.Size(m)
}
func (m *ListenerReport) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenerReport.DiscardUnknown(m)
}

var xxx_messageInfo_ListenerReport proto.InternalMessageInfo

type isListenerReport_ListenerTypeReport interface {
	isListenerReport_ListenerTypeReport()
}

type ListenerReport_HttpListenerReport struct {
	HttpListenerReport *HttpListenerReport `protobuf:"bytes,3,opt,name=http_listener_report,json=httpListenerReport,proto3,oneof" json:"http_listener_report,omitempty"`
}
type ListenerReport_TcpListenerReport struct {
	TcpListenerReport *TcpListenerReport `protobuf:"bytes,4,opt,name=tcp_listener_report,json=tcpListenerReport,proto3,oneof" json:"tcp_listener_report,omitempty"`
}

func (*ListenerReport_HttpListenerReport) isListenerReport_ListenerTypeReport() {}
func (*ListenerReport_TcpListenerReport) isListenerReport_ListenerTypeReport()  {}

func (m *ListenerReport) GetListenerTypeReport() isListenerReport_ListenerTypeReport {
	if m != nil {
		return m.ListenerTypeReport
	}
	return nil
}

func (m *ListenerReport) GetErrors() []*ListenerReport_Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *ListenerReport) GetHttpListenerReport() *HttpListenerReport {
	if x, ok := m.GetListenerTypeReport().(*ListenerReport_HttpListenerReport); ok {
		return x.HttpListenerReport
	}
	return nil
}

func (m *ListenerReport) GetTcpListenerReport() *TcpListenerReport {
	if x, ok := m.GetListenerTypeReport().(*ListenerReport_TcpListenerReport); ok {
		return x.TcpListenerReport
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListenerReport) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListenerReport_HttpListenerReport)(nil),
		(*ListenerReport_TcpListenerReport)(nil),
	}
}

// error types for top-level listener config
type ListenerReport_Error struct {
	// the type of the error
	Type ListenerReport_Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.ListenerReport_Error_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenerReport_Error) Reset()         { *m = ListenerReport_Error{} }
func (m *ListenerReport_Error) String() string { return proto.CompactTextString(m) }
func (*ListenerReport_Error) ProtoMessage()    {}
func (*ListenerReport_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{5, 0}
}
func (m *ListenerReport_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenerReport_Error.Unmarshal(m, b)
}
func (m *ListenerReport_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenerReport_Error.Marshal(b, m, deterministic)
}
func (m *ListenerReport_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenerReport_Error.Merge(m, src)
}
func (m *ListenerReport_Error) XXX_Size() int {
	return xxx_messageInfo_ListenerReport_Error.Size(m)
}
func (m *ListenerReport_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenerReport_Error.DiscardUnknown(m)
}

var xxx_messageInfo_ListenerReport_Error proto.InternalMessageInfo

func (m *ListenerReport_Error) GetType() ListenerReport_Error_Type {
	if m != nil {
		return m.Type
	}
	return ListenerReport_Error_NameNotUniqueError
}

func (m *ListenerReport_Error) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type HttpListenerReport struct {
	Errors []*HttpListenerReport_Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	// report for nested virtual hosts
	VirtualHostReports   []*VirtualHostReport `protobuf:"bytes,2,rep,name=virtual_host_reports,json=virtualHostReports,proto3" json:"virtual_host_reports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HttpListenerReport) Reset()         { *m = HttpListenerReport{} }
func (m *HttpListenerReport) String() string { return proto.CompactTextString(m) }
func (*HttpListenerReport) ProtoMessage()    {}
func (*HttpListenerReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{6}
}
func (m *HttpListenerReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpListenerReport.Unmarshal(m, b)
}
func (m *HttpListenerReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpListenerReport.Marshal(b, m, deterministic)
}
func (m *HttpListenerReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpListenerReport.Merge(m, src)
}
func (m *HttpListenerReport) XXX_Size() int {
	return xxx_messageInfo_HttpListenerReport.Size(m)
}
func (m *HttpListenerReport) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpListenerReport.DiscardUnknown(m)
}

var xxx_messageInfo_HttpListenerReport proto.InternalMessageInfo

func (m *HttpListenerReport) GetErrors() []*HttpListenerReport_Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *HttpListenerReport) GetVirtualHostReports() []*VirtualHostReport {
	if m != nil {
		return m.VirtualHostReports
	}
	return nil
}

// error types for top-level http listener config
type HttpListenerReport_Error struct {
	// the type of the error
	Type HttpListenerReport_Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.HttpListenerReport_Error_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpListenerReport_Error) Reset()         { *m = HttpListenerReport_Error{} }
func (m *HttpListenerReport_Error) String() string { return proto.CompactTextString(m) }
func (*HttpListenerReport_Error) ProtoMessage()    {}
func (*HttpListenerReport_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{6, 0}
}
func (m *HttpListenerReport_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpListenerReport_Error.Unmarshal(m, b)
}
func (m *HttpListenerReport_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpListenerReport_Error.Marshal(b, m, deterministic)
}
func (m *HttpListenerReport_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpListenerReport_Error.Merge(m, src)
}
func (m *HttpListenerReport_Error) XXX_Size() int {
	return xxx_messageInfo_HttpListenerReport_Error.Size(m)
}
func (m *HttpListenerReport_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpListenerReport_Error.DiscardUnknown(m)
}

var xxx_messageInfo_HttpListenerReport_Error proto.InternalMessageInfo

func (m *HttpListenerReport_Error) GetType() HttpListenerReport_Error_Type {
	if m != nil {
		return m.Type
	}
	return HttpListenerReport_Error_ProcessingError
}

func (m *HttpListenerReport_Error) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type VirtualHostReport struct {
	// errors on top-level config of the virtual host
	Errors               []*VirtualHostReport_Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	RouteReports         []*RouteReport             `protobuf:"bytes,2,rep,name=route_reports,json=routeReports,proto3" json:"route_reports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *VirtualHostReport) Reset()         { *m = VirtualHostReport{} }
func (m *VirtualHostReport) String() string { return proto.CompactTextString(m) }
func (*VirtualHostReport) ProtoMessage()    {}
func (*VirtualHostReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{7}
}
func (m *VirtualHostReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualHostReport.Unmarshal(m, b)
}
func (m *VirtualHostReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualHostReport.Marshal(b, m, deterministic)
}
func (m *VirtualHostReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualHostReport.Merge(m, src)
}
func (m *VirtualHostReport) XXX_Size() int {
	return xxx_messageInfo_VirtualHostReport.Size(m)
}
func (m *VirtualHostReport) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualHostReport.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualHostReport proto.InternalMessageInfo

func (m *VirtualHostReport) GetErrors() []*VirtualHostReport_Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *VirtualHostReport) GetRouteReports() []*RouteReport {
	if m != nil {
		return m.RouteReports
	}
	return nil
}

// error types for top-level virtual host config
type VirtualHostReport_Error struct {
	// the type of the error
	Type VirtualHostReport_Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.VirtualHostReport_Error_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualHostReport_Error) Reset()         { *m = VirtualHostReport_Error{} }
func (m *VirtualHostReport_Error) String() string { return proto.CompactTextString(m) }
func (*VirtualHostReport_Error) ProtoMessage()    {}
func (*VirtualHostReport_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{7, 0}
}
func (m *VirtualHostReport_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualHostReport_Error.Unmarshal(m, b)
}
func (m *VirtualHostReport_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualHostReport_Error.Marshal(b, m, deterministic)
}
func (m *VirtualHostReport_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualHostReport_Error.Merge(m, src)
}
func (m *VirtualHostReport_Error) XXX_Size() int {
	return xxx_messageInfo_VirtualHostReport_Error.Size(m)
}
func (m *VirtualHostReport_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualHostReport_Error.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualHostReport_Error proto.InternalMessageInfo

func (m *VirtualHostReport_Error) GetType() VirtualHostReport_Error_Type {
	if m != nil {
		return m.Type
	}
	return VirtualHostReport_Error_NameNotUniqueError
}

func (m *VirtualHostReport_Error) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type RouteReport struct {
	// errors on the config of the route
	Errors []*RouteReport_Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	// warnings on the config of the route
	Warnings             []*RouteReport_Warning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RouteReport) Reset()         { *m = RouteReport{} }
func (m *RouteReport) String() string { return proto.CompactTextString(m) }
func (*RouteReport) ProtoMessage()    {}
func (*RouteReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{8}
}
func (m *RouteReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteReport.Unmarshal(m, b)
}
func (m *RouteReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteReport.Marshal(b, m, deterministic)
}
func (m *RouteReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteReport.Merge(m, src)
}
func (m *RouteReport) XXX_Size() int {
	return xxx_messageInfo_RouteReport.Size(m)
}
func (m *RouteReport) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteReport.DiscardUnknown(m)
}

var xxx_messageInfo_RouteReport proto.InternalMessageInfo

func (m *RouteReport) GetErrors() []*RouteReport_Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *RouteReport) GetWarnings() []*RouteReport_Warning {
	if m != nil {
		return m.Warnings
	}
	return nil
}

// error types for the given route config
type RouteReport_Error struct {
	// the type of the error
	Type RouteReport_Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.RouteReport_Error_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteReport_Error) Reset()         { *m = RouteReport_Error{} }
func (m *RouteReport_Error) String() string { return proto.CompactTextString(m) }
func (*RouteReport_Error) ProtoMessage()    {}
func (*RouteReport_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{8, 0}
}
func (m *RouteReport_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteReport_Error.Unmarshal(m, b)
}
func (m *RouteReport_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteReport_Error.Marshal(b, m, deterministic)
}
func (m *RouteReport_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteReport_Error.Merge(m, src)
}
func (m *RouteReport_Error) XXX_Size() int {
	return xxx_messageInfo_RouteReport_Error.Size(m)
}
func (m *RouteReport_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteReport_Error.DiscardUnknown(m)
}

var xxx_messageInfo_RouteReport_Error proto.InternalMessageInfo

func (m *RouteReport_Error) GetType() RouteReport_Error_Type {
	if m != nil {
		return m.Type
	}
	return RouteReport_Error_InvalidMatcherError
}

func (m *RouteReport_Error) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

// warning types for the given route config
type RouteReport_Warning struct {
	// the type of the error
	Type RouteReport_Warning_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.RouteReport_Warning_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteReport_Warning) Reset()         { *m = RouteReport_Warning{} }
func (m *RouteReport_Warning) String() string { return proto.CompactTextString(m) }
func (*RouteReport_Warning) ProtoMessage()    {}
func (*RouteReport_Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{8, 1}
}
func (m *RouteReport_Warning) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteReport_Warning.Unmarshal(m, b)
}
func (m *RouteReport_Warning) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteReport_Warning.Marshal(b, m, deterministic)
}
func (m *RouteReport_Warning) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteReport_Warning.Merge(m, src)
}
func (m *RouteReport_Warning) XXX_Size() int {
	return xxx_messageInfo_RouteReport_Warning.Size(m)
}
func (m *RouteReport_Warning) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteReport_Warning.DiscardUnknown(m)
}

var xxx_messageInfo_RouteReport_Warning proto.InternalMessageInfo

func (m *RouteReport_Warning) GetType() RouteReport_Warning_Type {
	if m != nil {
		return m.Type
	}
	return RouteReport_Warning_InvalidDestinationWarning
}

func (m *RouteReport_Warning) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type TcpListenerReport struct {
	// errors on top-level config of the listener
	Errors               []*TcpListenerReport_Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	TcpHostReports       []*TcpHostReport           `protobuf:"bytes,2,rep,name=tcp_host_reports,json=tcpHostReports,proto3" json:"tcp_host_reports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *TcpListenerReport) Reset()         { *m = TcpListenerReport{} }
func (m *TcpListenerReport) String() string { return proto.CompactTextString(m) }
func (*TcpListenerReport) ProtoMessage()    {}
func (*TcpListenerReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{9}
}
func (m *TcpListenerReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpListenerReport.Unmarshal(m, b)
}
func (m *TcpListenerReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpListenerReport.Marshal(b, m, deterministic)
}
func (m *TcpListenerReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpListenerReport.Merge(m, src)
}
func (m *TcpListenerReport) XXX_Size() int {
	return xxx_messageInfo_TcpListenerReport.Size(m)
}
func (m *TcpListenerReport) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpListenerReport.DiscardUnknown(m)
}

var xxx_messageInfo_TcpListenerReport proto.InternalMessageInfo

func (m *TcpListenerReport) GetErrors() []*TcpListenerReport_Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *TcpListenerReport) GetTcpHostReports() []*TcpHostReport {
	if m != nil {
		return m.TcpHostReports
	}
	return nil
}

// error types for top-level tcp listener config
type TcpListenerReport_Error struct {
	// the type of the error
	Type TcpListenerReport_Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.TcpListenerReport_Error_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpListenerReport_Error) Reset()         { *m = TcpListenerReport_Error{} }
func (m *TcpListenerReport_Error) String() string { return proto.CompactTextString(m) }
func (*TcpListenerReport_Error) ProtoMessage()    {}
func (*TcpListenerReport_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{9, 0}
}
func (m *TcpListenerReport_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpListenerReport_Error.Unmarshal(m, b)
}
func (m *TcpListenerReport_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpListenerReport_Error.Marshal(b, m, deterministic)
}
func (m *TcpListenerReport_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpListenerReport_Error.Merge(m, src)
}
func (m *TcpListenerReport_Error) XXX_Size() int {
	return xxx_messageInfo_TcpListenerReport_Error.Size(m)
}
func (m *TcpListenerReport_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpListenerReport_Error.DiscardUnknown(m)
}

var xxx_messageInfo_TcpListenerReport_Error proto.InternalMessageInfo

func (m *TcpListenerReport_Error) GetType() TcpListenerReport_Error_Type {
	if m != nil {
		return m.Type
	}
	return TcpListenerReport_Error_NameNotUniqueError
}

func (m *TcpListenerReport_Error) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type TcpHostReport struct {
	// errors on the tcp host
	Errors               []*TcpHostReport_Error `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TcpHostReport) Reset()         { *m = TcpHostReport{} }
func (m *TcpHostReport) String() string { return proto.CompactTextString(m) }
func (*TcpHostReport) ProtoMessage()    {}
func (*TcpHostReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{10}
}
func (m *TcpHostReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpHostReport.Unmarshal(m, b)
}
func (m *TcpHostReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpHostReport.Marshal(b, m, deterministic)
}
func (m *TcpHostReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpHostReport.Merge(m, src)
}
func (m *TcpHostReport) XXX_Size() int {
	return xxx_messageInfo_TcpHostReport.Size(m)
}
func (m *TcpHostReport) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpHostReport.DiscardUnknown(m)
}

var xxx_messageInfo_TcpHostReport proto.InternalMessageInfo

func (m *TcpHostReport) GetErrors() []*TcpHostReport_Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

// error types for tcp host config
type TcpHostReport_Error struct {
	// the type of the error
	Type TcpHostReport_Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.TcpHostReport_Error_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpHostReport_Error) Reset()         { *m = TcpHostReport_Error{} }
func (m *TcpHostReport_Error) String() string { return proto.CompactTextString(m) }
func (*TcpHostReport_Error) ProtoMessage()    {}
func (*TcpHostReport_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_42c5fd38afd0efb1, []int{10, 0}
}
func (m *TcpHostReport_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpHostReport_Error.Unmarshal(m, b)
}
func (m *TcpHostReport_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpHostReport_Error.Marshal(b, m, deterministic)
}
func (m *TcpHostReport_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpHostReport_Error.Merge(m, src)
}
func (m *TcpHostReport_Error) XXX_Size() int {
	return xxx_messageInfo_TcpHostReport_Error.Size(m)
}
func (m *TcpHostReport_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpHostReport_Error.DiscardUnknown(m)
}

var xxx_messageInfo_TcpHostReport_Error proto.InternalMessageInfo

func (m *TcpHostReport_Error) GetType() TcpHostReport_Error_Type {
	if m != nil {
		return m.Type
	}
	return TcpHostReport_Error_NameNotUniqueError
}

func (m *TcpHostReport_Error) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func init() {
	proto.RegisterEnum("gloo.solo.io.ListenerReport_Error_Type", ListenerReport_Error_Type_name, ListenerReport_Error_Type_value)
	proto.RegisterEnum("gloo.solo.io.HttpListenerReport_Error_Type", HttpListenerReport_Error_Type_name, HttpListenerReport_Error_Type_value)
	proto.RegisterEnum("gloo.solo.io.VirtualHostReport_Error_Type", VirtualHostReport_Error_Type_name, VirtualHostReport_Error_Type_value)
	proto.RegisterEnum("gloo.solo.io.RouteReport_Error_Type", RouteReport_Error_Type_name, RouteReport_Error_Type_value)
	proto.RegisterEnum("gloo.solo.io.RouteReport_Warning_Type", RouteReport_Warning_Type_name, RouteReport_Warning_Type_value)
	proto.RegisterEnum("gloo.solo.io.TcpListenerReport_Error_Type", TcpListenerReport_Error_Type_name, TcpListenerReport_Error_Type_value)
	proto.RegisterEnum("gloo.solo.io.TcpHostReport_Error_Type", TcpHostReport_Error_Type_name, TcpHostReport_Error_Type_value)
	proto.RegisterType((*ProxyValidationServiceRequest)(nil), "gloo.solo.io.ProxyValidationServiceRequest")
	proto.RegisterType((*ProxyValidationServiceResponse)(nil), "gloo.solo.io.ProxyValidationServiceResponse")
	proto.RegisterType((*NotifyOnResyncRequest)(nil), "gloo.solo.io.NotifyOnResyncRequest")
	proto.RegisterType((*NotifyOnResyncResponse)(nil), "gloo.solo.io.NotifyOnResyncResponse")
	proto.RegisterType((*ProxyReport)(nil), "gloo.solo.io.ProxyReport")
	proto.RegisterType((*ListenerReport)(nil), "gloo.solo.io.ListenerReport")
	proto.RegisterType((*ListenerReport_Error)(nil), "gloo.solo.io.ListenerReport.Error")
	proto.RegisterType((*HttpListenerReport)(nil), "gloo.solo.io.HttpListenerReport")
	proto.RegisterType((*HttpListenerReport_Error)(nil), "gloo.solo.io.HttpListenerReport.Error")
	proto.RegisterType((*VirtualHostReport)(nil), "gloo.solo.io.VirtualHostReport")
	proto.RegisterType((*VirtualHostReport_Error)(nil), "gloo.solo.io.VirtualHostReport.Error")
	proto.RegisterType((*RouteReport)(nil), "gloo.solo.io.RouteReport")
	proto.RegisterType((*RouteReport_Error)(nil), "gloo.solo.io.RouteReport.Error")
	proto.RegisterType((*RouteReport_Warning)(nil), "gloo.solo.io.RouteReport.Warning")
	proto.RegisterType((*TcpListenerReport)(nil), "gloo.solo.io.TcpListenerReport")
	proto.RegisterType((*TcpListenerReport_Error)(nil), "gloo.solo.io.TcpListenerReport.Error")
	proto.RegisterType((*TcpHostReport)(nil), "gloo.solo.io.TcpHostReport")
	proto.RegisterType((*TcpHostReport_Error)(nil), "gloo.solo.io.TcpHostReport.Error")
}

func init() {
	proto.RegisterFile("github.com/solo-io/solo-apis/api/gloo/gloo/grpc/validation/proxy_validation.proto", fileDescriptor_42c5fd38afd0efb1)
}

var fileDescriptor_42c5fd38afd0efb1 = []byte{
	// 881 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x96, 0xcf, 0x72, 0xe3, 0x44,
	0x10, 0xc6, 0x2d, 0x3b, 0x1b, 0xa0, 0x9d, 0x78, 0x9d, 0xb1, 0xd7, 0x71, 0x14, 0x96, 0xf5, 0x8a,
	0xdd, 0x10, 0x58, 0x90, 0xc1, 0x50, 0x05, 0x2c, 0x6c, 0x28, 0xf2, 0xa7, 0x08, 0x54, 0x08, 0x8e,
	0x62, 0x42, 0x15, 0x07, 0x5c, 0x8a, 0x32, 0xb1, 0xa7, 0xb0, 0x35, 0xca, 0xcc, 0xd8, 0xe0, 0x03,
	0x37, 0xee, 0xbc, 0x01, 0x47, 0x6e, 0x3c, 0x04, 0x55, 0xf0, 0x00, 0x5c, 0x39, 0x71, 0xe3, 0x1d,
	0x38, 0x51, 0x96, 0xc6, 0x8a, 0x35, 0x92, 0x2d, 0x1d, 0xb9, 0x24, 0x35, 0xa3, 0xee, 0x4f, 0xdf,
	0xfc, 0xba, 0x3d, 0x6a, 0x38, 0xeb, 0x11, 0xd1, 0x1f, 0x5d, 0x9a, 0x0e, 0x1d, 0x36, 0x39, 0x1d,
	0xd0, 0x37, 0x08, 0x0d, 0xfe, 0xdb, 0x1e, 0xe1, 0x4d, 0xdb, 0x23, 0xcd, 0xde, 0x80, 0x52, 0xf9,
	0x87, 0x79, 0x4e, 0x73, 0x6c, 0x0f, 0xc8, 0x95, 0x2d, 0x08, 0x75, 0x9b, 0x1e, 0xa3, 0xdf, 0x4f,
	0xba, 0xb7, 0x1b, 0xa6, 0xc7, 0xa8, 0xa0, 0x68, 0x6d, 0x1a, 0x6c, 0x4e, 0x45, 0x4c, 0x42, 0xf5,
	0x9d, 0x45, 0x6a, 0xe3, 0xb7, 0x02, 0x81, 0x20, 0xcb, 0xf8, 0x0c, 0xee, 0xb7, 0xa7, 0xcb, 0x8b,
	0x50, 0xee, 0x1c, 0xb3, 0x31, 0x71, 0xb0, 0x85, 0x6f, 0x46, 0x98, 0x0b, 0xf4, 0x2a, 0xdc, 0xf1,
	0xe3, 0xeb, 0x5a, 0x43, 0xdb, 0x2d, 0xb6, 0x2a, 0xe6, 0xfc, 0x6b, 0x4c, 0x3f, 0xd7, 0x0a, 0x22,
	0x8c, 0x6f, 0xe0, 0xa5, 0x45, 0x5a, 0xdc, 0xa3, 0x2e, 0xc7, 0xe8, 0x43, 0x58, 0x0b, 0xdc, 0x33,
	0xec, 0x51, 0x26, 0xa4, 0xe6, 0x56, 0x92, 0xa6, 0x1f, 0x60, 0x15, 0xbd, 0xdb, 0x85, 0xb1, 0x09,
	0xf7, 0x4e, 0xa9, 0x20, 0xd7, 0x93, 0x2f, 0x5c, 0x0b, 0xf3, 0x89, 0xeb, 0x48, 0x8f, 0x46, 0x1d,
	0x6a, 0xea, 0x83, 0xe0, 0x85, 0xc6, 0x05, 0x14, 0xe7, 0xe4, 0xd0, 0x27, 0x50, 0x1e, 0x10, 0x2e,
	0xb0, 0x8b, 0x99, 0xb4, 0xc0, 0xeb, 0x5a, 0xa3, 0xb0, 0x5b, 0x6c, 0xbd, 0x18, 0xf5, 0x70, 0x22,
	0xa3, 0xa4, 0x8d, 0xbb, 0x83, 0xc8, 0x9a, 0x1b, 0x7f, 0x16, 0xa0, 0x14, 0x8d, 0x41, 0x4f, 0x61,
	0x15, 0x33, 0x46, 0x19, 0xaf, 0xe7, 0x7d, 0x45, 0x63, 0x99, 0xa2, 0x79, 0x34, 0x0d, 0xb5, 0x64,
	0x06, 0xea, 0x40, 0xb5, 0x2f, 0x84, 0xd7, 0x55, 0xcc, 0xd5, 0x0b, 0x3e, 0x9f, 0x46, 0x54, 0xe9,
	0x58, 0x08, 0x2f, 0xaa, 0x76, 0x9c, 0xb3, 0x50, 0x3f, 0xb6, 0x8b, 0xce, 0xa0, 0x22, 0x9c, 0xb8,
	0xe8, 0x8a, 0x2f, 0xfa, 0x20, 0x2a, 0xda, 0x71, 0xe2, 0x9a, 0x1b, 0x42, 0xdd, 0xd4, 0x7f, 0xd3,
	0xe0, 0x8e, 0x6f, 0x1d, 0x7d, 0x00, 0x2b, 0x62, 0xe2, 0x61, 0xbf, 0x84, 0xa5, 0xd6, 0x2b, 0xe9,
	0x87, 0x35, 0x3b, 0x13, 0x0f, 0x5b, 0x7e, 0x12, 0xaa, 0xc1, 0x2a, 0xc3, 0x36, 0xa7, 0x6e, 0x3d,
	0xdf, 0xd0, 0x76, 0x5f, 0xb0, 0xe4, 0xca, 0x70, 0x60, 0xa5, 0x13, 0x3c, 0x47, 0xa7, 0xf6, 0x10,
	0x9f, 0x52, 0xf1, 0xa5, 0x4b, 0x6e, 0x46, 0xd8, 0x17, 0x28, 0xe7, 0x90, 0x0e, 0xb5, 0x7d, 0xe2,
	0x5e, 0xb5, 0x29, 0x13, 0xca, 0x33, 0x0d, 0x21, 0x28, 0x9d, 0x9f, 0x9f, 0x1c, 0x50, 0xf7, 0x9a,
	0xf4, 0x82, 0xbd, 0x3c, 0xaa, 0xc0, 0xdd, 0x36, 0xa3, 0x0e, 0xe6, 0x9c, 0xb8, 0x72, 0xb3, 0xb0,
	0x5f, 0x83, 0x6a, 0x88, 0x64, 0xea, 0x46, 0x72, 0x31, 0x7e, 0xc9, 0x03, 0x8a, 0xb3, 0x45, 0x7b,
	0x61, 0x5d, 0x83, 0x4e, 0xd9, 0x49, 0xab, 0x86, 0x52, 0xdb, 0x33, 0xa8, 0x8e, 0x09, 0x13, 0x23,
	0x7b, 0xd0, 0xed, 0x53, 0x2e, 0xc2, 0xbe, 0x0b, 0xba, 0x44, 0x29, 0xc3, 0x45, 0x10, 0x79, 0x4c,
	0xb9, 0x90, 0xad, 0x87, 0xc6, 0xea, 0x16, 0xd7, 0x7f, 0x98, 0x15, 0xe1, 0xa3, 0x48, 0x11, 0x9e,
	0x64, 0x73, 0x96, 0xa5, 0x10, 0xdb, 0xb2, 0x10, 0x09, 0x00, 0x73, 0xc6, 0x5f, 0x79, 0xd8, 0x88,
	0x19, 0x45, 0xcf, 0x14, 0x4e, 0x8f, 0x53, 0x4e, 0xa6, 0x60, 0xda, 0x83, 0x75, 0x46, 0x47, 0x02,
	0x2b, 0x7c, 0x94, 0xbb, 0xc1, 0x9a, 0x86, 0x48, 0x32, 0x6b, 0xec, 0x76, 0xc1, 0xf5, 0x3f, 0xc2,
	0xce, 0xdc, 0x8b, 0x40, 0x79, 0x2d, 0x93, 0x8d, 0x2c, 0x4c, 0xae, 0x52, 0x9a, 0x73, 0x0b, 0xee,
	0x1d, 0xd2, 0xa1, 0x4d, 0x5c, 0x1e, 0xeb, 0xcd, 0x04, 0x8c, 0x79, 0x54, 0x85, 0xf2, 0xd1, 0xd0,
	0x13, 0x93, 0x20, 0x49, 0x76, 0xa7, 0xf1, 0x73, 0x01, 0x8a, 0x73, 0xa7, 0x44, 0xef, 0x2a, 0x58,
	0x1f, 0x2c, 0x04, 0xa2, 0x00, 0x7d, 0x06, 0xcf, 0x7f, 0x67, 0x33, 0x97, 0xb8, 0xbd, 0x19, 0xcb,
	0x87, 0x8b, 0x53, 0xbf, 0x0a, 0x22, 0xad, 0x30, 0x45, 0xff, 0x29, 0xe4, 0xf9, 0x5e, 0x84, 0xe7,
	0xa3, 0x94, 0xf7, 0x67, 0x21, 0xf9, 0x8e, 0x24, 0xb9, 0x09, 0x95, 0x4f, 0x5d, 0xff, 0x43, 0xf6,
	0xb9, 0x2d, 0x9c, 0x3e, 0x66, 0x33, 0x94, 0x09, 0xbc, 0x34, 0xfd, 0x47, 0x0d, 0x9e, 0x93, 0x3e,
	0xd1, 0xd3, 0x88, 0xa7, 0x9d, 0xd4, 0x83, 0x65, 0x71, 0xf5, 0x58, 0xba, 0xba, 0x0f, 0x5b, 0xd2,
	0xd5, 0x21, 0xe6, 0x82, 0xb8, 0xfe, 0x97, 0x4c, 0xea, 0x94, 0x73, 0xc6, 0xdf, 0x79, 0xd8, 0x88,
	0xdd, 0x96, 0x69, 0xdd, 0x1f, 0x4b, 0x50, 0x8a, 0x75, 0x04, 0xe5, 0xe9, 0x55, 0x9d, 0x70, 0x41,
	0x6c, 0xc7, 0x84, 0xe6, 0x2e, 0x87, 0x92, 0x98, 0x5f, 0x72, 0xfd, 0xf7, 0x6c, 0x3f, 0x82, 0x05,
	0x6e, 0xfe, 0x2f, 0x37, 0xb4, 0xf1, 0xaf, 0x06, 0xeb, 0x91, 0x83, 0xa2, 0xf7, 0x95, 0x8f, 0xeb,
	0xc3, 0x25, 0x54, 0xa2, 0x68, 0xf5, 0x5f, 0x43, 0x26, 0x4b, 0x9b, 0x26, 0x41, 0x22, 0x0b, 0x8f,
	0x76, 0x0a, 0x8f, 0x6d, 0xd8, 0x8c, 0x37, 0xd3, 0xb2, 0x6b, 0xa1, 0xf5, 0x8f, 0x06, 0xb5, 0xe4,
	0x31, 0x0a, 0x75, 0xa1, 0x14, 0x9d, 0x73, 0xd0, 0xcb, 0xd1, 0x43, 0x24, 0x8e, 0x47, 0xfa, 0xa3,
	0xe5, 0x41, 0x72, 0x54, 0xca, 0xbd, 0xa9, 0xa1, 0x01, 0xac, 0xcb, 0xb7, 0x62, 0xdf, 0x02, 0x7a,
	0x92, 0x30, 0x9a, 0x2d, 0x1a, 0x15, 0xf5, 0xd7, 0xb3, 0x05, 0xcf, 0xde, 0xb7, 0x7f, 0xf0, 0xf5,
	0xc7, 0x4b, 0xc7, 0x60, 0xef, 0xdb, 0x5e, 0x38, 0xbc, 0xce, 0x54, 0xd5, 0x69, 0xf8, 0x72, 0xd5,
	0x9f, 0x63, 0xdf, 0xfe, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x87, 0xfb, 0xcc, 0x6f, 0x52, 0x0b, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProxyValidationServiceClient is the client API for ProxyValidationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyValidationServiceClient interface {
	// Notify the client whenever the Proxy Validation Service resyncs
	NotifyOnResync(ctx context.Context, in *NotifyOnResyncRequest, opts ...grpc.CallOption) (ProxyValidationService_NotifyOnResyncClient, error)
	// Submit a proxy for validation
	ValidateProxy(ctx context.Context, in *ProxyValidationServiceRequest, opts ...grpc.CallOption) (*ProxyValidationServiceResponse, error)
}

type proxyValidationServiceClient struct {
	cc *grpc.ClientConn
}

func NewProxyValidationServiceClient(cc *grpc.ClientConn) ProxyValidationServiceClient {
	return &proxyValidationServiceClient{cc}
}

func (c *proxyValidationServiceClient) NotifyOnResync(ctx context.Context, in *NotifyOnResyncRequest, opts ...grpc.CallOption) (ProxyValidationService_NotifyOnResyncClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProxyValidationService_serviceDesc.Streams[0], "/gloo.solo.io.ProxyValidationService/NotifyOnResync", opts...)
	if err != nil {
		return nil, err
	}
	x := &proxyValidationServiceNotifyOnResyncClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProxyValidationService_NotifyOnResyncClient interface {
	Recv() (*NotifyOnResyncResponse, error)
	grpc.ClientStream
}

type proxyValidationServiceNotifyOnResyncClient struct {
	grpc.ClientStream
}

func (x *proxyValidationServiceNotifyOnResyncClient) Recv() (*NotifyOnResyncResponse, error) {
	m := new(NotifyOnResyncResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *proxyValidationServiceClient) ValidateProxy(ctx context.Context, in *ProxyValidationServiceRequest, opts ...grpc.CallOption) (*ProxyValidationServiceResponse, error) {
	out := new(ProxyValidationServiceResponse)
	err := c.cc.Invoke(ctx, "/gloo.solo.io.ProxyValidationService/ValidateProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyValidationServiceServer is the server API for ProxyValidationService service.
type ProxyValidationServiceServer interface {
	// Notify the client whenever the Proxy Validation Service resyncs
	NotifyOnResync(*NotifyOnResyncRequest, ProxyValidationService_NotifyOnResyncServer) error
	// Submit a proxy for validation
	ValidateProxy(context.Context, *ProxyValidationServiceRequest) (*ProxyValidationServiceResponse, error)
}

// UnimplementedProxyValidationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProxyValidationServiceServer struct {
}

func (*UnimplementedProxyValidationServiceServer) NotifyOnResync(req *NotifyOnResyncRequest, srv ProxyValidationService_NotifyOnResyncServer) error {
	return status.Errorf(codes.Unimplemented, "method NotifyOnResync not implemented")
}
func (*UnimplementedProxyValidationServiceServer) ValidateProxy(ctx context.Context, req *ProxyValidationServiceRequest) (*ProxyValidationServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateProxy not implemented")
}

func RegisterProxyValidationServiceServer(s *grpc.Server, srv ProxyValidationServiceServer) {
	s.RegisterService(&_ProxyValidationService_serviceDesc, srv)
}

func _ProxyValidationService_NotifyOnResync_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NotifyOnResyncRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProxyValidationServiceServer).NotifyOnResync(m, &proxyValidationServiceNotifyOnResyncServer{stream})
}

type ProxyValidationService_NotifyOnResyncServer interface {
	Send(*NotifyOnResyncResponse) error
	grpc.ServerStream
}

type proxyValidationServiceNotifyOnResyncServer struct {
	grpc.ServerStream
}

func (x *proxyValidationServiceNotifyOnResyncServer) Send(m *NotifyOnResyncResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ProxyValidationService_ValidateProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProxyValidationServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyValidationServiceServer).ValidateProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gloo.solo.io.ProxyValidationService/ValidateProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyValidationServiceServer).ValidateProxy(ctx, req.(*ProxyValidationServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProxyValidationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gloo.solo.io.ProxyValidationService",
	HandlerType: (*ProxyValidationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ValidateProxy",
			Handler:    _ProxyValidationService_ValidateProxy_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "NotifyOnResync",
			Handler:       _ProxyValidationService_NotifyOnResync_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/solo-io/solo-apis/api/gloo/gloo/grpc/validation/proxy_validation.proto",
}
