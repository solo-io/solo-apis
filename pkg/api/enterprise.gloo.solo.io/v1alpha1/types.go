// Code generated by skv2. DO NOT EDIT.

// Definitions for the Kubernetes types
package v1alpha1

import (
	. "github.com/solo-io/solo-apis/pkg/api/graphql.gloo.solo.io/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for GraphQLSchema
var GraphQLSchemaGVK = schema.GroupVersionKind{
	Group:   "enterprise.gloo.solo.io",
	Version: "v1alpha1",
	Kind:    "GraphQLSchema",
}

// GraphQLSchema is the Schema for the graphQLSchema API
type GraphQLSchema struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   GraphQLSchemaSpec   `json:"spec,omitempty"`
	Status GraphQLSchemaStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (GraphQLSchema) GVK() schema.GroupVersionKind {
	return GraphQLSchemaGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// GraphQLSchemaList contains a list of GraphQLSchema
type GraphQLSchemaList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GraphQLSchema `json:"items"`
}

func init() {
	SchemeBuilder.Register(&GraphQLSchema{}, &GraphQLSchemaList{})
}
