// Code generated by skv2. DO NOT EDIT.

package v1



import (
    fed_enterprise_gloo_solo_io_v1 "github.com/solo-io/solo-apis/pkg/api/fed.enterprise.gloo.solo.io/v1"

    "k8s.io/client-go/rest"
    "sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for FederatedAuthConfigClient from Clientset
func FederatedAuthConfigClientFromClientsetProvider(clients fed_enterprise_gloo_solo_io_v1.Clientset) fed_enterprise_gloo_solo_io_v1.FederatedAuthConfigClient {
    return clients.FederatedAuthConfigs()
}

// Provider for FederatedAuthConfig Client from Client
func FederatedAuthConfigClientProvider(client client.Client) fed_enterprise_gloo_solo_io_v1.FederatedAuthConfigClient {
    return fed_enterprise_gloo_solo_io_v1.NewFederatedAuthConfigClient(client)
}

type FederatedAuthConfigClientFactory func(client client.Client) fed_enterprise_gloo_solo_io_v1.FederatedAuthConfigClient

func FederatedAuthConfigClientFactoryProvider() FederatedAuthConfigClientFactory {
    return FederatedAuthConfigClientProvider
}

type FederatedAuthConfigClientFromConfigFactory func(cfg *rest.Config) (fed_enterprise_gloo_solo_io_v1.FederatedAuthConfigClient, error)

func FederatedAuthConfigClientFromConfigFactoryProvider() FederatedAuthConfigClientFromConfigFactory {
    return func(cfg *rest.Config) (fed_enterprise_gloo_solo_io_v1.FederatedAuthConfigClient, error) {
        clients, err := fed_enterprise_gloo_solo_io_v1.NewClientsetFromConfig(cfg)
        if err != nil {
            return nil, err
        }
        return clients.FederatedAuthConfigs(), nil
    }
}