// Code generated by skv2. DO NOT EDIT.

package v1beta1



import (
    graphql_gloo_solo_io_v1beta1 "github.com/solo-io/solo-apis/pkg/api/graphql.gloo.solo.io/v1beta1"

    "k8s.io/client-go/rest"
    "sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for GraphQLApiClient from Clientset
func GraphQLApiClientFromClientsetProvider(clients graphql_gloo_solo_io_v1beta1.Clientset) graphql_gloo_solo_io_v1beta1.GraphQLApiClient {
    return clients.GraphQLApis()
}

// Provider for GraphQLApi Client from Client
func GraphQLApiClientProvider(client client.Client) graphql_gloo_solo_io_v1beta1.GraphQLApiClient {
    return graphql_gloo_solo_io_v1beta1.NewGraphQLApiClient(client)
}

type GraphQLApiClientFactory func(client client.Client) graphql_gloo_solo_io_v1beta1.GraphQLApiClient

func GraphQLApiClientFactoryProvider() GraphQLApiClientFactory {
    return GraphQLApiClientProvider
}

type GraphQLApiClientFromConfigFactory func(cfg *rest.Config) (graphql_gloo_solo_io_v1beta1.GraphQLApiClient, error)

func GraphQLApiClientFromConfigFactoryProvider() GraphQLApiClientFromConfigFactory {
    return func(cfg *rest.Config) (graphql_gloo_solo_io_v1beta1.GraphQLApiClient, error) {
        clients, err := graphql_gloo_solo_io_v1beta1.NewClientsetFromConfig(cfg)
        if err != nil {
            return nil, err
        }
        return clients.GraphQLApis(), nil
    }
}