// Code generated by skv2. DO NOT EDIT.

// Definitions for the Kubernetes types
package v2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for MirrorPolicy
var MirrorPolicyGVK = schema.GroupVersionKind{
	Group:   "trafficcontrol.policy.gloo.solo.io",
	Version: "v2",
	Kind:    "MirrorPolicy",
}

// MirrorPolicy is the Schema for the mirrorPolicy API
type MirrorPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   MirrorPolicySpec   `json:"spec,omitempty"`
	Status MirrorPolicyStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (MirrorPolicy) GVK() schema.GroupVersionKind {
	return MirrorPolicyGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// MirrorPolicyList contains a list of MirrorPolicy
type MirrorPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MirrorPolicy `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for RateLimitPolicy
var RateLimitPolicyGVK = schema.GroupVersionKind{
	Group:   "trafficcontrol.policy.gloo.solo.io",
	Version: "v2",
	Kind:    "RateLimitPolicy",
}

// RateLimitPolicy is the Schema for the rateLimitPolicy API
type RateLimitPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   RateLimitPolicySpec   `json:"spec,omitempty"`
	Status RateLimitPolicyStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (RateLimitPolicy) GVK() schema.GroupVersionKind {
	return RateLimitPolicyGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// RateLimitPolicyList contains a list of RateLimitPolicy
type RateLimitPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RateLimitPolicy `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for RateLimitClientConfig
var RateLimitClientConfigGVK = schema.GroupVersionKind{
	Group:   "trafficcontrol.policy.gloo.solo.io",
	Version: "v2",
	Kind:    "RateLimitClientConfig",
}

// RateLimitClientConfig is the Schema for the rateLimitClientConfig API
type RateLimitClientConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   RateLimitClientConfigSpec   `json:"spec,omitempty"`
	Status RateLimitClientConfigStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (RateLimitClientConfig) GVK() schema.GroupVersionKind {
	return RateLimitClientConfigGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// RateLimitClientConfigList contains a list of RateLimitClientConfig
type RateLimitClientConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RateLimitClientConfig `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for HeaderManipulationPolicy
var HeaderManipulationPolicyGVK = schema.GroupVersionKind{
	Group:   "trafficcontrol.policy.gloo.solo.io",
	Version: "v2",
	Kind:    "HeaderManipulationPolicy",
}

// HeaderManipulationPolicy is the Schema for the headerManipulationPolicy API
type HeaderManipulationPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   HeaderManipulationPolicySpec   `json:"spec,omitempty"`
	Status HeaderManipulationPolicyStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (HeaderManipulationPolicy) GVK() schema.GroupVersionKind {
	return HeaderManipulationPolicyGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// HeaderManipulationPolicyList contains a list of HeaderManipulationPolicy
type HeaderManipulationPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HeaderManipulationPolicy `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for TransformationPolicy
var TransformationPolicyGVK = schema.GroupVersionKind{
	Group:   "trafficcontrol.policy.gloo.solo.io",
	Version: "v2",
	Kind:    "TransformationPolicy",
}

// TransformationPolicy is the Schema for the transformationPolicy API
type TransformationPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   TransformationPolicySpec   `json:"spec,omitempty"`
	Status TransformationPolicyStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (TransformationPolicy) GVK() schema.GroupVersionKind {
	return TransformationPolicyGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// TransformationPolicyList contains a list of TransformationPolicy
type TransformationPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TransformationPolicy `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for ProxyProtocolPolicy
var ProxyProtocolPolicyGVK = schema.GroupVersionKind{
	Group:   "trafficcontrol.policy.gloo.solo.io",
	Version: "v2",
	Kind:    "ProxyProtocolPolicy",
}

// ProxyProtocolPolicy is the Schema for the proxyProtocolPolicy API
type ProxyProtocolPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ProxyProtocolPolicySpec   `json:"spec,omitempty"`
	Status ProxyProtocolPolicyStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (ProxyProtocolPolicy) GVK() schema.GroupVersionKind {
	return ProxyProtocolPolicyGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ProxyProtocolPolicyList contains a list of ProxyProtocolPolicy
type ProxyProtocolPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ProxyProtocolPolicy `json:"items"`
}

func init() {
	SchemeBuilder.Register(&MirrorPolicy{}, &MirrorPolicyList{})
	SchemeBuilder.Register(&RateLimitPolicy{}, &RateLimitPolicyList{})
	SchemeBuilder.Register(&RateLimitClientConfig{}, &RateLimitClientConfigList{})
	SchemeBuilder.Register(&HeaderManipulationPolicy{}, &HeaderManipulationPolicyList{})
	SchemeBuilder.Register(&TransformationPolicy{}, &TransformationPolicyList{})
	SchemeBuilder.Register(&ProxyProtocolPolicy{}, &ProxyProtocolPolicyList{})
}
