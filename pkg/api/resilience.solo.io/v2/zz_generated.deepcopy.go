// Code generated by skv2. DO NOT EDIT.

// This file contains generated Deepcopy methods for resilience.solo.io/v2 resources

package v2

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// Generated Deepcopy methods for FailoverPolicy

func (in *FailoverPolicy) DeepCopyInto(out *FailoverPolicy) {
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	// deepcopy spec
	in.Spec.DeepCopyInto(&out.Spec)
	// deepcopy status
	in.Status.DeepCopyInto(&out.Status)

	return
}

func (in *FailoverPolicy) DeepCopy() *FailoverPolicy {
	if in == nil {
		return nil
	}
	out := new(FailoverPolicy)
	in.DeepCopyInto(out)
	return out
}

func (in *FailoverPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *FailoverPolicyList) DeepCopyInto(out *FailoverPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FailoverPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

func (in *FailoverPolicyList) DeepCopy() *FailoverPolicyList {
	if in == nil {
		return nil
	}
	out := new(FailoverPolicyList)
	in.DeepCopyInto(out)
	return out
}

func (in *FailoverPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// Generated Deepcopy methods for OutlierDetectionPolicy

func (in *OutlierDetectionPolicy) DeepCopyInto(out *OutlierDetectionPolicy) {
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	// deepcopy spec
	in.Spec.DeepCopyInto(&out.Spec)
	// deepcopy status
	in.Status.DeepCopyInto(&out.Status)

	return
}

func (in *OutlierDetectionPolicy) DeepCopy() *OutlierDetectionPolicy {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionPolicy)
	in.DeepCopyInto(out)
	return out
}

func (in *OutlierDetectionPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *OutlierDetectionPolicyList) DeepCopyInto(out *OutlierDetectionPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OutlierDetectionPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

func (in *OutlierDetectionPolicyList) DeepCopy() *OutlierDetectionPolicyList {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionPolicyList)
	in.DeepCopyInto(out)
	return out
}

func (in *OutlierDetectionPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// Generated Deepcopy methods for FaultInjectionPolicy

func (in *FaultInjectionPolicy) DeepCopyInto(out *FaultInjectionPolicy) {
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	// deepcopy spec
	in.Spec.DeepCopyInto(&out.Spec)
	// deepcopy status
	in.Status.DeepCopyInto(&out.Status)

	return
}

func (in *FaultInjectionPolicy) DeepCopy() *FaultInjectionPolicy {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicy)
	in.DeepCopyInto(out)
	return out
}

func (in *FaultInjectionPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *FaultInjectionPolicyList) DeepCopyInto(out *FaultInjectionPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FaultInjectionPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

func (in *FaultInjectionPolicyList) DeepCopy() *FaultInjectionPolicyList {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyList)
	in.DeepCopyInto(out)
	return out
}

func (in *FaultInjectionPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// Generated Deepcopy methods for RetryTimeoutPolicy

func (in *RetryTimeoutPolicy) DeepCopyInto(out *RetryTimeoutPolicy) {
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	// deepcopy spec
	in.Spec.DeepCopyInto(&out.Spec)
	// deepcopy status
	in.Status.DeepCopyInto(&out.Status)

	return
}

func (in *RetryTimeoutPolicy) DeepCopy() *RetryTimeoutPolicy {
	if in == nil {
		return nil
	}
	out := new(RetryTimeoutPolicy)
	in.DeepCopyInto(out)
	return out
}

func (in *RetryTimeoutPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *RetryTimeoutPolicyList) DeepCopyInto(out *RetryTimeoutPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RetryTimeoutPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

func (in *RetryTimeoutPolicyList) DeepCopy() *RetryTimeoutPolicyList {
	if in == nil {
		return nil
	}
	out := new(RetryTimeoutPolicyList)
	in.DeepCopyInto(out)
	return out
}

func (in *RetryTimeoutPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}
