// Code generated by skv2. DO NOT EDIT.

package v2

import (
	extensions_gloo_solo_io_v2 "github.com/solo-io/solo-apis/pkg/api/extensions.gloo.solo.io/v2"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for WasmDeploymentPolicyClient from Clientset
func WasmDeploymentPolicyClientFromClientsetProvider(clients extensions_gloo_solo_io_v2.Clientset) extensions_gloo_solo_io_v2.WasmDeploymentPolicyClient {
	return clients.WasmDeploymentPolicies()
}

// Provider for WasmDeploymentPolicy Client from Client
func WasmDeploymentPolicyClientProvider(client client.Client) extensions_gloo_solo_io_v2.WasmDeploymentPolicyClient {
	return extensions_gloo_solo_io_v2.NewWasmDeploymentPolicyClient(client)
}

type WasmDeploymentPolicyClientFactory func(client client.Client) extensions_gloo_solo_io_v2.WasmDeploymentPolicyClient

func WasmDeploymentPolicyClientFactoryProvider() WasmDeploymentPolicyClientFactory {
	return WasmDeploymentPolicyClientProvider
}

type WasmDeploymentPolicyClientFromConfigFactory func(cfg *rest.Config) (extensions_gloo_solo_io_v2.WasmDeploymentPolicyClient, error)

func WasmDeploymentPolicyClientFromConfigFactoryProvider() WasmDeploymentPolicyClientFromConfigFactory {
	return func(cfg *rest.Config) (extensions_gloo_solo_io_v2.WasmDeploymentPolicyClient, error) {
		clients, err := extensions_gloo_solo_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.WasmDeploymentPolicies(), nil
	}
}
