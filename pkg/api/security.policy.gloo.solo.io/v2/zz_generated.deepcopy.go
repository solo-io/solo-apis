// Code generated by skv2. DO NOT EDIT.

// This file contains generated Deepcopy methods for security.policy.gloo.solo.io/v2 resources

package v2

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// Generated Deepcopy methods for AccessPolicy

func (in *AccessPolicy) DeepCopyInto(out *AccessPolicy) {
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	// deepcopy spec
	in.Spec.DeepCopyInto(&out.Spec)
	// deepcopy status
	in.Status.DeepCopyInto(&out.Status)

	return
}

func (in *AccessPolicy) DeepCopy() *AccessPolicy {
	if in == nil {
		return nil
	}
	out := new(AccessPolicy)
	in.DeepCopyInto(out)
	return out
}

func (in *AccessPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *AccessPolicyList) DeepCopyInto(out *AccessPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccessPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

func (in *AccessPolicyList) DeepCopy() *AccessPolicyList {
	if in == nil {
		return nil
	}
	out := new(AccessPolicyList)
	in.DeepCopyInto(out)
	return out
}

func (in *AccessPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// Generated Deepcopy methods for CORSPolicy

func (in *CORSPolicy) DeepCopyInto(out *CORSPolicy) {
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	// deepcopy spec
	in.Spec.DeepCopyInto(&out.Spec)
	// deepcopy status
	in.Status.DeepCopyInto(&out.Status)

	return
}

func (in *CORSPolicy) DeepCopy() *CORSPolicy {
	if in == nil {
		return nil
	}
	out := new(CORSPolicy)
	in.DeepCopyInto(out)
	return out
}

func (in *CORSPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *CORSPolicyList) DeepCopyInto(out *CORSPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CORSPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

func (in *CORSPolicyList) DeepCopy() *CORSPolicyList {
	if in == nil {
		return nil
	}
	out := new(CORSPolicyList)
	in.DeepCopyInto(out)
	return out
}

func (in *CORSPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// Generated Deepcopy methods for CSRFPolicy

func (in *CSRFPolicy) DeepCopyInto(out *CSRFPolicy) {
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	// deepcopy spec
	in.Spec.DeepCopyInto(&out.Spec)
	// deepcopy status
	in.Status.DeepCopyInto(&out.Status)

	return
}

func (in *CSRFPolicy) DeepCopy() *CSRFPolicy {
	if in == nil {
		return nil
	}
	out := new(CSRFPolicy)
	in.DeepCopyInto(out)
	return out
}

func (in *CSRFPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *CSRFPolicyList) DeepCopyInto(out *CSRFPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CSRFPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

func (in *CSRFPolicyList) DeepCopy() *CSRFPolicyList {
	if in == nil {
		return nil
	}
	out := new(CSRFPolicyList)
	in.DeepCopyInto(out)
	return out
}

func (in *CSRFPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// Generated Deepcopy methods for ExtAuthPolicy

func (in *ExtAuthPolicy) DeepCopyInto(out *ExtAuthPolicy) {
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	// deepcopy spec
	in.Spec.DeepCopyInto(&out.Spec)
	// deepcopy status
	in.Status.DeepCopyInto(&out.Status)

	return
}

func (in *ExtAuthPolicy) DeepCopy() *ExtAuthPolicy {
	if in == nil {
		return nil
	}
	out := new(ExtAuthPolicy)
	in.DeepCopyInto(out)
	return out
}

func (in *ExtAuthPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *ExtAuthPolicyList) DeepCopyInto(out *ExtAuthPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExtAuthPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

func (in *ExtAuthPolicyList) DeepCopy() *ExtAuthPolicyList {
	if in == nil {
		return nil
	}
	out := new(ExtAuthPolicyList)
	in.DeepCopyInto(out)
	return out
}

func (in *ExtAuthPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// Generated Deepcopy methods for WAFPolicy

func (in *WAFPolicy) DeepCopyInto(out *WAFPolicy) {
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	// deepcopy spec
	in.Spec.DeepCopyInto(&out.Spec)
	// deepcopy status
	in.Status.DeepCopyInto(&out.Status)

	return
}

func (in *WAFPolicy) DeepCopy() *WAFPolicy {
	if in == nil {
		return nil
	}
	out := new(WAFPolicy)
	in.DeepCopyInto(out)
	return out
}

func (in *WAFPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *WAFPolicyList) DeepCopyInto(out *WAFPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WAFPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

func (in *WAFPolicyList) DeepCopy() *WAFPolicyList {
	if in == nil {
		return nil
	}
	out := new(WAFPolicyList)
	in.DeepCopyInto(out)
	return out
}

func (in *WAFPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// Generated Deepcopy methods for JWTPolicy

func (in *JWTPolicy) DeepCopyInto(out *JWTPolicy) {
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

	// deepcopy spec
	in.Spec.DeepCopyInto(&out.Spec)
	// deepcopy status
	in.Status.DeepCopyInto(&out.Status)

	return
}

func (in *JWTPolicy) DeepCopy() *JWTPolicy {
	if in == nil {
		return nil
	}
	out := new(JWTPolicy)
	in.DeepCopyInto(out)
	return out
}

func (in *JWTPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func (in *JWTPolicyList) DeepCopyInto(out *JWTPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]JWTPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

func (in *JWTPolicyList) DeepCopy() *JWTPolicyList {
	if in == nil {
		return nil
	}
	out := new(JWTPolicyList)
	in.DeepCopyInto(out)
	return out
}

func (in *JWTPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}
