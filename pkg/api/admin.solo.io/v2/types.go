// Code generated by skv2. DO NOT EDIT.

// Definitions for the Kubernetes types
package v2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for Workspace
var WorkspaceGVK = schema.GroupVersionKind{
	Group:   "admin.solo.io",
	Version: "v2",
	Kind:    "Workspace",
}

// Workspace is the Schema for the workspace API
type Workspace struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   WorkspaceSpec   `json:"spec,omitempty"`
	Status WorkspaceStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (Workspace) GVK() schema.GroupVersionKind {
	return WorkspaceGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// WorkspaceList contains a list of Workspace
type WorkspaceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Workspace `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for WorkspaceSettings
var WorkspaceSettingsGVK = schema.GroupVersionKind{
	Group:   "admin.solo.io",
	Version: "v2",
	Kind:    "WorkspaceSettings",
}

// WorkspaceSettings is the Schema for the workspaceSettings API
type WorkspaceSettings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   WorkspaceSettingsSpec   `json:"spec,omitempty"`
	Status WorkspaceSettingsStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (WorkspaceSettings) GVK() schema.GroupVersionKind {
	return WorkspaceSettingsGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// WorkspaceSettingsList contains a list of WorkspaceSettings
type WorkspaceSettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WorkspaceSettings `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for KubernetesCluster
var KubernetesClusterGVK = schema.GroupVersionKind{
	Group:   "admin.solo.io",
	Version: "v2",
	Kind:    "KubernetesCluster",
}

// KubernetesCluster is the Schema for the kubernetesCluster API
type KubernetesCluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   KubernetesClusterSpec   `json:"spec,omitempty"`
	Status KubernetesClusterStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (KubernetesCluster) GVK() schema.GroupVersionKind {
	return KubernetesClusterGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// KubernetesClusterList contains a list of KubernetesCluster
type KubernetesClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []KubernetesCluster `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for RootTrustPolicy
var RootTrustPolicyGVK = schema.GroupVersionKind{
	Group:   "admin.solo.io",
	Version: "v2",
	Kind:    "RootTrustPolicy",
}

// RootTrustPolicy is the Schema for the rootTrustPolicy API
type RootTrustPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   RootTrustPolicySpec   `json:"spec,omitempty"`
	Status RootTrustPolicyStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (RootTrustPolicy) GVK() schema.GroupVersionKind {
	return RootTrustPolicyGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// RootTrustPolicyList contains a list of RootTrustPolicy
type RootTrustPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RootTrustPolicy `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for ExtAuthServer
var ExtAuthServerGVK = schema.GroupVersionKind{
	Group:   "admin.solo.io",
	Version: "v2",
	Kind:    "ExtAuthServer",
}

// ExtAuthServer is the Schema for the extAuthServer API
type ExtAuthServer struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ExtAuthServerSpec   `json:"spec,omitempty"`
	Status ExtAuthServerStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (ExtAuthServer) GVK() schema.GroupVersionKind {
	return ExtAuthServerGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// ExtAuthServerList contains a list of ExtAuthServer
type ExtAuthServerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ExtAuthServer `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for RateLimitServerSettings
var RateLimitServerSettingsGVK = schema.GroupVersionKind{
	Group:   "admin.solo.io",
	Version: "v2",
	Kind:    "RateLimitServerSettings",
}

// RateLimitServerSettings is the Schema for the rateLimitServerSettings API
type RateLimitServerSettings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   RateLimitServerSettingsSpec   `json:"spec,omitempty"`
	Status RateLimitServerSettingsStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (RateLimitServerSettings) GVK() schema.GroupVersionKind {
	return RateLimitServerSettingsGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// RateLimitServerSettingsList contains a list of RateLimitServerSettings
type RateLimitServerSettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RateLimitServerSettings `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for RateLimitServerConfig
var RateLimitServerConfigGVK = schema.GroupVersionKind{
	Group:   "admin.solo.io",
	Version: "v2",
	Kind:    "RateLimitServerConfig",
}

// RateLimitServerConfig is the Schema for the rateLimitServerConfig API
type RateLimitServerConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   RateLimitServerConfigSpec   `json:"spec,omitempty"`
	Status RateLimitServerConfigStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (RateLimitServerConfig) GVK() schema.GroupVersionKind {
	return RateLimitServerConfigGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// RateLimitServerConfigList contains a list of RateLimitServerConfig
type RateLimitServerConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RateLimitServerConfig `json:"items"`
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
// +kubebuilder:subresource:status

// GroupVersionKind for Dashboard
var DashboardGVK = schema.GroupVersionKind{
	Group:   "admin.solo.io",
	Version: "v2",
	Kind:    "Dashboard",
}

// Dashboard is the Schema for the dashboard API
type Dashboard struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   DashboardSpec   `json:"spec,omitempty"`
	Status DashboardStatus `json:"status,omitempty"`
}

// GVK returns the GroupVersionKind associated with the resource type.
func (Dashboard) GVK() schema.GroupVersionKind {
	return DashboardGVK
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// DashboardList contains a list of Dashboard
type DashboardList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Dashboard `json:"items"`
}

func init() {
	SchemeBuilder.Register(&Workspace{}, &WorkspaceList{})
	SchemeBuilder.Register(&WorkspaceSettings{}, &WorkspaceSettingsList{})
	SchemeBuilder.Register(&KubernetesCluster{}, &KubernetesClusterList{})
	SchemeBuilder.Register(&RootTrustPolicy{}, &RootTrustPolicyList{})
	SchemeBuilder.Register(&ExtAuthServer{}, &ExtAuthServerList{})
	SchemeBuilder.Register(&RateLimitServerSettings{}, &RateLimitServerSettingsList{})
	SchemeBuilder.Register(&RateLimitServerConfig{}, &RateLimitServerConfigList{})
	SchemeBuilder.Register(&Dashboard{}, &DashboardList{})
}
