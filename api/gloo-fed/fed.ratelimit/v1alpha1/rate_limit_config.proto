syntax = "proto3";
package fed.ratelimit.solo.io;

option go_package = "github.com/solo-io/solo-apis/pkg/api/fed.ratelimit.solo.io/v1alpha1/types";


option (extproto.equal_all) = true;
import "extproto/ext.proto";
option (extproto.hash_all) = true;

import "github.com/solo-io/solo-apis/api/gloo-fed/multicluster/v1alpha1/multicluster.proto";
import "github.com/solo-io/solo-apis/api/gloo-fed/fed/core/v1/placement.proto";
import "github.com/solo-io/solo-apis/api/rate-limiter/v1alpha1/ratelimit.proto";

// The Federated[Resource] CRDs are a gloo-fed wrapper around Gloo Edge CRDs, with a Placement field indicating which
// clusters and namespaces to federate the object to.
// For more, see: https://docs.solo.io/gloo-edge/latest/guides/gloo_federation/federated_configuration/
message FederatedRateLimitConfigSpec {
    message Template {
        .ratelimit.api.solo.io.RateLimitConfigSpec spec = 1;

        core.fed.solo.io.TemplateMetadata metadata = 2;
    }

    Template template = 1;

    multicluster.solo.io.Placement placement = 2;
}

message FederatedRateLimitConfigStatus {
    core.fed.solo.io.PlacementStatus placement_status = 1;
}