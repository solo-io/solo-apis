---
# Workspace
apiVersion: admin.gloo.solo.io/v2
kind: Workspace
metadata:
  # a workspace for managing global ingress across all workspaces
  name: global-ingress
  # workspaces live in management cluster
  namespace: gloo-mesh
spec:
  # this workspace owns a namespace called 'gateway' in all registered clusters.
  namespaces:
    # the name field here supports wildcard matching, using '*' for string substitution
    - name: gateway
  # this workspace imports all exported resources from selected workspaces
  imports:
    - workspaces:
        - matchLabels:
            # user-defined labels for self-service workspace discovery
            acme.io/export-to-gateway: 'true'

  # this workspace imports all exported resources from selected workspaces
  exports:
    - workspaces:
        - name: backend
      routeRables
      virtualWorkload
      virtualHost

  # optional: define a root namespace which will be treated as global config for the whole workspace
  configRoot:
    namespace: gateway
    cluster: management-plane

---
# Defines a shared Gateway which routes traffic to endpoints in the the workspace, as well as endpoints imported from other workspaces
apiVersion: gateway.mesh.gloo.solo.io/v2
kind: VirtualGateway
metadata:
  name: global-ingress
  # gateways should be defined in the workspace that contains gateway workloads
  namespace: gateway
spec:
  # deploy this gateway to istio instances in this workspce match
  workloadSelector:
    - matchLabels:
        istio: ingressgateway
  # define the listeners
  listeners:
    - connectionMatch:
        port: 8080
        protocol: TCP

      # http listener type
      http:
        tlsTermination:
          httpsRedirect: true
          secretName: app-gateway-secret
        # handle http requests using virtual hosts available to this workspce
        virtualHostSelectors:
          - matchLabels:
              # expose virtual hosts with these labels on this gateway
              acme.io/app-gateway: 'true'

---
apiVersion: gateway.mesh.gloo.solo.io/v2
kind: VirtualHost
metadata:
  # Virtual Host to serve the UI workspace on a given domain
  name: web-ui-virtual-host
  # virtual hosts can be hosted in the gateway workspace, or they can be imported from other workspaces
  namespace: gateway'
spec:
  # define the hosts on which this virtualhost will serve requests
  hosts:
    - app.example.com
    - *.app.example.com
  httpRouteTable:
    # serve traffic for this domain using the web-ui-root-routes route table, which is imported from the web-ui workspace
    name: web-ui-root-routes

    # optional, only required if an import collision happens for a given name in a workspace
    #workspace: web-ui

---

# Backend Virtual Host
apiVersion: gateway.mesh.gloo.solo.io/v2
kind: VirtualHost
metadata:
  name: backend-virtual-host
  namespace: gateway
  labels:
    acme.io/app-gateway: 'exposed'
spec:
  hosts:
    - api.app.example.com
  httpRouteTable:
    name: backend-root-routes

---
# example route with selector destination
routes:
  - matchers:
      - uri:
          prefix: /
    forwardTo:
      destinations:
        - destination:
            apiVersion: mesh.gloo.solo.io/v2
            kind: VirtualDestination
            labelSelector:
              matchLabels:
                app: productpage
            subset:
              version: v1
          weight: 75
        - destination:
            apiVersion: mesh.gloo.solo.io/v2
            kind: VirtualDestination
            labelSelector:
              matchLabels:
                app: productpage
            subset:
              version: v2
          weight: 25