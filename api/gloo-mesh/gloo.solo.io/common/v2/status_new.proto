syntax = "proto3";
package common.gloo.solo.io;
option go_package = "github.com/solo-io/solo-apis/pkg/api/common.gloo.solo.io/v2";

import "github.com/solo-io/solo-apis/api/gloo-mesh/gloo.solo.io/common/v2/approval_state.proto";
import "github.com/solo-io/solo-apis/api/gloo-mesh/gloo.solo.io/common/v2/selectors.proto";
import "github.com/solo-io/solo-apis/api/gloo-mesh/gloo.solo.io/common/v2/port.proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

import "extproto/ext.proto";
option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;

// $hide_from_docs
message Status {
  State State = 1;

  // Map of ApprovalState to the number of workspaces in the condition, e.g.,
  // "Accepted" -> 2
  // "Pending" -> 1
  map<string, uint32> workspace_conditions = 2;
}

// $hide_from_docs
message State {
  // The most recent generation observed in the the object's metadata.
  // If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
  // has not processed the most recent version of this object.
  int64 observed_generation = 1;

  // Whether the resource has been accepted as valid and processed in the Gloo
  // Mesh config translation.
  ApprovalState approval = 2;

  // Additional information about the current state of the resource.
  string message = 3;
}

// $hide_from_docs
message Report {
  // The state of the resource in each cluster that receives its configuration.
  map<string, State> clusters = 1;
}