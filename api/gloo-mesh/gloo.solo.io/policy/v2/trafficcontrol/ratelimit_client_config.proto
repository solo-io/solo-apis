syntax = "proto3";
package trafficcontrol.policy.gloo.solo.io;
option go_package = "github.com/solo-io/gloo-mesh-enterprise/pkg/api/trafficcontrol.policy.gloo.solo.io/v2";

import "github.com/solo-io/solo-apis/api/gloo-mesh/external/cue/encoding/protobuf/cue/cue.proto";
import "github.com/solo-io/solo-apis/api/rate-limiter/v1alpha1/ratelimit.proto";
import "github.com/solo-io/solo-apis/api/gloo-mesh/gloo.solo.io/common/v2/status.proto";

import "google/protobuf/duration.proto";

import "extproto/ext.proto";
option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;

// RateLimitClientConfig is used to configure the ratelimit rules on routes/destinations.
// All RateLimitPolicy resources in a workspace require an RateLimitClientConfig to in order to function.
// If no RateLimitClientConfig is provided, no ratelimit rules will be enforced.
message RateLimitClientConfigSpec {

  // Each `RateLimitClientConfig` is an instance of one specific configuration type.
  // Currently, only raw configuration is supported, but going forward we are planning on adding
  // more high-level configuration formats to support specific use cases.
  oneof config_type {
    // Define a policy using the raw configuration format used by the client (Envoy).
    Raw raw = 1;
  }

}

// This object allows users to specify rate limit policies using the raw configuration formats
// used by the client (Envoy). When using this configuration type, it is up to
// the user to ensure that server and client configurations match to implement the desired behavior.
message Raw {

  // Actions specify how the client (Envoy) will compose the descriptors that
  // will be sent to the server to make a rate limiting decision.
  repeated .ratelimit.api.solo.io.RateLimitActions rate_limits = 3;
}

// The current status of the `RateLimitClientConfig`.
message RateLimitClientConfigStatus {

  .common.gloo.solo.io.GenericGlobalStatus global = 1;

  // The status of the resource in each workspace that it exists in.
  map<string, .common.gloo.solo.io.WorkspaceStatus> workspaces = 2;

}