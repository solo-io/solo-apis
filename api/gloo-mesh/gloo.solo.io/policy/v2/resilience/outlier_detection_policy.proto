syntax = "proto3";
package resilience.policy.gloo.solo.io;
option go_package = "github.com/solo-io/solo-apis/pkg/api/resilience.policy.gloo.solo.io/v2";

import "github.com/solo-io/solo-apis/api/gloo-mesh/gloo.solo.io/common/v2/selectors.proto";
import "github.com/solo-io/solo-apis/api/gloo-mesh/gloo.solo.io/common/v2/status.proto";

import "google/protobuf/duration.proto";
import "extproto/ext.proto";
option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;

// OutlierDetectionPolicy is used to configure [outlier detection](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier) on the selected destinations.
// Specifying this field requires an empty `source_selector` because it must apply to all traffic.
// OutlierDetectionPolicies are applied at the *Destination* level.
message OutlierDetectionPolicySpec {

    // select the destinations where the policy will be applied
    // if left empty, will apply to all destinations in the workspace.
    repeated .common.gloo.solo.io.DestinationSelector apply_to_destinations = 1;

    // The details of the OutlierDetectionPolicy to apply to the selected destinations.
    Config config = 2;

    message Config {

        // The number of errors before a host is ejected from the connection pool. A default will be used if not set.
        uint32 consecutive_errors = 1;

        // The time interval between ejection sweep analysis. Format: `1h`/`1m`/`1s`/`1ms`. Must be >= `1ms`. A default will be used if not set.
        google.protobuf.Duration interval = 2;

        // The minimum ejection duration. Format: `1h`/`1m`/`1s`/`1ms`. Must be >= `1ms`. A default will be used if not set.
        google.protobuf.Duration base_ejection_time = 3;

        // The maximum percentage of hosts that can be ejected from the load balancing pool.
        // At least one host will be ejected regardless of the value. Must be between 0 and 100. A default will be used if not set.
        uint32 max_ejection_percent = 4;

    }

}

// reflects the status of the OutlierDetectionPolicy
message OutlierDetectionPolicyStatus {

  .common.gloo.solo.io.GenericGlobalStatus global = 1;

  // The status of the resource in each workspace that it exists in.
  map<string, .common.gloo.solo.io.WorkspaceStatus> workspaces = 2;

  // Destination ports selected by the policy
  repeated .common.gloo.solo.io.DestinationReference selected_destination_ports = 3;

}
