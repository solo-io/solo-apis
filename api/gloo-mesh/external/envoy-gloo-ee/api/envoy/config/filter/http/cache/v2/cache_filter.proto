syntax = "proto3";

package envoy.config.filter.http.cache.v2;

option go_package = "github.com/solo-io/solo-apis/pkg/api/envoy-gloo-ee/api/envoy/config/filter/http/cache/v2";

option java_package = "io.envoyproxy.envoy.config.filter.http.cache.v2";
option java_outer_classname = "CacheFilterProto";
option java_multiple_files = true;
import "github.com/solo-io/solo-apis/api/gloo-mesh/external/envoyproxy/data-plane-api/envoy/config/core/v3/grpc_service.proto";

import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";

// [#protodoc-title: Cache]

// [#proto-status: experimental]
message Cache {
  // The max content length of in-memory cached data for each worker thread.
  // The content length is calculated as the sum of lengths of both keys and
  // values.
  google.protobuf.UInt32Value in_memory_max_content_length = 1;

  envoy.config.core.v3.GrpcService grpc_service = 2;
  google.protobuf.Duration grpc_timeout = 3;
  string redis_cluster = 4;
  string redis_stat_prefix = 5;
  google.protobuf.Duration redis_op_timeout = 6;

  // [#not-implemented-hide:]
  google.protobuf.UInt32Value max_response_content_length = 7;
}

message CacheFilterRouteConfig { bool is_cacheable = 1; }