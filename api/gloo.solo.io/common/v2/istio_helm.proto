syntax = "proto3";

package common.gloo.solo.io;

import "extproto/ext.proto";
import "k8s.io/api/core/v1/generated.proto";

option go_package = "github.com/solo-io/solo-apis/client-go/common.gloo.solo.io/v2";

option (extproto.equal_all) = true;
option (extproto.clone_all) = true;
option (extproto.hash_all) = true;


// Global configuration values for Helm-based Istio lifecycle agent deployments. 
message IstioLifecycleHelmGlobals {

  // The base URL to the Helm repository that stores the Istio charts.  
  // Currently, only OCI registries are supported. Because of that, the base URL must begin with `oci://`. 
  // This base URL is used to construct the URLs for specific charts. For example, if you specify `oci://gcr.io/istio/charts` as the base URL, it is used to construct the URL to a specific chart, such as `oci://gcr.io/istio/charts/istiod`.
  //
  // If no base URL is specified, the IstioLifecycleManager attempts to pull the Istio charts from a set of known repositories,
  // including the official Istio upstream repository (`oci://gcr.io/istio-release/charts`). 
  string repo = 1;
  
  // Optional. If present, the Gloo agent uses the credentials in the given secrets to log in to the OCI
  // registry to access Istio charts.  
  // Similar to ImagePullSecrets, the secrets that you specify in this section must be of type `kubernetes.io/dockerconfigjson` and 
  // must exist on all the clusters where you want the Gloo agent to install Istio.
  repeated .k8s.io.api.core.v1.ObjectReference repo_secrets = 2;

  // Optional. If true, skip TLS verification when pulling Helm charts from a given OCI repository.
  // Use this setting for testing, quick demos, and exploration purposes only. In production setup, make sure that each
  // node is configured to trust the certificate that is presented by the chart OCI registry.
  bool repo_skip_tls_verify = 3;
}