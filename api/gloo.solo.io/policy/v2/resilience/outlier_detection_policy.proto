// {{% reuse "conrefs/snippets/policies/ov_outlier_detection.md" %}}
//
//Outlier detection is an important part of building resilient apps.
// An outlier detection policy sets up several conditions,
// such as retries and ejection percentages, that Gloo Mesh uses to determine
// if a service is unhealthy. In case an unhealthy service is detected,
// the outlier detection policy defines how Gloo Mesh removes (ejects) services
// from the pool of healthy destinations to send traffic to.
// For VirtualDestinations, traffic is not sent to deployments that are
// unavailable by default.
// Your apps then have time to recover before they are added back
// to the load-balancing pool and checked again for consecutive errors.
//
// Outlier detection policies are applied at the *Destination* level. For more information, see the
// [outlier detection policy guide]({{< link path="/resiliency/fault-injection/" >}}).
//
// ## Example
//
// ```yaml
// {{% readfile file="/static/content/examples/generated/int/virtual_dest_locality_based_failover/cluster-1/outlier-detection-policy_bookinfo_outlier-detection.yaml" %}}
// ```
syntax = "proto3";

package resilience.policy.gloo.solo.io;

import "extproto/ext.proto";
import "github.com/solo-io/solo-apis/api/gloo.solo.io/common/v2/references.proto";
import "github.com/solo-io/solo-apis/api/gloo.solo.io/common/v2/selectors.proto";
import "github.com/solo-io/solo-apis/api/gloo.solo.io/common/v2/status.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/solo-io/solo-apis/client-go/resilience.policy.gloo.solo.io/v2";

option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;

// Specifications for the policy.
message OutlierDetectionPolicySpec {

  // Destinations to apply the policy to.
  // 
  // </br>**Implementation notes**:<ul>
  // <li>If empty, the policy applies to all destinations in the workspace.</li>
  // <li>The outlier detection policy currently supports selecting Gloo virtual destinations.
  // Selecting Kubernetes services is not supported. To select a Gloo external service,
  // the external service must refer to a service that is outside the service mesh
  // but within the same cluster environment. Selecting Gloo external services that
  // refer to a service outside the cluster is not supported.</li></ul>
  //
  // **Configuration constraints**: `applyToDestinations.kind` must equal either `VIRTUAL_DESTINATION` or `EXTERNAL_SERVICE`.
  repeated .common.gloo.solo.io.DestinationSelector apply_to_destinations = 1;

  // The details of the OutlierDetectionPolicy to apply to the selected destinations.
  Config config = 2;

  // The details of the OutlierDetectionPolicy to apply to the selected destinations.
  message Config {

    // The number of 5xx errors that can be returned before a destination is removed
    // from the healthy connection pool. The default is 5.
    //
    // </br>**Configuration constraints**:<ul>
    // <li>The value must be greater than or equal to 1.</li>
    // <li>The maximum value must fit the `int32` format.
    // For information about the value format, see the
    // [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#u-int32-value).</li></ul>
    google.protobuf.UInt32Value consecutive_errors = 1;

    // The amount of time between analyzing destinations for ejection.
    // Defaults to 10s.
    //
    // </br>**Configuration constraints**:<ul>
    // <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
    // Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
    // <li>The value cannot have granularity smaller than milliseconds.</li>
    // <li>The value must be at least 1ms.</li>
    // <li>For information about the value format,
    // see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
    google.protobuf.Duration interval = 2;

    // The minimum time duration for ejection, or the time when a destination
    // is considered unhealthy and not used for load balancing.
    // Defaults to 30s.
    //
    // </br>**Configuration constraints**:<ul>
    // <li>The value must be an integer or decimal value and a preferred unit, or multiple of these concatenated.
    // Examples: `1m`, `1h`, `1.5h`, `1s500ms`</li>
    // <li>The value cannot have granularity smaller than milliseconds.</li>
    // <li>The value must be at least 1ms.</li>
    // <li>For information about the value format,
    // see the [ParseDuration documentation](https://pkg.go.dev/time#ParseDuration).</li></ul>
    google.protobuf.Duration base_ejection_time = 3;

    // The maximum percentage of destinations that can be removed
    // from the healthy connection pool at a time.
    // For example, if you have 10 total destinations that the policy selects,
    // and you set this value to 50 percent, 5 destinations can be removed at once.
    // At least 1 destination can always be removed, regardless of the value that you set.
    // The default value is `100`.
    //
    // </br>**Configuration constraints**: The value must be in the range 0 - 100, inclusive. If set to 0, the default
    // Istio value, 10%, is used.
    uint32 max_ejection_percent = 4;

    // The number of gateway errors before a host is ejected from the connection pool.
    // 
    // </br>**Implementation notes**:<ul>
    // <li>When the upstream host is accessed over HTTP, a 502, 503, or 504 reponse
    // code qualifies as a gateway error.</li>
    // <li>When the upstream host is accessed over
    // an opaque TCP connection, connection timeouts and connection error/failure
    // events qualify as a gateway error.</li>
    // <li>This feature is disabled by default or when set to the value 0.</li>
    // <li>This field (`consecutiveGatewayErrors`) and `consecutiveErrors` can be
    // used separately or together. Because the errors counted by
    // `consecutiveGatewayErrors` are also included in `consecutiveErrors`,
    // if the value of `consecutiveGatewayErrors` is greater than or equal to
    // the value of `consecutiveErrors`, `consecutiveGatewayErrors` has
    // no effect.</li></ul>
    //
    // **Configuration constraints**:<ul>
    // <li>The value must be greater than or equal to 0.</li>
    // <li>The maximum value must fit the `int32` format.
    // For information about the value format, see the
    // [Google protocol buffer documentation](https://protobuf.dev/reference/protobuf/google.protobuf/#u-int32-value).</li></ul>
    google.protobuf.UInt32Value consecutive_gateway_errors = 5;

  }

}

// The status of the policy after it is applied to your Gloo environment.
message OutlierDetectionPolicyStatus {
  // The state and workspace conditions of the applied resource.
  .common.gloo.solo.io.Status common = 1;

  // The number of destination ports selected by the policy.
  uint32 num_selected_destination_ports = 2;
}

// The resources that the policy selects after it is successfully applied.
message OutlierDetectionPolicyReport {
  // A list of workspaces in which the policy can apply to workloads.
  map<string, .common.gloo.solo.io.Report> workspaces = 1;

  // A list of destination ports selected by the policy.
  repeated .common.gloo.solo.io.DestinationReference selected_destination_ports = 2;
}
