syntax = "proto3";

package resilience.policy.gloo.solo.io;

import "extproto/ext.proto";
import "github.com/solo-io/solo-apis/api/gloo.solo.io/common/v2/status_new.proto";
import "google/protobuf/wrappers.proto";
import "github.com/solo-io/solo-apis/api/gloo.solo.io/common/v2/selectors.proto";
import "github.com/solo-io/solo-apis/api/gloo.solo.io/common/v2/status.proto";
import "github.com/solo-io/solo-apis/api/gloo.solo.io/common/v2/references.proto";

option go_package = "github.com/solo-io/solo-apis/client-go/resilience.policy.gloo.solo.io/v2";

option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;

// ListenerConnectionPolicy is used to set the
// per_connection_buffer_limit_bytes for gateway listeners.
//
// ```
// apiVersion: trafficcontrol.policy.gloo.solo.io/v2
// kind: ListenerConnectionPolicy
// metadata:
//   name: my-policy
//   namespace: bookinfo
// spec:
//   config:
//     perConnectionBufferLimitBytes: 16384
//   applyToListener:
//   - virtualGateway:
//       name: virtual-gateway
//       namespace: bookinfo
//       cluster: my-cluster
//     port:
//       number: 443
// ```
message ListenerConnectionPolicySpec {
  // The VirtualGateway(s) and Port(s) to which this policy applies.
  repeated .common.gloo.solo.io.ListenerSelector apply_to_listeners = 1;

  message Config {
    // Required: Soft limit on size of the listenerâ€™s new connection read
    // and write buffers. 
    // Default value set by Envoy is 1MiB.
    google.protobuf.UInt32Value per_connection_buffer_limit_bytes = 1;
  }

  Config config = 2;
}

// reflects the status of the ListenerConnectionPolicy
message ListenerConnectionPolicyStatus {
  .common.gloo.solo.io.Status common = 1;
  
  // The number of virtual gateway listeners selected by the policy.
  uint32 num_selected_listeners = 2;
}

message ListenerConnectionPolicyReport {
  map<string, .common.gloo.solo.io.Report> workspaces = 1;

  // A list of virtual gateway listeners selected by the policy.
  repeated .common.gloo.solo.io.ListenerPortReference selected_listeners = 2;
}
