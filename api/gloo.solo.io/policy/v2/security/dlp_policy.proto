syntax = "proto3";

package security.policy.gloo.solo.io;

import "extproto/ext.proto";
import "google/protobuf/wrappers.proto";
import "envoy/type/percent.proto";

import "github.com/solo-io/envoy-gloo-ee/api/envoy/config/filter/http/transformation_ee/v2/transformation_ee_filter.proto";
import "github.com/solo-io/solo-apis/api/gloo.solo.io/common/v2/selectors.proto";
import "github.com/solo-io/solo-apis/api/gloo.solo.io/common/v2/status.proto";

option go_package = "github.com/solo-io/solo-apis/client-go/security.policy.gloo.solo.io/v2";

option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;


// Use a DLPPolicy (data loss prevention policy) to prevent sensitive data from being exposed.
// Gloo Gateway completes a series of regex replacements on the body or headers of responses that it processes.
// DLPPolicies are applied at the *Route* level.
message DLPPolicySpec {

  // Select the routes that the policy applies to.
  // If empty, the policy applies to all routes in the workspace.
  repeated .common.gloo.solo.io.RouteSelector apply_to_routes = 1;

  // The details of the DLP policy to apply to the selected routes.
  Config config  = 2;

  // Whether actions apply to responses, access logs, or both.
  // If empty, masking is enabled for responses bodies only.
  message Config {
    enum Sanitize {
      // Enable DLP masking for both responses bodies and access logs. Default value.
      ALL = 0;
      // Enable DLP masking for access logs only.
      ACCESS_LOGS = 1;
      // Enable DLP masking for response bodies only.
      RESPONSE_BODY = 2;
    }

    // List of data loss prevention actions to be applied.
    // These actions are applied in order, one at a time.
    repeated DlpAction actions = 1;

    // Whether actions apply to responses, access logs, or both.
    // If empty, masking is enabled for responses bodies only.
    Sanitize sanitize = 2;
  }
}

/*
    A single DLP action to mask sensitive data.
    You can apply preconfigured actions, create custom actions,
    and write key-value (header) actions.
    These actions can also be shadowed. A shadowed action is recorded
    in the statistics and debug logs, but is not committed in the response body.

    To use a predefined action, set the `predefinedAction` to one of the predefined actions.

    ```yaml
    - predefinedAction: VISA
    ```

    To create a custom action, specify the configuration in the `customAction` field. The default enum value
    is custom, so that can be left empty.

    ```yaml
    - customAction:
          name: test
          regexActions:
          - regex: "hello"
          - regex: "world"
          maskChar: Y
          percent: 60
    ```

    To create a key-value action, specify the configuration in the `keyValueAction` field. The default enum value
    is custom, so that can be left empty.

    ```yaml
    - keyValueAction:
        keysToMask:
        - x-my-header-01
        maskChar: _
        name: kv-action-1
        percent: 100
    ```


*/
message DlpAction {
  /*
    The following pre-defined actions map to subgroup 1 of the listed regex patterns:

    SSN:
			- '(?:^|\D)([0-9]{9})(?:\D|$)'
			- '(?:^|\D)([0-9]{3}\-[0-9]{2}\-[0-9]{4})(?:\D|$)'
			- '(?:^|\D)([0-9]{3}\ [0-9]{2}\ [0-9]{4})(?:\D|$)'

		MASTERCARD:
		  - '(?:^|\D)(5[1-5][0-9]{2}(?:\ |\-|)[0-9]{4}(?:\ |\-|)[0-9]{4}(?:\ |\-|)[0-9]{4})(?:\D|$)'

		VISA:
		  - '(?:^|\D)(4[0-9]{3}(?:\ |\-|)[0-9]{4}(?:\ |\-|)[0-9]{4}(?:\ |\-|)[0-9]{4})(?:\D|$)'

		AMEX:
		  - '(?:^|\D)((?:34|37)[0-9]{2}(?:\ |\-|)[0-9]{6}(?:\ |\-|)[0-9]{5})(?:\D|$)'

		DISCOVER:
		  - '(?:^|\D)(6011(?:\ |\-|)[0-9]{4}(?:\ |\-|)[0-9]{4}(?:\ |\-|)[0-9]{4})(?:\D|$)'

		JCB:
		  - '(?:^|\D)(3[0-9]{3}(?:\ |\-|)[0-9]{4}(?:\ |\-|)[0-9]{4}(?:\ |\-|)[0-9]{4})(?:\D|$)'
			- '(?:^|\D)((?:2131|1800)[0-9]{11})(?:\D|$)'

		DINERS_CLUB:
		  - '(?:^|\D)(30[0-5][0-9](?:\ |\-|)[0-9]{6}(?:\ |\-|)[0-9]{4})(?:\D|$)'
			- '(?:^|\D)((?:36|38)[0-9]{2}(?:\ |\-|)[0-9]{6}(?:\ |\-|)[0-9]{4})(?:\D|$)'

		CREDIT_CARD_TRACKERS:
			- '([1-9][0-9]{2}\-[0-9]{2}\-[0-9]{4}\^\d)'
			- '(?:^|\D)(\%?[Bb]\d{13,19}\^[\-\/\.\w\s]{2,26}\^[0-9][0-9][01][0-9][0-9]{3})'
			- '(?:^|\D)(\;\d{13,19}\=(?:\d{3}|)(?:\d{4}|\=))'

		ALL_CREDIT_CARDS:
		  - (All credit card related regexes from above)
    */
  enum PredefinedAction {
    ALL_CREDIT_CARDS = 0;
    SSN = 1;
    MASTERCARD = 2;
    VISA = 3;
    AMEX = 4;
    DISCOVER = 5;
    JCB = 6;
    DINERS_CLUB = 7;
    CREDIT_CARD_TRACKERS = 8;
  }

  // The configuration for the action.
  oneof action {
    // The predefined action to apply.
    PredefinedAction predefined_action = 1;
    
    // The custom action to apply.
    DlpCustomAction custom_action = 2;

    // The key-value action to apply.
    // Key-values actions affect access logs and response headers, but not response bodies.
    DlpKeyValueAction key_value_action = 4;
  }

  // If enabled, the action is recorded in debug logs, but not applied to response bodies
  // or headers.
  google.protobuf.BoolValue shadow = 3;
}

/*
    A custom action that you define to apply to the response body.

    The list of regex strings are applied in order. For instance, if the response body contains `hello world`,
    and you define the following custom action:
    ``` yaml
    customAction:
        name: test
        regexActions:
        - regex: "hello"
        - regex: "world"
        maskChar: Y
        percent: 60
        
    ```

    The result is masked in this way:
    `YYYlo YYYld`

    If `mask_char` and `percent` are not defined, the result is masked in this way:
    `XXXXo XXXXd`

*/
message DlpCustomAction {
  // The name of the custom action.
  // This name is used for logging and debugging purposes.
  string name = 1;
  // The masking character to replace the sensitive data.
  // Default: `X`
  google.protobuf.StringValue mask_char = 2;
  // The percent of the string to mask with the `mask_char`.
  // Rounds the ratio (percent/100) by using [std::round](http://www.cplusplus.com/reference/cmath/round/).
  // Default: 75%
  google.protobuf.FloatValue percent = 3;
  // List of regexes to apply to the response body. Data that matches the regexes
  // is masked. Regexes are applied iteratively in the order that they are
  // specified.
  repeated .envoy.config.filter.http.transformation_ee.v2.RegexAction regex_actions = 4;
}

// A key-value action to apply to response headers.
message DlpKeyValueAction {
  // The name of the key-value action.
  // This name is used for logging and debugging purposes.
  string name = 1;
  // The masking character to replace the sensitive data.
  // Default: `X`
  google.protobuf.StringValue mask_char = 2;
  // The percent of the string to mask with the `mask_char`.
  // Rounds the ratio (percent/100) by using [std::round](http://www.cplusplus.com/reference/cmath/round/).
  // Default: 75%
  google.protobuf.FloatValue percent = 3;
  // Required: The keys for which corresponding header names or dynamic metadata values are masked.
  repeated string keys_to_mask = 4;
}

// The status of the DLPPolicy.
message DLPPolicyStatus {
  // The state and workspace conditions of the applied resource.
  .common.gloo.solo.io.Status common = 1;

  // A count of references to all routes selected by the policy.
  uint32 num_selected_routes = 3;
}

message DLPPolicyReport {
  // The status of the resource in each workspace that it exists in.
  map<string, .common.gloo.solo.io.Report> workspaces = 1;

  // A list of references to all routes selected by the policy.
  repeated .common.gloo.solo.io.RouteReference selected_routes = 2;
}
