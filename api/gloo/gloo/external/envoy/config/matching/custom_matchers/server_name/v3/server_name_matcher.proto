syntax = "proto3";

import "validate/validate.proto";
import "xds/type/matcher/v3/matcher.proto";

package envoy.config.matching.custom_matchers.server_name.v3;

option java_package = "com.github.xds.type.matching.custom_matchers.server_name.v3";
option java_outer_classname = "ServerNameMatcherProto";
option java_multiple_files = true;

// [#protodoc-title: Server name matcher]

// Matches a specific server name provided in the client request against a set server names configured for the matcher to handle, with possible prefix wildcard.
message ServerNameMatcher {
  // Specifies a list of server names and a match action.
  message ServerNameSetMatcher {
    // A non-empty set of server names.
    // Server name can start with a wildcard prefix, e.g. "*.example.com".
    repeated string server_names = 1 [(validate.rules).repeated = {min_items: 1}];

    // Match action to apply when the input matches the server name.
    xds.type.matcher.v3.Matcher.OnMatch on_match = 2;
  }

  // Match server names. Order doesn't matter, the most specific server name is matched.
  repeated ServerNameSetMatcher server_name_matchers = 1;
}
option go_package = "github.com/solo-io/solo-apis/pkg/api/gloo.solo.io/external/envoy/config/matching/custom_matchers/server_name/v3";
import "extproto/ext.proto";
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;
option (extproto.equal_all) = true;
