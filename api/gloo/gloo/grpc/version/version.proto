syntax = "proto3";
package gloo.solo.io;
option go_package = "github.com/solo-io/solo-apis/pkg/api/gloo.solo.io/grpc/version";

import "validate/validate.proto";
import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

// type of gloo server instance
enum GlooType {
    Unknown = 0;
    Gateway = 1;
    Ingress = 2;
    Knative = 3;
}

message ServerVersion {
    GlooType type = 1;

    // Whether or not this is an enterprise distribution
    bool enterprise = 2;

    // The type of server distribution
    // Currently only kubernetes is supported
    oneof version_type {
        option (validate.required) = true;
        Kubernetes kubernetes = 3;
    }
}

message Kubernetes {
    message Container {
         string Tag = 1;
         string Name = 2;
         string Registry = 3;
    }

    // Array of containers comprising a single distribution of gloo
    repeated Container containers = 1;

    // namespace gloo is running in
    string namespace = 2;
}

message ClientVersion {
    string version = 1;
}

message Version {
    ClientVersion client = 1;
    // This field is an array of server versions because although there can only be 1 client version, there can
    // potentially be many instances of gloo running on a single cluster
    repeated ServerVersion server = 2;
}

