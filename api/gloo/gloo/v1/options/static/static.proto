syntax = "proto3";
package static.options.gloo.solo.io;

option go_package = "github.com/solo-io/solo-apis/pkg/api/gloo.solo.io/v1/options/static";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;
import "extproto/ext.proto";
option (extproto.hash_all) = true;

import "google/protobuf/wrappers.proto";
import "solo-apis/api/gloo/gloo/v1/options/service_spec.proto";

// Static upstreams are used to route request to services listening at fixed IP/Host & Port pairs.
// Static upstreams can be used to proxy any kind of service, and therefore contain a ServiceSpec
// for additional service-specific configuration.
// Unlike upstreams created by service discovery, Static Upstreams must be created manually by users
message UpstreamSpec {
    // A list of addresses and ports
    // at least one must be specified
    repeated Host hosts = 1;

    // Attempt to use outbound TLS
    // Gloo will automatically set this to true for port 443
    bool use_tls = 3;

    // An optional Service Spec describing the service listening at this address
    .options.gloo.solo.io.ServiceSpec service_spec = 5;

    // When set, automatically set the sni address to use to the addr field.
    // If both this and host.sni_addr are set, host.sni_addr has priority.
    // defaults to "true".
    google.protobuf.BoolValue auto_sni_rewrite = 6;
}

// Represents a single instance of an upstream
message Host {
    // Address (hostname or IP)
    string addr = 1;
    // Port the instance is listening on
    uint32 port = 2;

    // Address to use for SNI if using ssl.
    string sni_addr = 4;


    message HealthCheckConfig {
        // (Enterprise Only): Path to use when health checking this specific host.
        string path = 1;
    }

    // (Enterprise Only): Host specific health checking configuration.
    HealthCheckConfig health_check_config = 3;
}
