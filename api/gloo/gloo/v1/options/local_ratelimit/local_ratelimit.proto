syntax = "proto3";

package local_ratelimit.options.gloo.solo.io;

option go_package = "github.com/solo-io/solo-apis/pkg/api/gloo.solo.io/v1/options/local_ratelimit";

import "extproto/ext.proto";
option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;
import "github.com/solo-io/solo-kit/api/external/envoy/api/v2/core/base.proto";

import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";


// These options provide the ability to locally rate limit the connections in envoy.
// Ref. https://www.envoyproxy.io/docs/envoy/latest/configuration/listeners/network_filters/local_rate_limit_filter
message TokenBucket {
    // The maximum tokens that the bucket can hold. This is also the number of tokens that the bucket initially contains.
    // Must be greater than one.
    uint32 max_tokens = 1;

    // The number of tokens added to the bucket during each fill interval. If not specified, defaults to a single token.
    // Must be greater than zero.
    google.protobuf.UInt32Value tokens_per_fill = 2;

    // The fill interval that tokens are added to the bucket. During each fill interval tokens_per_fill are added to the bucket.
    // The bucket will never contain more than max_tokens tokens.
    // Defaults to 1 second.
    google.protobuf.Duration  fill_interval = 3;
}

message Settings {

    TokenBucket defaults = 1;

    bool local_rate_limit_per_downstream_connection = 2;

    bool enable_x_ratelimit_headers = 3;
}