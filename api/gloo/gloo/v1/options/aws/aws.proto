syntax = "proto3";
package aws.options.gloo.solo.io;

option go_package = "github.com/solo-io/solo-apis/pkg/api/gloo.solo.io/v1/options/aws";

import "extproto/ext.proto";
option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;

import "github.com/solo-io/solo-kit/api/v1/ref.proto";

// Upstream Spec for AWS Lambda Upstreams
// AWS Upstreams represent a collection of Lambda Functions for a particular AWS Account (IAM Role or User account)
// in a particular region
message UpstreamSpec {
    // The AWS Region where the desired Lambda Functions exist
    string region = 1;

    // A [Gloo Secret Ref](https://docs.solo.io/gloo-edge/latest/reference/cli/glooctl_create_secret_aws/) to an AWS Secret
    // AWS Secrets can be created with `glooctl secret create aws ...`
    // If the secret is created manually, it must conform to the following structure:
    //  ```
    //  access_key: <aws access key>
    //  secret_key: <aws secret key>
    //  session_token: <(optional) aws session token>
    //  ```
    core.solo.io.ResourceRef secret_ref = 2;

    // The list of Lambda Functions contained within this region.
    // This list will be automatically populated by Gloo if discovery is enabled for AWS Lambda Functions
    repeated LambdaFunctionSpec lambda_functions = 3;

    // (Optional): role_arn to use when assuming a role for a given request via STS.
    // If set this role_arn will override the value found in AWS_ROLE_ARN
    // This option will only be respected if STS credentials are enabled.
    // To enable STS credential fetching see Settings.Gloo.AwsOptions in settings.proto.
    string role_arn = 4;

    // (Optional): The AWS Account ID to use while calling if using resource based access
    string aws_account_id = 5;
   
    // Optional override to disable role chaining;
    bool disable_role_chaining = 6;
}

// Each Lambda Function Spec contains data necessary for Gloo to invoke Lambda functions:
// - name of the function
// - qualifier for the function
message LambdaFunctionSpec {
    // the logical name gloo should associate with this function. if left empty, it will default to
    // lambda_function_name+qualifier
    string logical_name = 1;

    // The Name of the Lambda Function as it appears in the AWS Lambda Portal
    string lambda_function_name  = 2;
    // The Qualifier for the Lambda Function. Qualifiers act as a kind of version
    // for Lambda Functions. See https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html for more info.
    string qualifier = 3;
}

// Each Lambda Function Spec contains data necessary for Gloo to invoke Lambda functions
// [#next-free-field: 8]
message DestinationSpec {
    // The Logical Name of the LambdaFunctionSpec to be invoked.
    string logical_name = 1;
    // Can be either Sync or Async.
    InvocationStyle invocation_style = 2;
    enum InvocationStyle {
        SYNC = 0;
        ASYNC = 1;
    }
    // Include headers, querystring, request path, and request method in the event payload sent to aws lambda
    bool request_transformation = 6;
    
    // de-jsonify response bodies returned from aws lambda
    bool response_transformation = 5;

    // Unwrap the response as if the proxy was an ALB.
    // Intended to ease migration when previously using alb to invoke Lambdas.
    // For further information see below link for the expected format when true.
    // https://docs.aws.amazon.com/elasticloadbalancing/latest/application/lambda-functions.html
    // Only one of `unwrapAsAlb` or `unwrapAsApiGateway` should be provided.
    // If more than one is provided only one will be checked with priority unwrapAsAlb, unwrapAsApiGateway
    bool unwrap_as_alb = 7;

    // Enterprise-Only
    // Unwrap the response as if the proxy was an AWS API Gateway.
    // Intended to ease migration when previously using API Gateway to invoke Lambdas.
    // Only one of `unwrapAsAlb` or `unwrapAsApiGateway` should be provided.
    // If more than one is provided only one will be checked with priority unwrapAsAlb, unwrapAsApiGateway
    bool unwrap_as_api_gateway = 8;
}
