syntax = "proto3";

package statefulsession.options.gloo.solo.io;

option go_package = "github.com/solo-io/solo-apis/pkg/api/gloo.solo.io/v1/enterprise/options/statefulsession";

import "google/protobuf/duration.proto";
import "validate/validate.proto";

// This configures the Envoy [Stateful Session](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/stateful_session_filter) filter for a listener
message StatefulSession {

    oneof SessionState {
        option (validate.required) = true;
        // Configure a cookie based session state - https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/http/stateful_session/cookie/v3/cookie.proto#envoy-v3-api-msg-extensions-http-stateful-session-cookie-v3-cookiebasedsessionstate
        // Exactly one of `cookie_based` or `header_based` must be set.
        CookieBasedSessionState cookie_based = 1;
        // Configure a header based session state - https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/http/stateful_session/cookie/v3/cookie.proto#envoy-v3-api-msg-extensions-http-stateful-session-cookie-v3-cookiebasedsessionstate
       // Exactly one of `cookie_based` or `header_based` must be set.
        HeaderBasedSessionState header_based = 2;
    }

    // If set to True, the HTTP request must be routed to the requested destination. If the requested destination is not available, Envoy returns 503. Defaults to False.
    bool strict = 3;
}

// Configuration for the [cookie-based session state](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/http/stateful_session/cookie/v3/cookie.proto#envoy-v3-api-msg-extensions-http-stateful-session-cookie-v3-cookiebasedsessionstate) filter
message CookieBasedSessionState {
    message Cookie {
        // Required, the name that will be used to obtain cookie value from downstream HTTP request or generate new cookie for downstream.
        string name = 1 [(validate.rules).message.required = true];
        // Path of cookie. This will be used to set the path of a new cookie when it is generated. If no path is specified here, no path will be set for the cookie.
        string path = 2;
        // Duration of cookie. This will be used to set the expiry time of a new cookie when it is generated. Set this to 0s to use a session cookie and disable cookie expiration.
        google.protobuf.Duration ttl = 3 [
            (validate.rules).duration = {
              required: true,
              gt: {seconds: 0}
            }
        ];
    }

    // Required, the cookie configuration used to track session state.
    Cookie cookie = 1 [(validate.rules).message.required = true];
}


// Configuration for the [header-based session state](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/http/stateful_session/header/v3/header.proto#extension-envoy-http-stateful-session-header) filter
message HeaderBasedSessionState {
    // Required, the header used to track session state.
    string header_name = 1 [(validate.rules).message.required = true];
}